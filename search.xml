<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>开发医院设置</title>
      <link href="/2022/09/04/%E5%BC%80%E5%8F%91%E5%8C%BB%E9%99%A2%E8%AE%BE%E7%BD%AE/"/>
      <url>/2022/09/04/%E5%BC%80%E5%8F%91%E5%8C%BB%E9%99%A2%E8%AE%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h3 id="搭建医院模块"><a href="#搭建医院模块" class="headerlink" title="搭建医院模块"></a>搭建医院模块</h3><h4 id="创建-service-hosp-模块"><a href="#创建-service-hosp-模块" class="headerlink" title="创建 service-hosp 模块"></a>创建 service-hosp 模块</h4><p>在 service 模块下创建医院子模块（service-hosp），用于开发医院的CRUD。</p><img src="\img\yygh\hospital\hospital01.png" style="zoom:25%;" /><p>使用的是 Maven 工程创建。</p><img src="\img\yygh\hospital\hospital02.png" style="zoom:33%;" /><p>下一步。</p><img src="\img\yygh\hospital\hospital03.png" style="zoom:33%;" /><p>注意：service-hosp 模块是创建在 service 模块之下。</p><h4 id="添加配置文件"><a href="#添加配置文件" class="headerlink" title="添加配置文件"></a>添加配置文件</h4><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 服务端口</span></span><br><span class="line"><span class="attr">server.port</span>=<span class="string">8201</span></span><br><span class="line"><span class="comment"># 服务名</span></span><br><span class="line"><span class="attr">spring.application.name</span>=<span class="string">service-hosp</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 环境设置：dev、test、prod</span></span><br><span class="line"><span class="attr">spring.profiles.active</span>=<span class="string">dev</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># mysql数据库连接</span></span><br><span class="line"><span class="attr">spring.datasource.driver-class-name</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="attr">spring.datasource.url</span>=<span class="string">jdbc:mysql://localhost:3306/yygh_hosp?characterEncoding=utf-8&amp;useSSL=false</span></span><br><span class="line"><span class="attr">spring.datasource.username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">spring.datasource.password</span>=<span class="string">123456</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#返回json的全局时间格式</span></span><br><span class="line"><span class="attr">spring.jackson.date-format</span>=<span class="string">yyyy-MM-dd HH:mm:ss</span></span><br><span class="line"><span class="attr">spring.jackson.time-zone</span>=<span class="string">GMT+8</span></span><br></pre></td></tr></table></figure><img src="\img\yygh\hospital\hospital04.png" style="zoom:25%;" /><h4 id="添加启动类"><a href="#添加启动类" class="headerlink" title="添加启动类"></a>添加启动类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ServiceHospApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(ServiceHospApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="\img\yygh\hospital\hospital05.png" style="zoom:25%;" /><blockquote><p>创建相关包，以便之后使用，项目结构如下：</p></blockquote><img src="\img\yygh\hospital\hospital06.png" style="zoom:25%;" /><h4 id="启动项目"><a href="#启动项目" class="headerlink" title="启动项目"></a>启动项目</h4><p>点击启动类运行时，发现报错。</p><img src="\img\yygh\hospital\hospital07.png" style="zoom: 25%;" /><p>该错误是我们在之前 service 模块中的 pom.xml 文件添加依赖时多添加了几个依赖，而目前又没有使用到，导致报错。只要将其注释掉，重新启动即可访问。</p><img src="\img\yygh\hospital\hospital08.png" style="zoom:25%;" /><p>浏览器访问连接：localhost:8201</p><img src="\img\yygh\hospital\hospital09.png" style="zoom: 33%;" /><h3 id="医院设置开发"><a href="#医院设置开发" class="headerlink" title="医院设置开发"></a>医院设置开发</h3><h4 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h4><h5 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h5><p>医院设置主要是用来保存开通医院的一些基本信息，每个医院一条信息，保存了医院编号（平台分配，全局唯一）和接口调用相关的签名 key 等信息，是整个流程的第一步，只有开通了医院设置信息，才可以上传医院相关信息。</p><p>我们所开发的功能就是基于单表的一个CRUD、锁定&#x2F;解锁和发送签名信息这些基本功能。</p><h5 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h5><blockquote><p>创建表</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> `yygh_hosp` <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4;</span><br><span class="line">USE `yygh_hosp`;</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># Structure <span class="keyword">for</span> <span class="keyword">table</span> &quot;hospital_set&quot;</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `hospital_set` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;编号&#x27;</span>,</span><br><span class="line">  `hosname` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;医院名称&#x27;</span>,</span><br><span class="line">  `hoscode` <span class="type">varchar</span>(<span class="number">30</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;医院编号&#x27;</span>,</span><br><span class="line">  `api_url` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;api基础路径&#x27;</span>,</span><br><span class="line">  `sign_key` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;签名秘钥&#x27;</span>,</span><br><span class="line">  `contacts_name` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;联系人&#x27;</span>,</span><br><span class="line">  `contacts_phone` <span class="type">varchar</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;联系人手机&#x27;</span>,</span><br><span class="line">  `status` tinyint(<span class="number">3</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;状态&#x27;</span>,</span><br><span class="line">  `create_time` <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `update_time` <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;更新时间&#x27;</span>,</span><br><span class="line">  `is_deleted` tinyint(<span class="number">3</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;逻辑删除(1:已删除，0:未删除)&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `uk_hoscode` (`hoscode`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB AUTO_INCREMENT<span class="operator">=</span><span class="number">2</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 COMMENT<span class="operator">=</span><span class="string">&#x27;医院设置表&#x27;</span>;</span><br></pre></td></tr></table></figure><blockquote><p>表结构</p></blockquote><img src="\img\yygh\hospital\hospitalSet01.png" style="zoom: 33%;" /><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hosname：医院名称</span><br><span class="line">hoscode：医院编号（平台分配，全局唯一，api接口必填信息）</span><br><span class="line">api<span class="emphasis">_url：医院回调的基础url（如：预约下单，要调用该地址去医院下单）</span></span><br><span class="line"><span class="emphasis">sign_</span>key：双方api接口调用的签名key，有平台生成</span><br><span class="line">contacts<span class="emphasis">_name：医院联系人姓名</span></span><br><span class="line"><span class="emphasis">contacts_</span>phone：医院联系人手机</span><br><span class="line">status：状态（锁定/解锁）</span><br></pre></td></tr></table></figure><h5 id="添加实体类"><a href="#添加实体类" class="headerlink" title="添加实体类"></a>添加实体类</h5><p>由于实体对象没有逻辑，这里提供实体类，不需要自己编写。</p><p>在 model 模块下添加项目的全部实体类。</p><img src="\img\yygh\hospital\hospitalSet02.png" style="zoom:25%;" /><blockquote><p>IDEA 软件中删除无效包的快捷键：<code>ctrl+alt+o</code>。</p></blockquote><h5 id="创建-Mapper-接口"><a href="#创建-Mapper-接口" class="headerlink" title="创建 Mapper 接口"></a>创建 Mapper 接口</h5><p>在 service-hosp 模块中的 mapper 包创建医院设置的接口文件：HospitalSetMapper.java。</p><p>在 service 模块中的 pom.xml 文件添加实体类依赖，以便开发接口时使用。</p><img src="\img\yygh\hospital\hospitalSet03.png" style="zoom:25%;" /><p>让 HospitalSetMapper 继承 BaseMapper类，方便医院设置的CRUD。</p><img src="\img\yygh\hospital\hospitalSet04.png" style="zoom:25%;" /><p>在 mapper&#x2F;xml 下添加 HospitalSetMapper.xml 文件。</p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.atguigu.hospital.mapper.HospitalSetMapper&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="\img\yygh\hospital\hospitalSet05.png" style="zoom:25%;" /><h5 id="创建-Service-接口及实现类"><a href="#创建-Service-接口及实现类" class="headerlink" title="创建 Service 接口及实现类"></a>创建 Service 接口及实现类</h5><p>创建 HospitalSetService 接口类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">HospitalSetService</span> <span class="keyword">extends</span> <span class="title class_">IService</span>&lt;HospitalSet&gt; &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="\img\yygh\hospital\hospitalSet06.png" style="zoom:25%;" /><p>创建 HospitalSetServiceImpl 接口实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HospitalSetServiceImpl</span> </span><br><span class="line">        <span class="keyword">extends</span> <span class="title class_">ServiceImpl</span>&lt;HospitalSetMapper, HospitalSet&gt; </span><br><span class="line">        <span class="keyword">implements</span> <span class="title class_">HospitalSetService</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="\img\yygh\hospital\hospitalSet07.png" style="zoom:25%;" /><h5 id="创建-Controller-类"><a href="#创建-Controller-类" class="headerlink" title="创建 Controller 类"></a>创建 Controller 类</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/admin/hosp/hospitalSet&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HospitalSetController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> HospitalSetService hospitalSetService;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="\img\yygh\hospital\hospitalSet08.png" style="zoom:25%;" /><h4 id="查询所有方法"><a href="#查询所有方法" class="headerlink" title="查询所有方法"></a>查询所有方法</h4><p>由于com.baomidou.mybatisplus.extension.service.impl.ServiceImpl 类已经默认实现了单表的 CRUD，分页查询也有默认实现，能够更加灵活和代码简洁把分页查询功能实现。</p><h5 id="查询所有医院设置信息"><a href="#查询所有医院设置信息" class="headerlink" title="查询所有医院设置信息"></a>查询所有医院设置信息</h5><p>在 HospitalSetController 类中添加查询所有医院设置信息的方法：findAllHospitalSet()。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 查询医院设置表中的所有数据</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@GetMapping(&quot;findAll&quot;)</span></span><br><span class="line">   <span class="keyword">public</span> List&lt;HospitalSet&gt; <span class="title function_">findAllHospitalSet</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">//调用service的方法</span></span><br><span class="line">       List&lt;HospitalSet&gt; list = hospitalSetService.list();</span><br><span class="line">       <span class="keyword">return</span> list;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>启动 service-hosp 模块。</p><img src="\img\yygh\hospital\hospitalSet10.png" style="zoom:25%;" /><p>浏览器访问接口：<a href="http://localhost:8201/admin/hosp/hospitalSet/findAll">http://localhost:8201/admin/hosp/hospitalSet/findAll</a></p><img src="\img\yygh\hospital\hospitalSet09.png" style="zoom:25%;" /><h4 id="逻辑删除方法"><a href="#逻辑删除方法" class="headerlink" title="逻辑删除方法"></a>逻辑删除方法</h4><h5 id="逻辑删除医院设置"><a href="#逻辑删除医院设置" class="headerlink" title="逻辑删除医院设置"></a>逻辑删除医院设置</h5><p>在 <code>HospitalSetController</code> 类中编写逻辑删除医院设置的方法： <code>removeHospSet()</code>。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@DeleteMapping(&quot;&#123;id&#125;&quot;)</span></span><br><span class="line">   <span class="keyword">public</span> Boolean <span class="title function_">removeHospitalSet</span><span class="params">(<span class="meta">@PathVariable</span> Long id)</span> &#123;</span><br><span class="line">       <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> hospitalSetService.removeById(id);</span><br><span class="line">       <span class="keyword">return</span> flag;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>写完删除方法之后，发现不能和查询方法一样使用路径的方式进行检测该方法的使用状况，这是需要使用到新的技术点——Swagger2，来进行检查方法是否正确。下面讲解Swagger2。</p><h4 id="Swagger2"><a href="#Swagger2" class="headerlink" title="Swagger2"></a>Swagger2</h4><h5 id="swagger2介绍"><a href="#swagger2介绍" class="headerlink" title="swagger2介绍"></a>swagger2介绍</h5><blockquote><p>什么是swagger2？</p></blockquote><p>编写和维护接口文档是每个程序员的职责，根据Swagger2可以快速帮助我们编写最新的API接口文档，再也不用担心开会前仍忙于整理各种资料了，间接提升了团队开发的沟通效率。</p><blockquote><p>常用注解</p></blockquote><p>swagger通过注解表明该接口会生成文档，包括接口名、请求方法、参数、返回信息的等等。</p><p>  @Api：修饰整个类，描述Controller的作用</p><p>  @ApiOperation：描述一个类的一个方法，或者说一个接口</p><p>  @ApiParam：单个参数描述</p><p>  @ApiModel：用对象来接收参数</p><p>  @ApiModelProperty：用对象接收参数时，描述对象的一个字段</p><p>  @ApiImplicitParam：一个请求参数</p><p>@ApiImplicitParams：多个请求参数</p><h5 id="SpringBoot整合Swagger2"><a href="#SpringBoot整合Swagger2" class="headerlink" title="SpringBoot整合Swagger2"></a>SpringBoot整合Swagger2</h5><blockquote><p>在 common 模块 pom.xml 引入依赖</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--swagger2依赖--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><img src="\img\yygh\hospital\hospitalSet11.png" style="zoom:25%;" /><p>PS：在 yygh-parent 中的 pom.xml 文件中已经添加了版本控制，这里不在添加版本，已引入就忽略。</p><blockquote><p>在 service-util 模块创建 swagger2 的配置类：Swagger2Config.java。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Swagger2配置信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableSwagger2</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Swagger2Config</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Docket <span class="title function_">webApiConfig</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Docket</span>(DocumentationType.SWAGGER_2)</span><br><span class="line">                .groupName(<span class="string">&quot;webApi&quot;</span>)</span><br><span class="line">                .apiInfo(webApiInfo())</span><br><span class="line">                .select()</span><br><span class="line">                <span class="comment">//只显示api路径下的页面</span></span><br><span class="line">                .paths(Predicates.and(PathSelectors.regex(<span class="string">&quot;/api/.*&quot;</span>)))</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Docket <span class="title function_">adminApiConfig</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Docket</span>(DocumentationType.SWAGGER_2)</span><br><span class="line">                .groupName(<span class="string">&quot;adminApi&quot;</span>)</span><br><span class="line">                .apiInfo(adminApiInfo())</span><br><span class="line">                .select()</span><br><span class="line">                <span class="comment">//只显示admin路径下的页面</span></span><br><span class="line">                .paths(Predicates.and(PathSelectors.regex(<span class="string">&quot;/admin/.*&quot;</span>)))</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ApiInfo <span class="title function_">webApiInfo</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ApiInfoBuilder</span>()</span><br><span class="line">                .title(<span class="string">&quot;网站-API文档&quot;</span>)</span><br><span class="line">                .description(<span class="string">&quot;本文档描述了网站微服务接口定义&quot;</span>)</span><br><span class="line">                .version(<span class="string">&quot;1.0&quot;</span>)</span><br><span class="line">                .contact(<span class="keyword">new</span> <span class="title class_">Contact</span>(<span class="string">&quot;atguigu&quot;</span>, <span class="string">&quot;http://atguigu.com&quot;</span>, <span class="string">&quot;898620073@qq.com&quot;</span>))</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ApiInfo <span class="title function_">adminApiInfo</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ApiInfoBuilder</span>()</span><br><span class="line">                .title(<span class="string">&quot;后台管理系统-API文档&quot;</span>)</span><br><span class="line">                .description(<span class="string">&quot;本文档描述了后台管理系统微服务接口定义&quot;</span>)</span><br><span class="line">                .version(<span class="string">&quot;1.0&quot;</span>)</span><br><span class="line">                .contact(<span class="keyword">new</span> <span class="title class_">Contact</span>(<span class="string">&quot;atguigu&quot;</span>, <span class="string">&quot;http://atguigu.com&quot;</span>, <span class="string">&quot;898620073@qq.com&quot;</span>))</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="\img\yygh\hospital\hospitalSet12.png" style="zoom:25%;" /><blockquote><p>在 service-hosp 模块的启动类中添加 <code>@ComponentScan()</code>注解，作用是设置统一扫描规则。</p><p>因为 swagger 配置文件所在包路径和医院设置api所在包不同，启动时，医院设置的启动类无法扫描到 Swagger 的配置文件（Swagger2Config），故需要添加 <code>@ComponentScan(basePackages = &quot;com.atguigu&quot;)</code> 并指明扫描规则。</p></blockquote><img src="\img\yygh\hospital\hospitalSet13.png" style="zoom:25%;" /><h5 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h5><blockquote><p>在 service 模块中的 pom.xml 文件引入 common 依赖。</p><p>注意：引入依赖包时不要错误，因为我在引入依赖包时出错，导致在测试时无法访问地址，查了大半天才查出来。</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--引入项目中的common下的service-util依赖包--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.atguigu<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>service-util<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>在 <code>HospitalSetController</code> 上添加注解 <code>@Api()</code>，说明该类的作用</p><p>在 <code>findAllHospitalSet()</code> 和 <code>removeHospSet()</code> 方法中，添加 <code>@ApiOperation</code> 注解，描述该方法的作用。</p><p>详细代码如下：</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 医院设置管理的业务逻辑层</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Api(tags = &quot;医院设置管理&quot;)</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/admin/hosp/hospitalSet&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HospitalSetController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 注入Service</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> HospitalSetService hospitalSetService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询医院设置表中的所有数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;查询所有医院设置&quot;)</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;findAll&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;HospitalSet&gt; <span class="title function_">findAllHospitalSet</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//调用service的方法</span></span><br><span class="line">        List&lt;HospitalSet&gt; list = hospitalSetService.list();</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据id逻辑删除医院设置</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;删除医院设置&quot;)</span></span><br><span class="line">    <span class="meta">@DeleteMapping(&quot;&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Boolean <span class="title function_">removeHospitalSet</span><span class="params">(<span class="meta">@PathVariable</span> Long id)</span> &#123;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> hospitalSetService.removeById(id);</span><br><span class="line">        <span class="keyword">return</span> flag;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>swagger的固定访问地址：http:&#x2F;&#x2F;项目IP地址:端口号&#x2F;swagger-ui.html</p><p>浏览器访问路径：<a href="http://localhost:8201/swagger-ui.html">http://localhost:8201/swagger-ui.html</a></p><img src="\img\yygh\hospital\hospitalSet14.png" style="zoom:33%;" /><p>访问时，发现无法访问，需要手动输入地址。</p><p>报错内容：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Unable to infer base url. This is common when using dynamic servlet registration or when the API is behind an API Gateway. The base url is the root of where all the swagger resources are served. For e.g. if the api is available at http://example.org/api/v2/api-docs then the base url is http://example.org/api/. Please enter the location manually:</span><br><span class="line">无法推断基本网址。 这在使用动态 servlet 注册或 API 位于 API 网关后面时很常见。 基本 url 是提供所有 swagger 资源的根。 例如 如果 api 在 http://example.org/api/v2/api-docs 上可用，则基本 url 是 http://example.org/api/。 请手动输入位置：</span><br></pre></td></tr></table></figure><p>低级错误：在 service 模块引入包依赖时，依赖错误，引入成 common 依赖包的，应该是 service-util 依赖包。将依赖包修改即可访问。</p><p>修改依赖包：</p><img src="\img\yygh\hospital\hospitalSet16.png" style="zoom:25%;" /><p>重新访问：<a href="http://localhost:8201/swagger-ui.html%E3%80%82%E8%AE%BF%E9%97%AE%E6%88%90%E5%8A%9F">http://localhost:8201/swagger-ui.html。访问成功</a></p><img src="\img\yygh\hospital\hospitalSet15.png" style="zoom:33%;" /><blockquote><p>测试查询所用医院设置方法</p></blockquote><p>点击 <code>Try it out!</code> 进行方法的测试：</p><img src="\img\yygh\hospital\hospitalSet17.png" style="zoom:25%;" /><p>测试结果：</p><img src="\img\yygh\hospital\hospitalSet18.png" style="zoom:25%;" /><blockquote><p>测试逻辑删除医院设置方法</p></blockquote><p>第一步：先输入需要删除的医院设置id值；</p><p>第二步：点击 <code>Try it out!</code> 进行删除操作。</p><img src="\img\yygh\hospital\hospitalSet19.png" style="zoom:25%;" /><p>测试结果：</p><img src="\img\yygh\hospital\hospitalSet20.png" style="zoom:25%;" /><p>数据库查看：</p><img src="\img\yygh\hospital\hospitalSet21.png" style="zoom:25%;" /><p>医院设置表中的id&#x3D;6的删除字段由原来的0变为1。</p><h4 id="统一返回结果"><a href="#统一返回结果" class="headerlink" title="统一返回结果"></a>统一返回结果</h4><p>由查询方法和删除方法可知，它们两的返回结果一个是 List&lt;&gt; ，一个是 Boolean。这样不方法我们进行开发，所有这里将数据的返回结果统一指定规则。</p><p>因为项目中的所有开发，都要统一返回结果，则在 common 公共类中的 common-util 模块下添加统一返回结果的类：Result 和 ResultCodeEnum。</p><h5 id="Result-类"><a href="#Result-类" class="headerlink" title="Result 类"></a>Result 类</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 全局统一返回结果类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ApiModel(value = &quot;全局统一返回结果&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Result</span>&lt;T&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;返回码&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer code;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;返回消息&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String message;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;返回数据&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> T data;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Result</span><span class="params">()</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">static</span> &lt;T&gt; Result&lt;T&gt; <span class="title function_">build</span><span class="params">(T data)</span> &#123;</span><br><span class="line">        Result&lt;T&gt; result = <span class="keyword">new</span> <span class="title class_">Result</span>&lt;T&gt;();</span><br><span class="line">        <span class="keyword">if</span> (data != <span class="literal">null</span>)</span><br><span class="line">            result.setData(data);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; Result&lt;T&gt; <span class="title function_">build</span><span class="params">(T body, ResultCodeEnum resultCodeEnum)</span> &#123;</span><br><span class="line">        Result&lt;T&gt; result = build(body);</span><br><span class="line">        result.setCode(resultCodeEnum.getCode());</span><br><span class="line">        result.setMessage(resultCodeEnum.getMessage());</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; Result&lt;T&gt; <span class="title function_">build</span><span class="params">(Integer code, String message)</span> &#123;</span><br><span class="line">        Result&lt;T&gt; result = build(<span class="literal">null</span>);</span><br><span class="line">        result.setCode(code);</span><br><span class="line">        result.setMessage(message);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span>&lt;T&gt; Result&lt;T&gt; <span class="title function_">ok</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Result.ok(<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 操作成功</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;T&gt;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span>&lt;T&gt; Result&lt;T&gt; <span class="title function_">ok</span><span class="params">(T data)</span>&#123;</span><br><span class="line">        Result&lt;T&gt; result = build(data);</span><br><span class="line">        <span class="keyword">return</span> build(data, ResultCodeEnum.SUCCESS);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span>&lt;T&gt; Result&lt;T&gt; <span class="title function_">fail</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Result.fail(<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 操作失败</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;T&gt;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span>&lt;T&gt; Result&lt;T&gt; <span class="title function_">fail</span><span class="params">(T data)</span>&#123;</span><br><span class="line">        Result&lt;T&gt; result = build(data);</span><br><span class="line">        <span class="keyword">return</span> build(data, ResultCodeEnum.FAIL);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Result&lt;T&gt; <span class="title function_">message</span><span class="params">(String msg)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.setMessage(msg);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Result&lt;T&gt; <span class="title function_">code</span><span class="params">(Integer code)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.setCode(code);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isOk</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">this</span>.getCode().intValue() == ResultCodeEnum.SUCCESS.getCode().intValue()) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="ResultCodeEnum-枚举类"><a href="#ResultCodeEnum-枚举类" class="headerlink" title="ResultCodeEnum 枚举类"></a>ResultCodeEnum 枚举类</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 统一返回结果状态信息类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Getter</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">ResultCodeEnum</span> &#123;</span><br><span class="line"></span><br><span class="line">    SUCCESS(<span class="number">200</span>,<span class="string">&quot;成功&quot;</span>),</span><br><span class="line">    FAIL(<span class="number">201</span>, <span class="string">&quot;失败&quot;</span>),</span><br><span class="line">    PARAM_ERROR( <span class="number">202</span>, <span class="string">&quot;参数不正确&quot;</span>),</span><br><span class="line">    SERVICE_ERROR(<span class="number">203</span>, <span class="string">&quot;服务异常&quot;</span>),</span><br><span class="line">    DATA_ERROR(<span class="number">204</span>, <span class="string">&quot;数据异常&quot;</span>),</span><br><span class="line">    DATA_UPDATE_ERROR(<span class="number">205</span>, <span class="string">&quot;数据版本异常&quot;</span>),</span><br><span class="line"></span><br><span class="line">    LOGIN_AUTH(<span class="number">208</span>, <span class="string">&quot;未登陆&quot;</span>),</span><br><span class="line">    PERMISSION(<span class="number">209</span>, <span class="string">&quot;没有权限&quot;</span>),</span><br><span class="line"></span><br><span class="line">    CODE_ERROR(<span class="number">210</span>, <span class="string">&quot;验证码错误&quot;</span>),</span><br><span class="line"><span class="comment">//    LOGIN_MOBLE_ERROR(211, &quot;账号不正确&quot;),</span></span><br><span class="line">    LOGIN_DISABLED_ERROR(<span class="number">212</span>, <span class="string">&quot;改用户已被禁用&quot;</span>),</span><br><span class="line">    REGISTER_MOBLE_ERROR(<span class="number">213</span>, <span class="string">&quot;手机号已被使用&quot;</span>),</span><br><span class="line">    LOGIN_AURH(<span class="number">214</span>, <span class="string">&quot;需要登录&quot;</span>),</span><br><span class="line">    LOGIN_ACL(<span class="number">215</span>, <span class="string">&quot;没有权限&quot;</span>),</span><br><span class="line"></span><br><span class="line">    URL_ENCODE_ERROR( <span class="number">216</span>, <span class="string">&quot;URL编码失败&quot;</span>),</span><br><span class="line">    ILLEGAL_CALLBACK_REQUEST_ERROR( <span class="number">217</span>, <span class="string">&quot;非法回调请求&quot;</span>),</span><br><span class="line">    FETCH_ACCESSTOKEN_FAILD( <span class="number">218</span>, <span class="string">&quot;获取accessToken失败&quot;</span>),</span><br><span class="line">    FETCH_USERINFO_ERROR( <span class="number">219</span>, <span class="string">&quot;获取用户信息失败&quot;</span>),</span><br><span class="line">    <span class="comment">//LOGIN_ERROR( 23005, &quot;登录失败&quot;),</span></span><br><span class="line"></span><br><span class="line">    PAY_RUN(<span class="number">220</span>, <span class="string">&quot;支付中&quot;</span>),</span><br><span class="line">    CANCEL_ORDER_FAIL(<span class="number">225</span>, <span class="string">&quot;取消订单失败&quot;</span>),</span><br><span class="line">    CANCEL_ORDER_NO(<span class="number">225</span>, <span class="string">&quot;不能取消预约&quot;</span>),</span><br><span class="line"></span><br><span class="line">    HOSCODE_EXIST(<span class="number">230</span>, <span class="string">&quot;医院编号已经存在&quot;</span>),</span><br><span class="line">    NUMBER_NO(<span class="number">240</span>, <span class="string">&quot;可预约号不足&quot;</span>),</span><br><span class="line">    TIME_NO(<span class="number">250</span>, <span class="string">&quot;当前时间不可以预约&quot;</span>),</span><br><span class="line"></span><br><span class="line">    SIGN_ERROR(<span class="number">300</span>, <span class="string">&quot;签名错误&quot;</span>),</span><br><span class="line">    HOSPITAL_OPEN(<span class="number">310</span>, <span class="string">&quot;医院未开通，暂时不能访问&quot;</span>),</span><br><span class="line">    HOSPITAL_LOCK(<span class="number">320</span>, <span class="string">&quot;医院被锁定，暂时不能访问&quot;</span>),</span><br><span class="line">    ;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer code;</span><br><span class="line">    <span class="keyword">private</span> String message;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">ResultCodeEnum</span><span class="params">(Integer code, String message)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">        <span class="built_in">this</span>.message = message;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="\img\yygh\hospital\hospitalSet22.png" style="zoom:25%;" /><h4 id="查询和删除方法优化"><a href="#查询和删除方法优化" class="headerlink" title="查询和删除方法优化"></a>查询和删除方法优化</h4><p>在 service 模块的 pom.xml 文件引入 common-util 依赖包。</p><img src="\img\yygh\hospital\hospitalSet23.png" style="zoom:25%;" /><p>优化查询所有医院设置的方法代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 查询医院设置表中的所有数据</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@ApiOperation(value = &quot;查询所有医院设置&quot;)</span></span><br><span class="line">   <span class="meta">@GetMapping(&quot;findAll&quot;)</span></span><br><span class="line">   <span class="keyword">public</span> Result <span class="title function_">findAllHospitalSet</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">//调用service的方法</span></span><br><span class="line">       List&lt;HospitalSet&gt; list = hospitalSetService.list();</span><br><span class="line">       <span class="keyword">return</span> Result.ok(list);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>优化逻辑删除医院设置的方法代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据id逻辑删除医院设置</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ApiOperation(value = &quot;删除医院设置&quot;)</span></span><br><span class="line"><span class="meta">@DeleteMapping(&quot;&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Result <span class="title function_">removeHospSet</span><span class="params">(<span class="meta">@PathVariable</span> Long id)</span> &#123;</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> hospitalSetService.removeById(id);</span><br><span class="line">    <span class="keyword">if</span>(flag) &#123;</span><br><span class="line">        <span class="keyword">return</span> Result.ok();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Result.fail();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>启动医院设置的启动类，并使用浏览器访问：<a href="http://localhost:8201/swagger-ui.html%E3%80%82">http://localhost:8201/swagger-ui.html。</a></p><p>测试查询所有医院设置。</p><img src="\img\yygh\hospital\hospitalSet24.png" style="zoom:25%;" /><p>测试逻辑删除医院设置。</p><img src="\img\yygh\hospital\hospitalSet25.png" style="zoom:25%;" /><p>可以看到，返回的我们定义的统一返回结果数据。</p><h4 id="分页条件查询方法"><a href="#分页条件查询方法" class="headerlink" title="分页条件查询方法"></a>分页条件查询方法</h4><blockquote><p>编写医院设置的 vo 类，用于封装条件。在上面引入的 vo 包中，里面就包含有医院设置的 vo 类，这里不再单独编写。代码如下：</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HospitalSetQueryVo</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;医院名称&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String hosname;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;医院编号&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String hoscode;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>编写分页条件查询方法：findPageHospSe()</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 分页条件查询</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@ApiOperation(value = &quot;分页条件查询&quot;)</span></span><br><span class="line">   <span class="meta">@GetMapping(&quot;findPageHospSet/&#123;current&#125;/&#123;limit&#125;&quot;)</span></span><br><span class="line">   <span class="keyword">public</span> Result <span class="title function_">findPageHospSet</span><span class="params">(<span class="meta">@PathVariable</span> <span class="type">long</span> current,</span></span><br><span class="line"><span class="params">                                 <span class="meta">@PathVariable</span> <span class="type">long</span> limit,</span></span><br><span class="line"><span class="params">                                 HospitalSetQueryVo hospitalSetQueryVo)</span> &#123;</span><br><span class="line">       <span class="comment">//创建page对象，传递当前页，每页记录数</span></span><br><span class="line">       Page&lt;HospitalSet&gt; page = <span class="keyword">new</span> <span class="title class_">Page</span>&lt;&gt;(current,limit);</span><br><span class="line">       <span class="comment">//使用QueryWrapper条件构造器构建条件</span></span><br><span class="line">       QueryWrapper&lt;HospitalSet&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">       <span class="comment">// 获取参数，用于判断是否存在该值</span></span><br><span class="line">       <span class="type">String</span> <span class="variable">hosname</span> <span class="operator">=</span> hospitalSetQueryVo.getHosname();<span class="comment">//医院名称</span></span><br><span class="line">       <span class="type">String</span> <span class="variable">hoscode</span> <span class="operator">=</span> hospitalSetQueryVo.getHoscode();<span class="comment">//医院编号</span></span><br><span class="line">       <span class="keyword">if</span>(!StringUtils.isEmpty(hosname)) &#123;</span><br><span class="line">           wrapper.like(<span class="string">&quot;hosname&quot;</span>,hospitalSetQueryVo.getHosname());</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">if</span>(!StringUtils.isEmpty(hoscode)) &#123;</span><br><span class="line">           wrapper.eq(<span class="string">&quot;hoscode&quot;</span>,hospitalSetQueryVo.getHoscode());</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="comment">//调用方法实现分页查询</span></span><br><span class="line">       Page&lt;HospitalSet&gt; pageHospitalSet = hospitalSetService.page(page, wrapper);</span><br><span class="line">       <span class="comment">//返回结果</span></span><br><span class="line">       <span class="keyword">return</span> Result.ok(pageHospitalSet);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>重启启动类，访问：<a href="http://localhost:8201/swagger-ui.html">http://localhost:8201/swagger-ui.html</a></p><img src="\img\yygh\hospital\hospitalSet26.png" style="zoom:25%;" /><p>测试结果</p><img src="\img\yygh\hospital\hospitalSet27.png" style="zoom:25%;" /><h5 id="代码优化"><a href="#代码优化" class="headerlink" title="代码优化"></a>代码优化</h5><p>上面代码是使用单个数据的查询，传到前端之后，不便宜操作，所有可以将代码修改为通过 json 格式的方式进行数据的传输，具体操作如下：</p><p>在 <code>HospitalSetQueryVo</code> 参数前面添加 <code>@RequestBody</code> 且设置 <code>(required = false)</code> ，将 @GitMapping 注解修改为 @PostMapping 注解，因为只有 @PostMapping  才能获取到 @RequestBody 注解的值。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 分页条件查询</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@ApiOperation(value = &quot;分页条件查询&quot;)</span></span><br><span class="line">   <span class="meta">@PostMapping(&quot;findPageHospSet/&#123;current&#125;/&#123;limit&#125;&quot;)</span></span><br><span class="line">   <span class="keyword">public</span> Result <span class="title function_">findPageHospSet</span><span class="params">(<span class="meta">@PathVariable</span> <span class="type">long</span> current,</span></span><br><span class="line"><span class="params">                                 <span class="meta">@PathVariable</span> <span class="type">long</span> limit,</span></span><br><span class="line"><span class="params">                                 <span class="meta">@RequestBody</span> (required = <span class="literal">false</span>)</span></span><br><span class="line">                                             HospitalSetQueryVo hospitalSetQueryVo) &#123;</span><br><span class="line">       <span class="comment">//创建page对象，传递当前页，每页记录数</span></span><br><span class="line">       Page&lt;HospitalSet&gt; page = <span class="keyword">new</span> <span class="title class_">Page</span>&lt;&gt;(current,limit);</span><br><span class="line">       <span class="comment">//使用QueryWrapper条件构造器构建条件</span></span><br><span class="line">       QueryWrapper&lt;HospitalSet&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">       <span class="comment">// 获取参数，用于判断是否存在该值</span></span><br><span class="line">       <span class="type">String</span> <span class="variable">hosname</span> <span class="operator">=</span> hospitalSetQueryVo.getHosname();<span class="comment">//医院名称</span></span><br><span class="line">       <span class="type">String</span> <span class="variable">hoscode</span> <span class="operator">=</span> hospitalSetQueryVo.getHoscode();<span class="comment">//医院编号</span></span><br><span class="line">       <span class="keyword">if</span>(!StringUtils.isEmpty(hosname)) &#123;</span><br><span class="line">           wrapper.like(<span class="string">&quot;hosname&quot;</span>,hospitalSetQueryVo.getHosname());</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">if</span>(!StringUtils.isEmpty(hoscode)) &#123;</span><br><span class="line">           wrapper.eq(<span class="string">&quot;hoscode&quot;</span>,hospitalSetQueryVo.getHoscode());</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="comment">//调用方法实现分页查询</span></span><br><span class="line">       Page&lt;HospitalSet&gt; pageHospitalSet = hospitalSetService.page(page, wrapper);</span><br><span class="line">       <span class="comment">//返回结果</span></span><br><span class="line">       <span class="keyword">return</span> Result.ok(pageHospitalSet);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h5 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h5><p>步骤同上。</p><img src="\img\yygh\hospital\hospitalSet28.png" style="zoom:25%;" /><p>可以看到现在是 json 格式传递数据。</p><img src="\img\yygh\hospital\hospitalSet29.png" style="zoom:25%;" /><p>查询到的结果一样。</p><h4 id="添加方法"><a href="#添加方法" class="headerlink" title="添加方法"></a>添加方法</h4><p>需要设置签名密钥且将密钥进行加密，这里使用的是 MD5 工具生成并加密。</p><p>在 service-util 模块中编写 MD5 工具类。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">MD5</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">encrypt</span><span class="params">(String strSrc)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">char</span> hexChars[] = &#123; <span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;7&#x27;</span>, <span class="string">&#x27;8&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;9&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;f&#x27;</span> &#125;;</span><br><span class="line">            <span class="type">byte</span>[] bytes = strSrc.getBytes();</span><br><span class="line">            <span class="type">MessageDigest</span> <span class="variable">md</span> <span class="operator">=</span> MessageDigest.getInstance(<span class="string">&quot;MD5&quot;</span>);</span><br><span class="line">            md.update(bytes);</span><br><span class="line">            bytes = md.digest();</span><br><span class="line">            <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> bytes.length;</span><br><span class="line">            <span class="type">char</span>[] chars = <span class="keyword">new</span> <span class="title class_">char</span>[j * <span class="number">2</span>];</span><br><span class="line">            <span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; bytes.length; i++) &#123;</span><br><span class="line">                <span class="type">byte</span> <span class="variable">b</span> <span class="operator">=</span> bytes[i];</span><br><span class="line">                chars[k++] = hexChars[b &gt;&gt;&gt; <span class="number">4</span> &amp; <span class="number">0xf</span>];</span><br><span class="line">                chars[k++] = hexChars[b &amp; <span class="number">0xf</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">String</span>(chars);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchAlgorithmException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;MD5加密出错！！+&quot;</span> + e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="\img\yygh\hospital\hospitalSet30.png" style="zoom:25%;" /><p>编写添加医院设置的方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 添加医院设置</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> hospitalSet</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@ApiOperation(value = &quot;添加医院设置&quot;)</span></span><br><span class="line">   <span class="meta">@PostMapping(&quot;saveHospitalSet&quot;)</span></span><br><span class="line">   <span class="keyword">public</span> Result <span class="title function_">saveHospitalSet</span><span class="params">(<span class="meta">@RequestBody</span> HospitalSet hospitalSet)</span> &#123;</span><br><span class="line">       <span class="comment">//设置医院状态 1 使用 0 不能使用</span></span><br><span class="line">       hospitalSet.setStatus(<span class="number">1</span>);</span><br><span class="line">       <span class="comment">//签名秘钥</span></span><br><span class="line">       <span class="type">Random</span> <span class="variable">random</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">       hospitalSet.setSignKey(MD5.encrypt(System.currentTimeMillis()+<span class="string">&quot;&quot;</span>+random.nextInt(<span class="number">1000</span>)));</span><br><span class="line">       <span class="comment">//调用service</span></span><br><span class="line">       <span class="type">boolean</span> <span class="variable">save</span> <span class="operator">=</span> hospitalSetService.save(hospitalSet);</span><br><span class="line">       <span class="keyword">if</span>(save) &#123;</span><br><span class="line">           <span class="keyword">return</span> Result.ok(); <span class="comment">//添加成功</span></span><br><span class="line">       &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">           <span class="keyword">return</span> Result.fail(); <span class="comment">//添加失败</span></span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h5 id="测试-2"><a href="#测试-2" class="headerlink" title="测试"></a>测试</h5><p>重启启动类并访问。</p><img src="\img\yygh\hospital\hospitalSet31.png" style="zoom:25%;" /><p>进行添加操作</p><blockquote><p>json数据</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;apiUrl&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://localhost:9999&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;contactsName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;张三&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;contactsPhone&quot;</span><span class="punctuation">:</span> <span class="string">&quot;13978986754&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hoscode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1000_6&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hosname&quot;</span><span class="punctuation">:</span> <span class="string">&quot;深圳人民医院&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;isDeleted&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></blockquote><img src="\img\yygh\hospital\hospitalSet32.png" style="zoom:25%;" /><p>数据库查看</p><img src="\img\yygh\hospital\hospitalSet33.png" style="zoom:25%;" /><h4 id="根据id查询方法"><a href="#根据id查询方法" class="headerlink" title="根据id查询方法"></a>根据id查询方法</h4><p>编写根据id查询医院设置的方法。</p><blockquote><p>测试与添加方法类似。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 根据id获取医院设置</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@ApiOperation(value = &quot;根据id查询医院设置&quot;)</span></span><br><span class="line">   <span class="meta">@GetMapping(&quot;getHospitalSet/&#123;id&#125;&quot;)</span></span><br><span class="line">   <span class="keyword">public</span> Result <span class="title function_">getHospitalSet</span><span class="params">(<span class="meta">@PathVariable</span> Long id)</span> &#123;</span><br><span class="line">       <span class="type">HospitalSet</span> <span class="variable">hospitalSet</span> <span class="operator">=</span> hospitalSetService.getById(id);</span><br><span class="line">       <span class="keyword">return</span> Result.ok(hospitalSet);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h4 id="修改方法"><a href="#修改方法" class="headerlink" title="修改方法"></a>修改方法</h4><blockquote><p>测试与添加方法类似。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 修改医院设置</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> hospitalSet</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@ApiOperation(value = &quot;修改医院设置&quot;)</span></span><br><span class="line">   <span class="meta">@PostMapping(&quot;updateHospitalSet&quot;)</span></span><br><span class="line">   <span class="keyword">public</span> Result <span class="title function_">updateHospitalSet</span><span class="params">(<span class="meta">@RequestBody</span> HospitalSet hospitalSet)</span> &#123;</span><br><span class="line">       <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> hospitalSetService.updateById(hospitalSet);</span><br><span class="line">       <span class="keyword">if</span>(flag) &#123;</span><br><span class="line">           <span class="keyword">return</span> Result.ok();</span><br><span class="line">       &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">           <span class="keyword">return</span> Result.fail();</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h4 id="批量删除方法"><a href="#批量删除方法" class="headerlink" title="批量删除方法"></a>批量删除方法</h4><blockquote><p>测试与添加方法类似。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 批量删除医院设置</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> idList</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@ApiOperation(value = &quot;删除医院设置&quot;)</span></span><br><span class="line">   <span class="meta">@DeleteMapping(&quot;batchRemove&quot;)</span></span><br><span class="line">   <span class="keyword">public</span> Result <span class="title function_">batchRemoveHospitalSet</span><span class="params">(<span class="meta">@RequestBody</span> List&lt;Long&gt; idList)</span> &#123;</span><br><span class="line">       hospitalSetService.removeByIds(idList);</span><br><span class="line">       <span class="keyword">return</span> Result.ok();</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h4 id="锁定和解锁方法"><a href="#锁定和解锁方法" class="headerlink" title="锁定和解锁方法"></a>锁定和解锁方法</h4><blockquote><p>测试与添加方法类似。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 医院设置的锁定和解锁功能</span></span><br><span class="line"><span class="comment">    *      医院设置只有在解锁的状态下才能使用</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> status</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@ApiOperation(value = &quot;医院设置的锁定和解锁&quot;)</span></span><br><span class="line">   <span class="meta">@PutMapping(&quot;lockHospitalSet/&#123;id&#125;/&#123;status&#125;&quot;)</span></span><br><span class="line">   <span class="keyword">public</span> Result <span class="title function_">lockHospitalSet</span><span class="params">(<span class="meta">@PathVariable</span> Long id,</span></span><br><span class="line"><span class="params">                                 <span class="meta">@PathVariable</span> Integer status)</span> &#123;</span><br><span class="line">       <span class="comment">//根据id查询医院设置信息</span></span><br><span class="line">       <span class="type">HospitalSet</span> <span class="variable">hospitalSet</span> <span class="operator">=</span> hospitalSetService.getById(id);</span><br><span class="line">       <span class="comment">//设置状态</span></span><br><span class="line">       hospitalSet.setStatus(status);</span><br><span class="line">       <span class="comment">//调用方法</span></span><br><span class="line">       hospitalSetService.updateById(hospitalSet);</span><br><span class="line">       <span class="keyword">return</span> Result.ok();</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h4 id="发送签名密钥方法"><a href="#发送签名密钥方法" class="headerlink" title="发送签名密钥方法"></a>发送签名密钥方法</h4><blockquote><p>该方法后续完成。（测试与添加方法类似。）</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 发送签名秘钥</span></span><br><span class="line"><span class="comment">    *      后续可通过短信的方式发送给手机</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@ApiOperation(value = &quot;医院设置的发送签名秘钥&quot;)</span></span><br><span class="line">   <span class="meta">@PutMapping(&quot;sendKey/&#123;id&#125;&quot;)</span></span><br><span class="line">   <span class="keyword">public</span> Result <span class="title function_">lockHospitalSet</span><span class="params">(<span class="meta">@PathVariable</span> Long id)</span> &#123;</span><br><span class="line">       <span class="type">HospitalSet</span> <span class="variable">hospitalSet</span> <span class="operator">=</span> hospitalSetService.getById(id);</span><br><span class="line">       <span class="type">String</span> <span class="variable">signKey</span> <span class="operator">=</span> hospitalSet.getSignKey();</span><br><span class="line">       <span class="type">String</span> <span class="variable">hoscode</span> <span class="operator">=</span> hospitalSet.getHoscode();</span><br><span class="line">       <span class="comment">//TODO 发送短信</span></span><br><span class="line">       <span class="keyword">return</span> Result.ok();</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="统一异常处理"><a href="#统一异常处理" class="headerlink" title="统一异常处理"></a>统一异常处理</h3><p>当程序运行，出现异常时，spring boot 默认情况下会映射到 &#x2F;error 进行异常处理，但是提示并不十分友好，下面自定义异常处理，提供友好展示。</p><h4 id="全局异常处理类"><a href="#全局异常处理类" class="headerlink" title="全局异常处理类"></a>全局异常处理类</h4><p>在 common-util 模块编写全局异常处理类：GlobalExceptionHandler。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 全局异常处理类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GlobalExceptionHandler</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler(Exception.class)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">error</span><span class="params">(Exception e)</span> &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">        <span class="keyword">return</span> Result.fail();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="\img\yygh\hospital\hospitalSet34.png" style="zoom:25%;" /><p>但是有些异常使用全局异常处理类不能处理，需要自定义异常类进行特殊操作。</p><h4 id="自定义异常处理类"><a href="#自定义异常处理类" class="headerlink" title="自定义异常处理类"></a>自定义异常处理类</h4><p>在 common-util 模块编写自定义异常处理类：YyghException，并让其继承 RuntimeException 类，以更全面的捕捉异常。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自定义全局异常类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ApiModel(value = &quot;自定义全局异常类&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">YyghException</span> <span class="keyword">extends</span> <span class="title class_">RuntimeException</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;异常状态码&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer code;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通过状态码和错误消息创建异常对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> message</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> code</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">YyghException</span><span class="params">(String message, Integer code)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(message);</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 接收枚举类型对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> resultCodeEnum</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">YyghException</span><span class="params">(ResultCodeEnum resultCodeEnum)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(resultCodeEnum.getMessage());</span><br><span class="line">        <span class="built_in">this</span>.code = resultCodeEnum.getCode();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;YyghException&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;code=&quot;</span> + code +</span><br><span class="line">                <span class="string">&quot;, message=&quot;</span> + <span class="built_in">this</span>.getMessage() +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在全局异常处理类中配置自定义异常处理类，即在 GlobalExceptionHandler 中添加下面代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 自定义异常处理方法</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> e</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@ExceptionHandler(YyghException.class)</span></span><br><span class="line">   <span class="meta">@ResponseBody</span></span><br><span class="line">   <span class="keyword">public</span> Result <span class="title function_">error</span><span class="params">(YyghException e)</span>&#123;</span><br><span class="line">       <span class="keyword">return</span> Result.build(e.getCode(), e.getMessage());</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><img src="\img\yygh\hospital\hospitalSet35.png" style="zoom:25%;" /><h4 id="异常测试"><a href="#异常测试" class="headerlink" title="异常测试"></a>异常测试</h4><p>手动在 HospitalSetController 任意方法制造异常 int i &#x3D; 1&#x2F;0，重启项目。</p><p>注意在启动之前刷新一下项目 Maven。</p><img src="\img\yygh\hospital\hospitalSet36.png" style="zoom:25%;" /><p>没有添加统一异常处理的情况。</p><img src="\img\yygh\hospital\hospitalSet38.png" style="zoom:33%;" /><p>添加统一异常处理的情况。</p><img src="\img\yygh\hospital\hospitalSet37.png" style="zoom: 33%;" /><h3 id="统一日志处理"><a href="#统一日志处理" class="headerlink" title="统一日志处理"></a>统一日志处理</h3><p>日志记录器（Logger）的行为是分等级的。如下表所示：</p><p>分为：OFF、FATAL、ERROR、WARN、INFO、DEBUG、ALL。</p><p>默认情况下，SpringBoot 从控制台打印出来的日志级别只有 INFO 及以上级别，可以配置日志级别。</p><blockquote><p>设置在控制台中打印日志</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">logging.level.root=DEBUG</span><br></pre></td></tr></table></figure><h4 id="Logback日志"><a href="#Logback日志" class="headerlink" title="Logback日志"></a>Logback日志</h4><p>spring boot 内部使用 Logback 作为日志实现的框架。可以实现将日志保存为一个文档并存储在指定的位置上。Logback 和 log4j 非常相似。</p><h5 id="配置日志"><a href="#配置日志" class="headerlink" title="配置日志"></a>配置日志</h5><p>在 resources 包下 编写日志的配置文件：logback-spring.xml。</p><blockquote><p>配置文件的名字是固定的。</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>  <span class="attr">scan</span>=<span class="string">&quot;true&quot;</span> <span class="attr">scanPeriod</span>=<span class="string">&quot;10 seconds&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 日志级别从低到高分为TRACE &lt; DEBUG &lt; INFO &lt; WARN &lt; ERROR &lt; FATAL，如果设置为WARN，则低于WARN的信息都不会输出 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- scan:当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- scanPeriod:设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- de<span class="doctag">bug:</span>当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">contextName</span>&gt;</span>logback<span class="tag">&lt;/<span class="name">contextName</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- name的值是变量的名称，value的值时变量定义的值。通过定义的值会被插入到logger上下文中。定义变量后，可以使“$&#123;&#125;”来使用变量。 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;log.path&quot;</span> <span class="attr">value</span>=<span class="string">&quot;D:/yygh_log/edu&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 彩色日志 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置格式变量：CONSOLE_LOG_PATTERN 彩色日志格式 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- magenta:洋红 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- boldMagenta:粗红--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- cyan:青色 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- white:白色 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- magenta:洋红 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;CONSOLE_LOG_PATTERN&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">value</span>=<span class="string">&quot;%yellow(%date&#123;yyyy-MM-dd HH:mm:ss&#125;) |%highlight(%-5level) |%blue(%thread) |%blue(%file:%line) |%green(%logger) |%cyan(%msg%n)&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--输出到控制台--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;CONSOLE&quot;</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.ConsoleAppender&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--此日志appender是为开发使用，只配置最底级别，控制台输出的日志级别是大于或等于此级别的日志信息--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 例如：如果此处配置了INFO级别，则后面其他位置即使配置了DEBUG级别的日志，也不会被输出 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.classic.filter.ThresholdFilter&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">level</span>&gt;</span>INFO<span class="tag">&lt;/<span class="name">level</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Pattern</span>&gt;</span>$&#123;CONSOLE_LOG_PATTERN&#125;<span class="tag">&lt;/<span class="name">Pattern</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 设置字符集 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">charset</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">charset</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--输出到文件--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 时间滚动输出 level为 INFO 日志 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;INFO_FILE&quot;</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 正在记录的日志文件的路径及文件名 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">file</span>&gt;</span>$&#123;log.path&#125;/log_info.log<span class="tag">&lt;/<span class="name">file</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--日志文件输出格式--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; [%thread] %-5level %logger&#123;50&#125; - %msg%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">charset</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">charset</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 日志记录器的滚动策略，按日期，按大小记录 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">rollingPolicy</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 每天日志归档路径以及格式 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">fileNamePattern</span>&gt;</span>$&#123;log.path&#125;/info/log-info-%d&#123;yyyy-MM-dd&#125;.%i.log<span class="tag">&lt;/<span class="name">fileNamePattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">timeBasedFileNamingAndTriggeringPolicy</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">maxFileSize</span>&gt;</span>100MB<span class="tag">&lt;/<span class="name">maxFileSize</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">timeBasedFileNamingAndTriggeringPolicy</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--日志文件保留天数--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">maxHistory</span>&gt;</span>15<span class="tag">&lt;/<span class="name">maxHistory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">rollingPolicy</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 此日志文件只记录info级别的 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.classic.filter.LevelFilter&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">level</span>&gt;</span>INFO<span class="tag">&lt;/<span class="name">level</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">onMatch</span>&gt;</span>ACCEPT<span class="tag">&lt;/<span class="name">onMatch</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">onMismatch</span>&gt;</span>DENY<span class="tag">&lt;/<span class="name">onMismatch</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 时间滚动输出 level为 WARN 日志 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;WARN_FILE&quot;</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 正在记录的日志文件的路径及文件名 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">file</span>&gt;</span>$&#123;log.path&#125;/log_warn.log<span class="tag">&lt;/<span class="name">file</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--日志文件输出格式--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; [%thread] %-5level %logger&#123;50&#125; - %msg%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">charset</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">charset</span>&gt;</span> <span class="comment">&lt;!-- 此处设置字符集 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 日志记录器的滚动策略，按日期，按大小记录 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">rollingPolicy</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">fileNamePattern</span>&gt;</span>$&#123;log.path&#125;/warn/log-warn-%d&#123;yyyy-MM-dd&#125;.%i.log<span class="tag">&lt;/<span class="name">fileNamePattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">timeBasedFileNamingAndTriggeringPolicy</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">maxFileSize</span>&gt;</span>100MB<span class="tag">&lt;/<span class="name">maxFileSize</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">timeBasedFileNamingAndTriggeringPolicy</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--日志文件保留天数--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">maxHistory</span>&gt;</span>15<span class="tag">&lt;/<span class="name">maxHistory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">rollingPolicy</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 此日志文件只记录warn级别的 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.classic.filter.LevelFilter&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">level</span>&gt;</span>warn<span class="tag">&lt;/<span class="name">level</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">onMatch</span>&gt;</span>ACCEPT<span class="tag">&lt;/<span class="name">onMatch</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">onMismatch</span>&gt;</span>DENY<span class="tag">&lt;/<span class="name">onMismatch</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 时间滚动输出 level为 ERROR 日志 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;ERROR_FILE&quot;</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 正在记录的日志文件的路径及文件名 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">file</span>&gt;</span>$&#123;log.path&#125;/log_error.log<span class="tag">&lt;/<span class="name">file</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--日志文件输出格式--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; [%thread] %-5level %logger&#123;50&#125; - %msg%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">charset</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">charset</span>&gt;</span> <span class="comment">&lt;!-- 此处设置字符集 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 日志记录器的滚动策略，按日期，按大小记录 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">rollingPolicy</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">fileNamePattern</span>&gt;</span>$&#123;log.path&#125;/error/log-error-%d&#123;yyyy-MM-dd&#125;.%i.log<span class="tag">&lt;/<span class="name">fileNamePattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">timeBasedFileNamingAndTriggeringPolicy</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">maxFileSize</span>&gt;</span>100MB<span class="tag">&lt;/<span class="name">maxFileSize</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">timeBasedFileNamingAndTriggeringPolicy</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--日志文件保留天数--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">maxHistory</span>&gt;</span>15<span class="tag">&lt;/<span class="name">maxHistory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">rollingPolicy</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 此日志文件只记录ERROR级别的 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.classic.filter.LevelFilter&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">level</span>&gt;</span>ERROR<span class="tag">&lt;/<span class="name">level</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">onMatch</span>&gt;</span>ACCEPT<span class="tag">&lt;/<span class="name">onMatch</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">onMismatch</span>&gt;</span>DENY<span class="tag">&lt;/<span class="name">onMismatch</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        &lt;logger&gt;用来设置某一个包或者具体的某一个类的日志打印级别、以及指定&lt;appender&gt;。</span></span><br><span class="line"><span class="comment">        &lt;logger&gt;仅有一个name属性，</span></span><br><span class="line"><span class="comment">        一个可选的level和一个可选的addtivity属性。</span></span><br><span class="line"><span class="comment">        name:用来指定受此logger约束的某一个包或者具体的某一个类。</span></span><br><span class="line"><span class="comment">        level:用来设置打印级别，大小写无关：TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF，</span></span><br><span class="line"><span class="comment">              如果未设置此属性，那么当前logger将会继承上级的级别。</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        使用mybatis的时候，sql语句是debug下才会打印，而这里我们只配置了info，所以想要查看sql语句的话，有以下两种操作：</span></span><br><span class="line"><span class="comment">        第一种把&lt;root level=&quot;INFO&quot;&gt;改成&lt;root level=&quot;DEBUG&quot;&gt;这样就会打印sql，不过这样日志那边会出现很多其他消息</span></span><br><span class="line"><span class="comment">        第二种就是单独给mapper下目录配置DEBUG模式，代码如下，这样配置sql语句会打印，其他还是正常DEBUG级别：</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--开发环境:打印控制台--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">springProfile</span> <span class="attr">name</span>=<span class="string">&quot;dev&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--可以输出项目中的debug日志，包括mybatis的sql日志--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">&quot;com.guli&quot;</span> <span class="attr">level</span>=<span class="string">&quot;INFO&quot;</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            root节点是必选节点，用来指定最基础的日志输出级别，只有一个level属性</span></span><br><span class="line"><span class="comment">            level:用来设置打印级别，大小写无关：TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF，默认是DEBUG</span></span><br><span class="line"><span class="comment">            可以包含零个或多个appender元素。</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">&quot;INFO&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;CONSOLE&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;INFO_FILE&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;WARN_FILE&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;ERROR_FILE&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">springProfile</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--生产环境:输出到文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">springProfile</span> <span class="attr">name</span>=<span class="string">&quot;pro&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">&quot;INFO&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;CONSOLE&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;DEBUG_FILE&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;INFO_FILE&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;ERROR_FILE&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;WARN_FILE&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">springProfile</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>写完提交至Gitee中。</p>]]></content>
      
      
      <categories>
          
          <category> 预约挂号项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>将项目代码提交到Gitee仓库</title>
      <link href="/2022/09/02/%E5%B0%86%E9%A1%B9%E7%9B%AE%E4%BB%A3%E7%A0%81%E6%8F%90%E4%BA%A4%E5%88%B0Gitee%E4%BB%93%E5%BA%93/"/>
      <url>/2022/09/02/%E5%B0%86%E9%A1%B9%E7%9B%AE%E4%BB%A3%E7%A0%81%E6%8F%90%E4%BA%A4%E5%88%B0Gitee%E4%BB%93%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<h4 id="登录-Gitee"><a href="#登录-Gitee" class="headerlink" title="登录 Gitee"></a>登录 Gitee</h4><p>进入 gitee 官网地址：<a href="https://gitee.com/login%EF%BC%8C%E7%82%B9%E5%87%BB">https://gitee.com/login，点击</a> <code>登录</code>。</p><img src="\img\yygh\git\git01.png" style="zoom: 25%;" /><p>输入账户和密码，进行登录。没有账户可以使用手机号或者邮箱注册一个（注册步骤略）。</p><img src="\img\yygh\git\git02.png" style="zoom:25%;" /><h4 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h4><p>登录之后，点击 <code>+</code> 号，弹出框选择**<code>新建仓库</code>**。</p><img src="\img\yygh\git\git03.png" style="zoom:25%;" /><p>仓库名称：yygh-parent</p><p>注意：仓库名称必须与要上传的项目一致。</p><img src="\img\yygh\git\git04.png" style="zoom:25%;" /><p>将仓库的HTTPS地址复制，在 IDEA 连接 Gitee 时使用。</p><img src="\img\yygh\git\git05.png" style="zoom:25%;" /><h4 id="提交项目"><a href="#提交项目" class="headerlink" title="提交项目"></a>提交项目</h4><p>在 IDEA 中的 VCS -&gt; Create Git Repository 创建本地的 git 仓库。</p><img src="\img\yygh\git\git06.png" style="zoom:25%;" /><p>在打开的 Create Git Repository 对话框内选择本地仓库的位置，这里直接选择项目的根目录。</p><img src="\img\yygh\git\git07.png" style="zoom:33%;" /><p>创建本地的git仓库之后，项目中的文件会变红。点击 Git -&gt; Commit Changes 将项目提交到本地的git仓库中。</p><img src="\img\yygh\git\git08.png" style="zoom:25%;" /><p>选择提交全部文件，注释说明提交内容，点击 Commit 进行提交。</p><img src="\img\yygh\git\git09.png" style="zoom: 33%;" /><p>点击 Git -&gt; Pull 上传至 Gitee 中。弹出框输入 Gitee 中项目的 HTTPS 地址，进行连接并上传。</p><img src="\img\yygh\git\git10.png" style="zoom: 25%;" /><h5 id="提交失败"><a href="#提交失败" class="headerlink" title="提交失败"></a>提交失败</h5><p>需要登录 Gitee 的账户和密码。</p><img src="\img\yygh\git\git11.png" style="zoom: 33%;" /><p>登录账户密码。</p><img src="\img\yygh\git\git12.png" style="zoom:33%;" /><p>点击登录时，还是登录失败。</p><h5 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h5><p>使用快捷键 win+r，调出<strong>运行</strong>窗口，在运行窗口上输入 <code>control</code>  进入控制面板。</p><img src="\img\yygh\git\git13.png" style="zoom: 33%;" /><p>点击 <strong>用户账户</strong>。</p><img src="\img\yygh\git\git14.png" style="zoom: 33%;" /><p>点击 <strong>凭证管理器</strong>。找到 Gitee。</p><img src="\img\yygh\git\git15.png" style="zoom:33%;" /><p>点击 <strong>编辑</strong>，重新输入 Gitee 的登录用户名和密码，点击 <strong>保存</strong>。</p><img src="\img\yygh\git\git16.png" style="zoom:33%;" /><p>重启 IDEA ，重新 Pull 项目。这次不再需要登录。连接 Gitee 成功，点击 Pull 将代码提交至 Gitee 仓库中。</p><img src="\img\yygh\git\git17.png" style="zoom: 33%;" /><p>项目中弹出 <code>Pushed master to new branch origin/master</code> 表示提交成功。</p><img src="\img\yygh\git\git18.png" style="zoom:25%;" /><p>Gitee 仓库查看项目。</p><img src="\img\yygh\git\git19.png" style="zoom:25%;" />]]></content>
      
      
      <categories>
          
          <category> 预约挂号项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Gitee </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>预约挂号项目后端环境搭建</title>
      <link href="/2022/09/02/%E9%A2%84%E7%BA%A6%E6%8C%82%E5%8F%B7%E9%A1%B9%E7%9B%AE%E5%90%8E%E7%AB%AF%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
      <url>/2022/09/02/%E9%A2%84%E7%BA%A6%E6%8C%82%E5%8F%B7%E9%A1%B9%E7%9B%AE%E5%90%8E%E7%AB%AF%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<blockquote><p> 前后端分离概念</p></blockquote><p>前端，主要用于数据显示，使用的技术有 HTML、CSS、JS等。</p><p>后端，主要用于提供数据或者具体操作的，使用技术主要是 java。</p><p>前端通过 ajax 技术调用后端的数据，后端通过 json 格式的方式把数据返回给前端，最终在前端进行显示。</p><p>后端开发 controller、service、mapper 的过程，称之为开发接口过程。</p><h4 id="构建父工程"><a href="#构建父工程" class="headerlink" title="构建父工程"></a>构建父工程</h4><h5 id="创建工程"><a href="#创建工程" class="headerlink" title="创建工程"></a>创建工程</h5><p>使用 Spring Initializr 创建一个 SpringBoot 项目工程，将工程命名为 yygh-parent。</p><img src="\img\yygh\create01.png" style="zoom: 33%;" /><p>创建的SpringBoot项目版本选择默认即可，因为之后要改成项目统一指定的版本。</p><img src="\img\yygh\create02.png" style="zoom:33%;" /><p>修改项目的版本，统一版本为 <code>2.2.1.RELEASE</code>。将项目设定为 pom 类型。</p><img src="\img\yygh\yygh01.png" style="zoom:25%;" /><h5 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h5><p>在 <code>pom.xml</code> 文件中，添加项目相关依赖。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.1.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.atguigu<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>yygh-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>yygh-parent<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>yygh-parent<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--用于管理相关依赖的版本--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">cloud.version</span>&gt;</span>Hoxton.RELEASE<span class="tag">&lt;/<span class="name">cloud.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">alibaba.version</span>&gt;</span>2.2.0.RELEASE<span class="tag">&lt;/<span class="name">alibaba.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mybatis-plus.version</span>&gt;</span>3.3.1<span class="tag">&lt;/<span class="name">mybatis-plus.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mysql.version</span>&gt;</span>5.1.46<span class="tag">&lt;/<span class="name">mysql.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">swagger.version</span>&gt;</span>2.7.0<span class="tag">&lt;/<span class="name">swagger.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">jwt.version</span>&gt;</span>0.7.0<span class="tag">&lt;/<span class="name">jwt.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">fastjson.version</span>&gt;</span>1.2.29<span class="tag">&lt;/<span class="name">fastjson.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">httpclient.version</span>&gt;</span>4.5.1<span class="tag">&lt;/<span class="name">httpclient.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">easyexcel.version</span>&gt;</span>2.2.0-beta2<span class="tag">&lt;/<span class="name">easyexcel.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aliyun.version</span>&gt;</span>4.1.1<span class="tag">&lt;/<span class="name">aliyun.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">oss.version</span>&gt;</span>3.9.1<span class="tag">&lt;/<span class="name">oss.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">jodatime.version</span>&gt;</span>2.10.1<span class="tag">&lt;/<span class="name">jodatime.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--配置dependencyManagement锁定依赖的版本--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;cloud.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;alibaba.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!--mybatis-plus 持久层--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mybatis-plus.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mysql.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!--swagger--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;swagger.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--swagger ui--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;swagger.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.jsonwebtoken<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jjwt<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;jwt.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.httpcomponents<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>httpclient<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;httpclient.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;fastjson.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>easyexcel<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;easyexcel.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-java-sdk-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;aliyun.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun.oss<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-sdk-oss<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;oss.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!--日期时间工具--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>joda-time<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>joda-time<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;jodatime.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="搭建-common-模块"><a href="#搭建-common-模块" class="headerlink" title="搭建 common 模块"></a>搭建 common 模块</h4><h5 id="创建-common-模块"><a href="#创建-common-模块" class="headerlink" title="创建 common 模块"></a>创建 common 模块</h5><blockquote><p>common：公共模块父节点。</p></blockquote><p>在父工程（yygh-parent）下创建公共模块的父节点：common 项目。</p><img src="\img\yygh\yygh02.png" style="zoom:25%;" /><p>common 模块使用 Maven 创建。</p><img src="\img\yygh\yygh03.png" style="zoom: 33%;" /><p>在创建是注意是在 yygh-parent 工程下创建的 common 模块。</p><img src="\img\yygh\yygh04.png" style="zoom:33%;" /><h5 id="修改项目类型"><a href="#修改项目类型" class="headerlink" title="修改项目类型"></a>修改项目类型</h5><p>将 common 模块设置为 pom 类型。</p><img src="\img\yygh\yygh05.png" style="zoom:25%;" /><h5 id="添加依赖-1"><a href="#添加依赖-1" class="headerlink" title="添加依赖"></a>添加依赖</h5><p>在 pom.xml 文件中添加项目需要的相关依赖。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>yygh-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.atguigu<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>common<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided <span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--mybatis-plus--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided <span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--lombok用来简化实体类：需要安装lombok插件--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--swagger--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="搭建-common-util-模块"><a href="#搭建-common-util-模块" class="headerlink" title="搭建 common-util 模块"></a>搭建 common-util 模块</h5><p>在 common 模块下创建 common-util 子模块。创建过程与 common 模块创建相似，只是这是在 common 模块下创建而已。</p><img src="\img\yygh\yygh08.png" style="zoom:33%;" /><blockquote><p>在 common-util 模块的 pom.xml 文件下添加相关依赖</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>common<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.atguigu<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>common-util<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.httpcomponents<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>httpclient<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.jsonwebtoken<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jjwt<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>easyexcel<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 日期工具栏依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>joda-time<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>joda-time<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="搭建-service-util-模块"><a href="#搭建-service-util-模块" class="headerlink" title="搭建 service-util 模块"></a>搭建 service-util 模块</h5><p>创建过程同 common-util 模块。</p><blockquote><p>在 service-util 模块的 pom.xml 文件添加相关依赖</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>common<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.atguigu<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>service-util<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 引入项目中的common-util依赖jar包 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.atguigu<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>common-util<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- redis --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- spring2.X集成redis所需common-pool2--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-pool2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="搭建-model-模块"><a href="#搭建-model-模块" class="headerlink" title="搭建 model 模块"></a>搭建 model 模块</h4><p>搭建过程同 common 模块。</p><p>model 模块是用于存放项目的实体类。将 model 模块的设置为 jar 类型，以便后续开发中其他模块的引用和使用。</p><img src="\img\yygh\yygh06.png" style="zoom:25%;" /><h5 id="添加依赖-2"><a href="#添加依赖-2" class="headerlink" title="添加依赖"></a>添加依赖</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>yygh-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.atguigu<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>model<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--mybatis-plus--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided <span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--swagger--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided <span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>easyexcel<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided <span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-mongodb<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided <span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided <span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="搭建-service-模块"><a href="#搭建-service-模块" class="headerlink" title="搭建 service 模块"></a>搭建 service 模块</h4><p>搭建过程同 common 模块。</p><p>将 service 模块设置为 pom 类型。</p><img src="\img\yygh\yygh07.png" style="zoom:25%;" /><h5 id="添加依赖-3"><a href="#添加依赖-3" class="headerlink" title="添加依赖"></a>添加依赖</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>yygh-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.atguigu<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>service<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--web--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--mybatis-plus--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--mysql--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--开发者工具--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 服务调用feign --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 服务注册 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 流量控制 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-sentinel<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.yml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span> <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.yml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="搭建-service-user-模块"><a href="#搭建-service-user-模块" class="headerlink" title="搭建 service-user 模块"></a>搭建 service-user 模块</h5><p>搭建过程与搭建common-util 模块相似。只是要创建 service 模块下。</p><blockquote><p>创建 service-user 模块以便后面开发使用。</p></blockquote><h4 id="项目的初步结构"><a href="#项目的初步结构" class="headerlink" title="项目的初步结构"></a>项目的初步结构</h4><p>将不需要的包删除后，项目的初始结构见下图：</p><img src="\img\yygh\yygh09.png" style="zoom:25%;" /><p>yygh-parent：父项目，根目录，用于管理子模块：</p><ul><li><p>common：公共模块父节点</p><ul><li>common-util：工具类模块，所有模块都可以依赖于它</li><li>service-util：service 服务的工具包，包含 service 服务的公共配置类，所有 service 模块依赖于它。</li></ul></li><li><p>model：实体类模块</p></li><li><p>service：api 接口服务父节点</p><ul><li>service-user：用户api接口服务</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 预约挂号项目 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>MyBatisPlus技术点</title>
      <link href="/2022/08/29/MyBatisPlus%E6%8A%80%E6%9C%AF%E7%82%B9/"/>
      <url>/2022/08/29/MyBatisPlus%E6%8A%80%E6%9C%AF%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>MyBatis Plus（简称 MP）是一个 MyBatis 的增强工具，在 MyBatis 的基础上只做增强不做改变，为简化开发、提高效率而生。</p><ul><li>润物无声</li></ul><p>只做增强不做改变，引入它不会对现有工程产生影响，如丝般顺滑。</p><ul><li>效率至上</li></ul><p>只需简单配置，即可快速进行 CRUD 操作，从而节省大量时间。</p><ul><li>丰富功能</li></ul><p>热加载、代码生成、分页、性能分析等功能一应俱全。</p><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><h4 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h4><p>数据库名为：mybatis_plus，在 mybatis_plus 数据库中创建 user 表。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">user</span></span><br><span class="line">(</span><br><span class="line">    id <span class="type">BIGINT</span>(<span class="number">20</span>)<span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;主键ID&#x27;</span>,</span><br><span class="line">    name <span class="type">VARCHAR</span>(<span class="number">30</span>)<span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">    age <span class="type">INT</span>(<span class="number">11</span>)<span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;年龄&#x27;</span>,</span><br><span class="line">    email <span class="type">VARCHAR</span>(<span class="number">50</span>)<span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;邮箱&#x27;</span>,</span><br><span class="line">    <span class="keyword">PRIMARY</span> KEY (id)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>在 user 表中添加数据。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">user</span> (id, name, age, email)<span class="keyword">VALUES</span></span><br><span class="line">(<span class="number">1</span>, <span class="string">&#x27;Jone&#x27;</span>, <span class="number">18</span>, <span class="string">&#x27;test1@baomidou.com&#x27;</span>),</span><br><span class="line">(<span class="number">2</span>, <span class="string">&#x27;Jack&#x27;</span>, <span class="number">20</span>, <span class="string">&#x27;test2@baomidou.com&#x27;</span>),</span><br><span class="line">(<span class="number">3</span>, <span class="string">&#x27;Tom&#x27;</span>, <span class="number">28</span>, <span class="string">&#x27;test3@baomidou.com&#x27;</span>),</span><br><span class="line">(<span class="number">4</span>, <span class="string">&#x27;Sandy&#x27;</span>, <span class="number">21</span>, <span class="string">&#x27;test4@baomidou.com&#x27;</span>),</span><br><span class="line">(<span class="number">5</span>, <span class="string">&#x27;Billie&#x27;</span>, <span class="number">24</span>, <span class="string">&#x27;test5@baomidou.com&#x27;</span>);</span><br></pre></td></tr></table></figure><img src="\img\yygh\mp\mp01.png" style="zoom: 50%;" /><h4 id="配置idea工具"><a href="#配置idea工具" class="headerlink" title="配置idea工具"></a>配置idea工具</h4><p>本项目使用的 IDEA 工具版本是 2021.2.3 版。下面配置操作可能和其他版本有所出入，按实际情况进行配置。</p><p>打开 IDAE 工具，找到 Customize 下的 All settings，设置 IDEA 工具的所有配置内容。</p><img src="\img\yygh\mp\mp11.png" style="zoom: 33%;" /><h5 id="Java编译器"><a href="#Java编译器" class="headerlink" title="Java编译器"></a>Java编译器</h5><img src="\img\yygh\mp\mp12.png" style="zoom: 25%;" /><h5 id="项目和文件编码"><a href="#项目和文件编码" class="headerlink" title="项目和文件编码"></a>项目和文件编码</h5><img src="\img\yygh\mp\mp13.png" style="zoom: 25%;" /><h5 id="Maven-配置"><a href="#Maven-配置" class="headerlink" title="Maven 配置"></a>Maven 配置</h5><p>本项目使用的 Maven 版本为 3.6.3。</p><img src="\img\yygh\mp\mp14.png" style="zoom:25%;" /><h4 id="创建项目。"><a href="#创建项目。" class="headerlink" title="创建项目。"></a>创建项目。</h4><p>使用 IDEA 工具的 Spring Initializr 快速初始化一个 Spring Boot 工程，即 mybatis_plus 工程。</p><img src="\img\yygh\mp\mp15.png" style="zoom: 33%;" /><p>选择工程配置</p><img src="\img\yygh\mp\mp16.png" style="zoom:33%;" /><p>本项目使用的 SpringBoot 版本改为 2.2.1.RELEASE，初始化的工程中没有该版本，所以在创建 mybatis_plus 工程之后，将其版本修改为 2.2.1.RELEASE。</p><img src="\img\yygh\mp\mp02.png" style="zoom:25%;" /><p>在项目的 <code>pom.xml</code> 文件中引入相关的依赖。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.1.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.mp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis_plus<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>mybatis_plus<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>mybatis_plus<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--mybatis-plus依赖--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--mysql依赖--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--lombok：用来简化实体类--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="\img\yygh\mp\mp03.png" style="zoom:25%;" /><p>注意：引入 MyBatis-Plus 依赖之后请不要再次引入 MyBatis 依赖，以避免因版本差异导致的问题。</p><h5 id="lombok插件配置"><a href="#lombok插件配置" class="headerlink" title="lombok插件配置"></a>lombok插件配置</h5><p>在 IDEA 2020.3 及以上版本已经内置 Lombok 插件，不再需要单独的安装插件，只需要在项目添加 Lombok 依赖，就可以使用。在2020.3 之前的版本，需要单独安装 Lombok 插件，安装操作如下：</p><blockquote><p>在 Settings（设置）-&gt; Plugins（插件）-&gt; Marketplace（商城）-&gt; 搜索lombok，找到 lombok 插件 -&gt; 点击 Install 即可安装。</p></blockquote><h3 id="编写代码"><a href="#编写代码" class="headerlink" title="编写代码"></a>编写代码</h3><h4 id="连接MySQL配置"><a href="#连接MySQL配置" class="headerlink" title="连接MySQL配置"></a>连接MySQL配置</h4><p>在 application.properties 配置文件中编写连接 MySQL 数据库的配置。配置方式总共有两种：</p><blockquote><p>方式1：spring boot 2.0（内置jdbc5驱动）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">spring.datasource.driver<span class="operator">-</span>class<span class="operator">-</span>name<span class="operator">=</span>com.mysql.jdbc.Driver</span><br><span class="line">spring.datasource.url<span class="operator">=</span>jdbc:mysql:<span class="operator">/</span><span class="operator">/</span>localhost:<span class="number">3306</span><span class="operator">/</span>mybatis_plus?characterEncoding<span class="operator">=</span>utf<span class="number">-8</span><span class="operator">&amp;</span>useSSL<span class="operator">=</span><span class="literal">false</span></span><br><span class="line">spring.datasource.username<span class="operator">=</span>root</span><br><span class="line">spring.datasource.password<span class="operator">=</span><span class="number">123456</span></span><br></pre></td></tr></table></figure><p>方式2：spring boot 2.1及以上（内置jdbc8驱动）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">spring.datasource.driver<span class="operator">-</span>class<span class="operator">-</span>name<span class="operator">=</span>com.mysql.cj.jdbc.Driver</span><br><span class="line">spring.datasource.url<span class="operator">=</span>jdbc:mysql:<span class="operator">/</span><span class="operator">/</span>localhost:<span class="number">3306</span><span class="operator">/</span>mybatis_plus?serverTimezone<span class="operator">=</span>GMT<span class="operator">%</span><span class="number">2</span>B8</span><br><span class="line">spring.datasource.username<span class="operator">=</span>root</span><br><span class="line">spring.datasource.password<span class="operator">=</span><span class="number">123456</span></span><br></pre></td></tr></table></figure></blockquote><p>本文使用的是 MySQL 8.0 版本，所以使用方式2进行配置。</p><img src="\img\yygh\mp\mp04.png" style="zoom:25%;" /><p><strong>注意</strong>：① url 使用了 <code>?serverTimezone=GMT%2B8</code> 后缀，因为 8.0 版本的 jdbc 驱动需要添加这个后缀，否则运行测试用例报告如下错误：<code>java.sql.SQLException: The server time zone value &#39;ÖÐ¹ú±ê×¼Ê±¼ä&#39; is unrecognized or represents more </code> 。</p><p>② driver-class-name 使用了 <code>com.mysql.cj.jdbc.Driver</code>，在 jdbc 8 中建议使用这个驱动，否则运行测试用例的时候会有 WARN 信息。</p><h4 id="实体类"><a href="#实体类" class="headerlink" title="实体类"></a>实体类</h4><p>创建包 entity 编写实体类 <code>User.java</code>。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="\img\yygh\mp\mp17.png" style="zoom:25%;" /><h5 id="Data注解"><a href="#Data注解" class="headerlink" title="@Data注解"></a>@Data注解</h5><p>@Data注解是 Lombok 插件提供的，使用时将其注在类上（如上面的 User 实体类中），提供类的 get()、set()、equals()、canEqual()、hashCode()、toString()方法，如上图通过 Structure 可以查看 @Data 注解提供的方法。</p><h4 id="Mapper接口"><a href="#Mapper接口" class="headerlink" title="Mapper接口"></a>Mapper接口</h4><p>创建包 mapper 编写 User 的 Mapper 接口：<code>UserMapper.java</code>。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;User&gt; &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="\img\yygh\mp\mp18.png" style="zoom:25%;" /><h5 id="Repository注解"><a href="#Repository注解" class="headerlink" title="@Repository注解"></a>@Repository注解</h5><p>@Repository注解源码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 决定MyAnnotation注解可以加在哪些成分上 </span></span><br><span class="line"><span class="comment">ElementType.TYPE：作用在类身上</span></span><br><span class="line"><span class="comment">ElementType.Filed：作用到属性身上</span></span><br><span class="line"><span class="comment">ElementType.METHOD：作用到方法身上</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Target(&#123;ElementType.TYPE&#125;)</span></span><br><span class="line"><span class="comment">/* 决定MyAnnotation注解的生命周期</span></span><br><span class="line"><span class="comment">生命周期长度 SOURCE&lt;CLASS&lt;RUNTIME，所以前者能作用的地方后者一定也能作用。</span></span><br><span class="line"><span class="comment">source：注解只保留在源文件，当Java文件编译成class文件的时候，注解被遗弃；被编译器忽略，如果只是做一些检查性的操作，比如@Override和@SuppressWarnings，则可选用SOURCE注解</span></span><br><span class="line"><span class="comment">class：注解被保留到class文件，但jvm加载class文件时候被遗弃，这是默认的生命周期，如果要在编译时进行一些预处理操作，比如生成一些辅助代码（如ButterKnife），就用CLASS注解</span></span><br><span class="line"><span class="comment">runtime：注解不仅被保存到class文件中，jvm加载class文件之后，仍然存在，如果需要在运行时去动态获取注解信息，那只能用 RUNTIME注解</span></span><br><span class="line"><span class="comment">这3个生命周期分别对应于：Java源文件(.java文件) ---&gt; .class文件 ---&gt; 内存中的字节码。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="meta">@Component</span>  <span class="comment">//注明@Repository可以把一个类组件加入到IOC容器中</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> Repository &#123;</span><br><span class="line"><span class="meta">@AliasFor(annotation = Component.class)</span></span><br><span class="line">String <span class="title function_">value</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>类中添加 @Repository 注解，表示该类是用来执行与数据库相关的操作（即mapper&#x2F;dao对象），并支持自动处理数据库操作产生的异常。</p><h5 id="继承-BaseMapper"><a href="#继承-BaseMapper" class="headerlink" title="继承 BaseMapper"></a>继承 BaseMapper</h5><p><code>extends BaseMapper&lt;User&gt;</code> 表示继承 BaseMapper 类。</p><p>BaseMapper 类的源码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">BaseMapper</span>&lt;T&gt; <span class="keyword">extends</span> <span class="title class_">Mapper</span>&lt;T&gt; &#123;</span><br><span class="line">    <span class="type">int</span> <span class="title function_">insert</span><span class="params">(T entity)</span>;</span><br><span class="line">    <span class="type">int</span> <span class="title function_">deleteById</span><span class="params">(Serializable id)</span>;</span><br><span class="line">    <span class="type">int</span> <span class="title function_">deleteByMap</span><span class="params">(<span class="meta">@Param(Constants.COLUMN_MAP)</span> Map&lt;String, Object&gt; columnMap)</span>;</span><br><span class="line">    <span class="type">int</span> <span class="title function_">delete</span><span class="params">(<span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; wrapper)</span>;</span><br><span class="line">    <span class="type">int</span> <span class="title function_">deleteBatchIds</span><span class="params">(<span class="meta">@Param(Constants.COLLECTION)</span> Collection&lt;? extends Serializable&gt; idList)</span>;</span><br><span class="line">    <span class="type">int</span> <span class="title function_">updateById</span><span class="params">(<span class="meta">@Param(Constants.ENTITY)</span> T entity)</span>;</span><br><span class="line">    <span class="type">int</span> <span class="title function_">update</span><span class="params">(<span class="meta">@Param(Constants.ENTITY)</span> T entity, <span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; updateWrapper)</span>;</span><br><span class="line">    T <span class="title function_">selectById</span><span class="params">(Serializable id)</span>;</span><br><span class="line">    List&lt;T&gt; <span class="title function_">selectBatchIds</span><span class="params">(<span class="meta">@Param(Constants.COLLECTION)</span> Collection&lt;? extends Serializable&gt; idList)</span>;</span><br><span class="line">    List&lt;T&gt; <span class="title function_">selectByMap</span><span class="params">(<span class="meta">@Param(Constants.COLUMN_MAP)</span> Map&lt;String, Object&gt; columnMap)</span>;</span><br><span class="line">    T <span class="title function_">selectOne</span><span class="params">(<span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line">    Integer <span class="title function_">selectCount</span><span class="params">(<span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line">    List&lt;T&gt; <span class="title function_">selectList</span><span class="params">(<span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line">    List&lt;Map&lt;String, Object&gt;&gt; <span class="title function_">selectMaps</span><span class="params">(<span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line">    List&lt;Object&gt; <span class="title function_">selectObjs</span><span class="params">(<span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line">    &lt;E <span class="keyword">extends</span> <span class="title class_">IPage</span>&lt;T&gt;&gt; E <span class="title function_">selectPage</span><span class="params">(E page, <span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line">    &lt;E <span class="keyword">extends</span> <span class="title class_">IPage</span>&lt;Map&lt;String, Object&gt;&gt;&gt; E <span class="title function_">selectMapsPage</span><span class="params">(E page, <span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过继承 BaseMapper 类，不需要编写 xml 文件，也可以对 User 实体类进行增删改查操作。</p><h4 id="启动类"><a href="#启动类" class="headerlink" title="启动类"></a>启动类</h4><p>在项目的启动类中添加 @MapperScan 注解，注明扫描 Mapper 文件夹路径。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@MapperScan(&quot;com.mp.mapper&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MybatisPlusApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(MybatisPlusApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="\img\yygh\mp\mp05.png" style="zoom:25%;" /><h4 id="查询操作"><a href="#查询操作" class="headerlink" title="查询操作"></a>查询操作</h4><p>在测试类中编写查询操作的代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MybatisPlusDemoApplicationTests</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 注入Mapper接口 */</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 查询全部数据 */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">findAll</span><span class="params">()</span> &#123;</span><br><span class="line">        List&lt;User&gt; userList = userMapper.selectList(<span class="literal">null</span>);</span><br><span class="line">        userList.forEach(System.out::println);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="\img\yygh\mp\mp06.png" style="zoom:25%;" /><h4 id="配置日志"><a href="#配置日志" class="headerlink" title="配置日志"></a>配置日志</h4><p>查看sql输出日志，在 application.properties 添加如下代码进行配置日志。</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#mybatis日志</span></span><br><span class="line"><span class="attr">mybatis-plus.configuration.log-impl</span>=<span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br></pre></td></tr></table></figure><img src="\img\yygh\mp\mp07.png" style="zoom:25%;" /><p>重新运行 <code>findAll()</code> 方法，可以看到运行的步骤。</p><img src="\img\yygh\mp\mp19.png" style="zoom:25%;" /><h4 id="添加操作"><a href="#添加操作" class="headerlink" title="添加操作"></a>添加操作</h4><p>在测试类中编写新增方法，即 <code>addUsre()</code> 方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 新增 */</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addUser</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">       user.setName(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">       user.setAge(<span class="number">33</span>);</span><br><span class="line">       user.setEmail(<span class="string">&quot;333@qq.com&quot;</span>);</span><br><span class="line">       <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> userMapper.insert(user);</span><br><span class="line">       System.out.println(i);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><img src="\img\yygh\mp\mp09.png" style="zoom:25%;" /><p>查询 MySQL 数据库的数据：</p><img src="\img\yygh\mp\mp10.png" style="zoom: 25%;" /><h5 id="MP的主键策略"><a href="#MP的主键策略" class="headerlink" title="MP的主键策略"></a>MP的主键策略</h5><p>从上面的执行的新增方法可以看出，我没有添加 id 的值，id 的值也不是自动增加而是一个十九位的数，这是什么情况呢，这是因为 MP 有默认的主键策略。</p><p>MyBatis-Plus 默认的主键策略是：ASSIGN_ID ，即相当于在 User 实体类的 id 上加 @TableId(type &#x3D; IdType.ASSIGN_ID)。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableId(type = IdType.ASSIGN_ID)</span></span><br><span class="line">   <span class="keyword">private</span> Long id;</span><br></pre></td></tr></table></figure><p>MP 的主键策略除了 <code>ASSIGN_ID</code> 外，还有以下几种情况：</p><img src="\img\yygh\mp\mp21.png" style="zoom: 33%;" /><blockquote><p> ASSIGN_UUID、AUTO、INPUT、NONE；ID_WORKER、ID_WORKER_STR、UUID 是过时方法。</p></blockquote><p>常用的有：ASSIGN_ID 或者 AUTO，<strong>但一般使用 ASSIGN_ID 较多</strong>。</p><ul><li><strong>ASSIGN_ID</strong></li></ul><p>ASSIGN_ID 策略是使用雪花算法随机生成19位的唯一值。</p><p>雪花算法：</p><blockquote><p>雪花算法（即分布式ID生成器）是由Twitter公布的分布式主键生成算法，它能够保证不同表的主键的不重复性，以及相同表的主键的有序性。</p></blockquote><p>核心思想：</p><blockquote><p>长度共 64bit（一个 long 类型）。</p><p>首先是一个符号位，1bit标识，由于long基本类型在Java中是带符号的，最高位是符号位，正数是0，负数是1，所以id一般是正数，最高位是0。</p><p>41bit时间截(毫秒级)，存储的是时间截的差值（当前时间截 - 开始时间截)，结果约等于69.73年。</p><p>10bit作为机器的ID（5个bit是数据中心，5个bit的机器ID，可以部署在1024个节点）。</p><p>12bit作为毫秒内的流水号（意味着每个节点在每毫秒可以产生 4096 个 ID）。</p></blockquote><img src="\img\yygh\mp\mp22.png" style="zoom: 33%;" /><p>优点：整体上按照时间自增排序，并且整个分布式系统内不会产生ID碰撞，并且效率较高。</p><ul><li><strong>AUTO</strong></li></ul><p>需要在创建数据表的时候设置主键自增。</p><p>实体字段中配置 @TableId(type &#x3D; IdType.AUTO)。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableId(type = IdType.AUTO)</span></span><br><span class="line"><span class="keyword">private</span> Long id;</span><br></pre></td></tr></table></figure><p>要想影响所有实体的配置，可以在 application.properties 文件中设置全局主键配置。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#全局设置主键生成策略为：自增</span><br><span class="line">mybatis-plus.global-config.db-config.id-type=auto</span><br></pre></td></tr></table></figure><h4 id="修改操作"><a href="#修改操作" class="headerlink" title="修改操作"></a>修改操作</h4><p>在测试类中编写修改方法，即 updateUsre() 方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 修改 */</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateUser</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">       user.setId(<span class="number">1562282324876500994L</span>);</span><br><span class="line">       user.setName(<span class="string">&quot;老二&quot;</span>);</span><br><span class="line">       <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> userMapper.updateById(user);</span><br><span class="line">       System.out.println(count);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><img src="\img\yygh\mp\mp23.png" style="zoom:25%;" /><p>数据表查询结果：</p><img src="\img\yygh\mp\mp24.png" style="zoom:33%;" /><h3 id="MP的两大特性"><a href="#MP的两大特性" class="headerlink" title="MP的两大特性"></a>MP的两大特性</h3><p>MP的两大特性是：自动填充和乐观锁。</p><h4 id="自动填充"><a href="#自动填充" class="headerlink" title="自动填充"></a>自动填充</h4><p>需求描述：项目中经常会遇到一些数据，每次都使用相同的方式填充，例如记录的创建时间，更新时间等。我们可以使用 MyBatis Plus 的自动填充功能，完成这些字段的赋值工作</p><h5 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h5><p>在 User 表中添加 datetime 类型的新的字段 create_time、update_time。</p><img src="\img\yygh\mp\mp25.png" style="zoom:33%;" /><p>在 User 实体类上增加字段的对应属性。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> Date createTime;</span><br><span class="line">   <span class="keyword">private</span> Date updateTime;</span><br></pre></td></tr></table></figure><h5 id="添加注解"><a href="#添加注解" class="headerlink" title="添加注解"></a>添加注解</h5><p>在添加的字段属性中添加自动填充注解。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableField(fill = FieldFill.INSERT)</span></span><br><span class="line">   <span class="keyword">private</span> Date createTime;</span><br><span class="line">   <span class="meta">@TableField(fill = FieldFill.INSERT_UPDATE)</span></span><br><span class="line">   <span class="keyword">private</span> Date updateTime;</span><br></pre></td></tr></table></figure><img src="\img\yygh\mp\mp26.png" style="zoom:25%;" /><h5 id="实现元对象处理器接口"><a href="#实现元对象处理器接口" class="headerlink" title="实现元对象处理器接口"></a>实现元对象处理器接口</h5><p>创建包 handler 编写实现元对象处理器接口的类：MyMetaObjectHandler.java。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyMetaObjectHandler</span> <span class="keyword">implements</span> <span class="title class_">MetaObjectHandler</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* MP执行添加操作时，执行该方法 */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">insertFill</span><span class="params">(MetaObject metaObject)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.setFieldValByName(<span class="string">&quot;crateTime&quot;</span>,<span class="keyword">new</span> <span class="title class_">Date</span>(),metaObject);</span><br><span class="line">        <span class="built_in">this</span>.setFieldValByName(<span class="string">&quot;updateTime&quot;</span>,<span class="keyword">new</span> <span class="title class_">Date</span>(),metaObject);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* MP执行修改操作时，执行该方法 */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateFill</span><span class="params">(MetaObject metaObject)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.setFieldValByName(<span class="string">&quot;updateTime&quot;</span>,<span class="keyword">new</span> <span class="title class_">Date</span>(),metaObject);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="\img\yygh\mp\mp27.png" style="zoom:25%;" /><h5 id="执行添加操作"><a href="#执行添加操作" class="headerlink" title="执行添加操作"></a>执行添加操作</h5><p>运行 addUser() 方法：</p><img src="\img\yygh\mp\mp28.png" style="zoom:25%;" /><p>数据库查询添加结果：</p><img src="\img\yygh\mp\mp29.png" style="zoom:33%;" /><h5 id="执行修改操作"><a href="#执行修改操作" class="headerlink" title="执行修改操作"></a>执行修改操作</h5><p>运行 updateUser() 方法：</p><img src="\img\yygh\mp\mp30.png" style="zoom:25%;" /><p>数据库查询添加结果：</p><img src="\img\yygh\mp\mp31.png" style="zoom:33%;" /><h4 id="乐观锁"><a href="#乐观锁" class="headerlink" title="乐观锁"></a>乐观锁</h4><blockquote><p>什么是乐观锁</p></blockquote><p>乐观锁是用于解决某一问题的一种方案，例如丢失更新问题。</p><h5 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h5><p>当要更新一条记录的时候，希望这条记录没有被别人更新，也就是说实现线程安全的数据更新。</p><h5 id="实现方式"><a href="#实现方式" class="headerlink" title="实现方式"></a>实现方式</h5><p>在数据表中添加 version 字段。在取出记录时，获取当前 version；更新时，带上这个 version；执行更新时， 比较当前修改数据版本和数据库版本是否一样（即set version &#x3D; newVersion where version &#x3D; oldVersion）；如果一样，则把提交之后的数据版本号更新；如果 version 不一样，就更新失败。</p><h5 id="实现流程"><a href="#实现流程" class="headerlink" title="实现流程"></a>实现流程</h5><p>在 Mybatis-Plus 项目中，使用乐观锁的流程。</p><blockquote><p>在 user 数据表中，添加 version 字段。</p></blockquote><img src="\img\yygh\mp\mp32.png" style="zoom:33%;" /><blockquote><p>在 User 实体类中添加 version 属性。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> Integer version;</span><br></pre></td></tr></table></figure><blockquote><p>在实体类的 version 属性添加 @vresion 注解</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Version</span></span><br><span class="line">   <span class="keyword">private</span> Integer version;</span><br></pre></td></tr></table></figure><img src="\img\yygh\mp\mp33.png" style="zoom:25%;" /><blockquote><p>配置乐观锁的插件</p></blockquote><p>创建包 config 编写配置乐观锁插件的实现类：MybatisPlusConfig.java。</p><p>此时，启动类上的 <code>@MapperScan(&quot;com.mp.mapper&quot;)</code> 可以删除。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@MapperScan(&quot;com.mp.mapper&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MybatisPlusConfig</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/* 乐观锁插件*/</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> OptimisticLockerInterceptor <span class="title function_">optimisticLockerInterceptor</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">OptimisticLockerInterceptor</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="\img\yygh\mp\mp34.png" style="zoom:25%;" /><blockquote><p>配置 version 属性的自动填充</p></blockquote><p>在实体类的 version 属性上添加 <code>@TableField(fill = FieldFill.INSERT)</code>注解，让其在进行添加的时候自动设置默认值。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Version</span></span><br><span class="line">   <span class="meta">@TableField(fill = FieldFill.INSERT)</span></span><br><span class="line">   <span class="keyword">private</span> Integer version;</span><br></pre></td></tr></table></figure><p>在 MyMetaObjectHandler 类中设置添加操作时 version 的默认值。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyMetaObjectHandler</span> <span class="keyword">implements</span> <span class="title class_">MetaObjectHandler</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* MP执行添加操作时，执行该方法 */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">insertFill</span><span class="params">(MetaObject metaObject)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.setFieldValByName(<span class="string">&quot;createTime&quot;</span>,<span class="keyword">new</span> <span class="title class_">Date</span>(),metaObject);</span><br><span class="line">        <span class="built_in">this</span>.setFieldValByName(<span class="string">&quot;updateTime&quot;</span>,<span class="keyword">new</span> <span class="title class_">Date</span>(),metaObject);</span><br><span class="line">        <span class="comment">//设置添加操作时version的默认值为1</span></span><br><span class="line">        <span class="built_in">this</span>.setFieldValByName(<span class="string">&quot;version&quot;</span>,<span class="number">1</span>,metaObject);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* MP执行修改操作时，执行该方法 */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateFill</span><span class="params">(MetaObject metaObject)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.setFieldValByName(<span class="string">&quot;updateTime&quot;</span>,<span class="keyword">new</span> <span class="title class_">Date</span>(),metaObject);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h5><blockquote><p>执行 addUser() 方法，添加一条数据。</p></blockquote><img src="\img\yygh\mp\mp35.png" style="zoom:25%;" /><p>数据库查询结果：</p><img src="\img\yygh\mp\mp36.png" style="zoom:33%;" /><blockquote><p>创建乐观锁测试的方法：optimisticLocker()。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 乐观锁测试 */</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">optimisticLocker</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">//查询</span></span><br><span class="line">       <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userMapper.selectById(<span class="number">1562317407268302849L</span>);</span><br><span class="line">       user.setName(<span class="string">&quot;老四&quot;</span>);</span><br><span class="line">       <span class="comment">//修改</span></span><br><span class="line">       userMapper.updateById(user);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><img src="\img\yygh\mp\mp37.png" style="zoom:25%;" /><p>数据表数据查看结果：</p><img src="\img\yygh\mp\mp38.png" style="zoom:33%;" /><h3 id="MP的查询操作"><a href="#MP的查询操作" class="headerlink" title="MP的查询操作"></a>MP的查询操作</h3><h4 id="根据多个id批量查询"><a href="#根据多个id批量查询" class="headerlink" title="根据多个id批量查询"></a>根据多个id批量查询</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 多个id批量查询 */</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">findByIds</span><span class="params">()</span> &#123;</span><br><span class="line">       List&lt;User&gt; users = userMapper.selectBatchIds(Arrays.asList(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>));</span><br><span class="line">       System.out.println(users);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><img src="\img\yygh\mp\mp39.png" style="zoom:25%;" /><h4 id="简单的条件查询"><a href="#简单的条件查询" class="headerlink" title="简单的条件查询"></a>简单的条件查询</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 简单的条件查询：根据姓名和年龄查询 */</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">findByNameAndAge</span><span class="params">()</span> &#123;</span><br><span class="line">       Map&lt;String, Object&gt; columnMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">       columnMap.put(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;老二&quot;</span>);</span><br><span class="line">       columnMap.put(<span class="string">&quot;age&quot;</span>,<span class="number">22</span>);</span><br><span class="line">       List&lt;User&gt; users = userMapper.selectByMap(columnMap);</span><br><span class="line">       System.out.println(users);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><img src="\img\yygh\mp\mp40.png" style="zoom:25%;" /><blockquote><p>注意：上面的查询方法很少用，常用方法在后面。</p></blockquote><h4 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h4><h5 id="配置分页插件"><a href="#配置分页插件" class="headerlink" title="配置分页插件"></a>配置分页插件</h5><p>MyBatis Plus自带分页插件，只要简单的配置即可实现分页功能。在 MybatisPlusConfig 配置类中添加分页插件代码。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 分页插件 */</span></span><br><span class="line">   <span class="meta">@Bean</span></span><br><span class="line">   <span class="keyword">public</span> PaginationInterceptor <span class="title function_">paginationInterceptor</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">PaginationInterceptor</span>();</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h5 id="编写分页查询代码"><a href="#编写分页查询代码" class="headerlink" title="编写分页查询代码"></a>编写分页查询代码</h5><p>在测试类中编写 findByPage() 方法，实现分页查询。</p><p>创建 Page 对象，传入两个参数：即当前页和每页记录数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 分页查询 */</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">findByPage</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">//创建Page对象，并传入当前页（current）和每页记录数（size）</span></span><br><span class="line">       Page&lt;User&gt; page = <span class="keyword">new</span> <span class="title class_">Page</span>&lt;&gt;(<span class="number">1</span>,<span class="number">3</span>);</span><br><span class="line">       Page&lt;User&gt; userPage = userMapper.selectPage(page, <span class="literal">null</span>);</span><br><span class="line">       <span class="comment">//通过userPage可以得到分页所有数据</span></span><br><span class="line">       <span class="type">long</span> <span class="variable">current</span> <span class="operator">=</span> userPage.getCurrent(); <span class="comment">//当前页</span></span><br><span class="line">       List&lt;User&gt; users = userPage.getRecords(); <span class="comment">//数据集合，即全部数据</span></span><br><span class="line">       <span class="type">long</span> <span class="variable">pages</span> <span class="operator">=</span> userPage.getPages(); <span class="comment">//总页数</span></span><br><span class="line">       <span class="type">long</span> <span class="variable">total</span> <span class="operator">=</span> userPage.getTotal(); <span class="comment">//总记录数</span></span><br><span class="line">       <span class="type">boolean</span> <span class="variable">hasNext</span> <span class="operator">=</span> userPage.hasNext(); <span class="comment">//下一页</span></span><br><span class="line">       <span class="type">boolean</span> <span class="variable">hasPrevious</span> <span class="operator">=</span> userPage.hasPrevious(); <span class="comment">//上一页</span></span><br><span class="line"></span><br><span class="line">       <span class="comment">//在控制台输出</span></span><br><span class="line">       System.out.println(current);</span><br><span class="line">       System.out.println(users);</span><br><span class="line">       System.out.println(pages);</span><br><span class="line">       System.out.println(total);</span><br><span class="line">       System.out.println(hasNext);</span><br><span class="line">       System.out.println(hasPrevious);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h5 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h5><img src="\img\yygh\mp\mp41.png" style="zoom:25%;" /><p>分页查询除了上面的 selectPage 方法之外，还有另一种方法：selectMapsPage，该方法不常用。</p><h5 id="selectMapsPage方法"><a href="#selectMapsPage方法" class="headerlink" title="selectMapsPage方法"></a>selectMapsPage方法</h5><p>在测试类中编写 findByMapsPage() 方法，实现分页查询。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">findByMapsPage</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">//Page不需要泛型</span></span><br><span class="line">       Page&lt;Map&lt;String, Object&gt;&gt; page = <span class="keyword">new</span> <span class="title class_">Page</span>&lt;&gt;(<span class="number">1</span>, <span class="number">5</span>);</span><br><span class="line">       Page&lt;Map&lt;String, Object&gt;&gt; pageParam = userMapper.selectMapsPage(page, <span class="literal">null</span>);</span><br><span class="line">       List&lt;Map&lt;String, Object&gt;&gt; records = pageParam.getRecords(); <span class="comment">//数据集合，即全部数据</span></span><br><span class="line">       records.forEach(System.out::println);</span><br><span class="line">       System.out.println(pageParam.getCurrent()); <span class="comment">//当前页</span></span><br><span class="line">       System.out.println(pageParam.getPages()); <span class="comment">//总页数</span></span><br><span class="line">       System.out.println(pageParam.getSize()); <span class="comment">//长度</span></span><br><span class="line">       System.out.println(pageParam.getTotal()); <span class="comment">//总记录数</span></span><br><span class="line">       System.out.println(pageParam.hasNext()); <span class="comment">//下一页</span></span><br><span class="line">       System.out.println(pageParam.hasPrevious()); <span class="comment">//上一页</span></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src="\img\yygh\mp\mp42.png" style="zoom:25%;" /><h3 id="MP的删除操作"><a href="#MP的删除操作" class="headerlink" title="MP的删除操作"></a>MP的删除操作</h3><h4 id="根据id删除"><a href="#根据id删除" class="headerlink" title="根据id删除"></a>根据id删除</h4><p>在测试类中编写 deleteById() 方法，实现根据 id 删除操作。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 根据id删除 */</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteById</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="type">int</span> <span class="variable">rows</span> <span class="operator">=</span> userMapper.deleteById(<span class="number">1L</span>);</span><br><span class="line">       System.out.println(rows);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><img src="\img\yygh\mp\mp43.png" style="zoom:25%;" /><p>数据库查询结果：</p><img src="\img\yygh\mp\mp44.png" style="zoom:33%;" /><p>可以看出，id&#x3D;1的数据已经被删除。</p><h4 id="通过多个id批量删除"><a href="#通过多个id批量删除" class="headerlink" title="通过多个id批量删除"></a>通过多个id批量删除</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 通过多个id批量删除 */</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteByIds</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> userMapper.deleteBatchIds(Arrays.asList(<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>));</span><br><span class="line">       System.out.println(result);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src="\img\yygh\mp\mp45.png" style="zoom:25%;" /><p>数据库查询结果：</p><img src="\img\yygh\mp\mp46.png" style="zoom:33%;" /><h4 id="简单条件删除"><a href="#简单条件删除" class="headerlink" title="简单条件删除"></a>简单条件删除</h4><p>在测试类中编写根据name和age删除的方法：deleteByMap()。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 简单条件删除：根据name和age删除 */</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteByMap</span><span class="params">()</span> &#123;</span><br><span class="line">       HashMap&lt;String,Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">       map.put(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;Billie&quot;</span>);</span><br><span class="line">       map.put(<span class="string">&quot;age&quot;</span>,<span class="number">24</span>);</span><br><span class="line">       <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> userMapper.deleteByMap(map);</span><br><span class="line">       System.out.println(result);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src="\img\yygh\mp\mp47.png" style="zoom:25%;" /><p>数据库查询结果：</p><img src="\img\yygh\mp\mp48.png" style="zoom:33%;" /><h4 id="逻辑删除（重点）"><a href="#逻辑删除（重点）" class="headerlink" title="逻辑删除（重点）"></a>逻辑删除（重点）</h4><p>逻辑删除：假删除，将对应数据中代表是否被删除字段状态修改为“被删除状态”，之后在数据库中仍旧能看到此条数据记录。</p><p>有逻辑删除就有相对于的删除方法，即物理删除。</p><blockquote><p> 物理删除：真实删除，将对应数据从数据库中删除，之后查询不到此条被删除数据。</p></blockquote><h5 id="使用场景-1"><a href="#使用场景-1" class="headerlink" title="使用场景"></a>使用场景</h5><ul><li><p>可以进行数据恢复</p></li><li><p>有关联数据，不便删除</p></li></ul><h5 id="实现流程-1"><a href="#实现流程-1" class="headerlink" title="实现流程"></a>实现流程</h5><p>在数据表中添加deleted字段，作为逻辑删除标志，每次删除的时候，修改逻辑删除标志位。0代表未删除，1表示已删除</p><blockquote><p>在数据表中添加deleted字段，deleted作为逻辑删除标志。</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTERTABLE `<span class="keyword">user</span>` <span class="keyword">ADD</span> <span class="keyword">COLUMN</span> `deleted` <span class="type">boolean</span> <span class="keyword">DEFAULT</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><img src="\img\yygh\mp\mp49.png" style="zoom:33%;" /><blockquote><p>在User实体类中添加deleted属性，并加上 @TableLogic 注解和自动填充注解：@TableField(fill &#x3D; FieldFill.INSERT)</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableLogic</span></span><br><span class="line"><span class="meta">@TableField(fill = FieldFill.INSERT)</span></span><br><span class="line">   <span class="keyword">private</span> Integer deleted;</span><br></pre></td></tr></table></figure><blockquote><p>在 MyMetaObjectHandler 类中的 insertFill 方法下添加自动填充的配置</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">this</span>.setFieldValByName(<span class="string">&quot;deleted&quot;</span>,<span class="number">0</span>,metaObject);</span><br></pre></td></tr></table></figure><blockquote><p>执行添加操作（即addUser() ）的方法</p></blockquote><img src="\img\yygh\mp\mp50.png" style="zoom:25%;" /><p>数据库查看结果：</p><img src="\img\yygh\mp\mp51.png" style="zoom:33%;" /><blockquote><p>执行deleteById() 方法</p></blockquote><img src="\img\yygh\mp\mp52.png" style="zoom:25%;" /><p>数据表查看结果：</p><img src="\img\yygh\mp\mp53.png" style="zoom:33%;" /><p>可以看出，逻辑删除标志 deleted 已经将0改为1，即表示该数据已被删除。</p><blockquote><p>将数据表中的逻辑删除标志修改之后。</p></blockquote><img src="\img\yygh\mp\mp54.png" style="zoom:33%;" /><blockquote><p>执行 findAll() 方法查询全部数据。</p></blockquote><img src="\img\yygh\mp\mp55.png" style="zoom:25%;" /><p>由此可见，当逻辑删除标志被设置为删除状态时，是不能被查询到的。</p><h3 id="条件构造器"><a href="#条件构造器" class="headerlink" title="条件构造器"></a>条件构造器</h3><h4 id="Wrapper"><a href="#Wrapper" class="headerlink" title="Wrapper"></a>Wrapper</h4><p>Mybatis Plus 自带有条件构造器，即 Wrapper 类，一般在项目中常用来做复杂的查询操作。</p><img src="\img\yygh\mp\mp56.png" style="zoom: 50%;" /><ul><li>Wrapper ： 条件构造抽象类，最顶端父类  <ul><li>AbstractWrapper ： 用于查询条件封装，生成 sql 的 where 条件</li><li>QueryWrapper ： 查询条件封装（常用）</li><li>UpdateWrapper ： Update 条件封装</li><li>AbstractLambdaWrapper ： 使用 Lambda 语法</li><li>LambdaQueryWrapper ：用于 Lambda 语法使用的查询 Wrapper</li><li>LambdaUpdateWrapper ： Lambda 更新封装 Wrapper</li></ul></li></ul><h4 id="常用接口测试"><a href="#常用接口测试" class="headerlink" title="常用接口测试"></a>常用接口测试</h4><h5 id="eq、ne"><a href="#eq、ne" class="headerlink" title="eq、ne"></a>eq、ne</h5><p>编写 QueryWrapperTests 类，用于测试 QueryWrapper 的方法。</p><p>在 QueryWrapperTests 类中，注入 UserMapper ，</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">QueryWrapperTests</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* eq（等于）、ne（不等于） */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">selectUser</span><span class="params">()</span> &#123;</span><br><span class="line">        QueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">        queryWrapper.eq(<span class="string">&quot;age&quot;</span>,<span class="number">22</span>);</span><br><span class="line">        List&lt;User&gt; users = userMapper.selectList(queryWrapper);</span><br><span class="line">        System.out.println(users);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="\img\yygh\mp\mp57.png" style="zoom:25%;" /><p>eq() 方法的第一个参数是字段名，第二个参数是参数的值。</p><h5 id="ge、gt、le、lt、isNull、isNotNull"><a href="#ge、gt、le、lt、isNull、isNotNull" class="headerlink" title="ge、gt、le、lt、isNull、isNotNull"></a>ge、gt、le、lt、isNull、isNotNull</h5><p>ge：大于等于，gt：大于，le：小于等于，lt：小于，isNull：为空，isNotNull：不为空。</p><img src="\img\yygh\mp\mp58.png" style="zoom:25%;" /><h5 id="between、notBetween"><a href="#between、notBetween" class="headerlink" title="between、notBetween"></a>between、notBetween</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">selectCount</span><span class="params">()</span> &#123;</span><br><span class="line">       QueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">       <span class="comment">/* between(在...之间)、notBetween(不在...之间) */</span></span><br><span class="line">       queryWrapper.between(<span class="string">&quot;age&quot;</span>, <span class="number">20</span>, <span class="number">30</span>);</span><br><span class="line">       <span class="type">Integer</span> <span class="variable">count</span> <span class="operator">=</span> userMapper.selectCount(queryWrapper); <span class="comment">//返回数据数量</span></span><br><span class="line">       System.out.println(count);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><img src="\img\yygh\mp\mp59.png" style="zoom: 25%;" /><h5 id="like、notLike、likeLeft、likeRight"><a href="#like、notLike、likeLeft、likeRight" class="headerlink" title="like、notLike、likeLeft、likeRight"></a>like、notLike、likeLeft、likeRight</h5><p>selectMaps() 方法是返回 Map 集合列表，通常配合 select() 方法一起使用。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">selectMaps</span><span class="params">()</span> &#123;</span><br><span class="line">       QueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">       <span class="comment">/* like（模糊查询）、notLike（）、likeLeft（）、likeRight（） */</span></span><br><span class="line">       queryWrapper</span><br><span class="line">               .select(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;age&quot;</span>)</span><br><span class="line">               .like(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;二&quot;</span>);</span><br><span class="line">       List&lt;Map&lt;String, Object&gt;&gt; maps = userMapper.selectMaps(queryWrapper); <span class="comment">//返回值是Map列表</span></span><br><span class="line">       maps.forEach(System.out::println);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><img src="\img\yygh\mp\mp60.png" style="zoom:25%;" /><h5 id="orderBy、orderByDesc、orderByAsc"><a href="#orderBy、orderByDesc、orderByAsc" class="headerlink" title="orderBy、orderByDesc、orderByAsc"></a>orderBy、orderByDesc、orderByAsc</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">selectListOrderBy</span><span class="params">()</span> &#123;</span><br><span class="line">       QueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">       <span class="comment">/* orderBy（排序）、orderByDesc（降序）、orderByAsc（升序） */</span></span><br><span class="line">       queryWrapper.orderByDesc(<span class="string">&quot;age&quot;</span>);</span><br><span class="line">       List&lt;User&gt; users = userMapper.selectList(queryWrapper);</span><br><span class="line">       users.forEach(System.out::println);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><img src="\img\yygh\mp\mp61.png" style="zoom:25%;" /><h4 id="查询方式"><a href="#查询方式" class="headerlink" title="查询方式"></a>查询方式</h4><table><thead><tr><th><strong>查询方式</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td><strong>setSqlSelect</strong></td><td>设置 SELECT 查询字段</td></tr><tr><td><strong>where</strong></td><td>WHERE  语句，拼接  + <strong>WHERE 条件</strong></td></tr><tr><td><strong>and</strong></td><td>AND  语句，拼接  + <strong>AND 字段&#x3D;值</strong></td></tr><tr><td><strong>andNew</strong></td><td>AND  语句，拼接  + <strong>AND (字段&#x3D;值)</strong></td></tr><tr><td><strong>or</strong></td><td>OR  语句，拼接  + <strong>OR 字段&#x3D;值</strong></td></tr><tr><td><strong>orNew</strong></td><td>OR  语句，拼接  + <strong>OR (字段&#x3D;值)</strong></td></tr><tr><td><strong>eq</strong></td><td>等于 &#x3D;</td></tr><tr><td><strong>allEq</strong></td><td>基于 Map 内容等于 &#x3D;</td></tr><tr><td><strong>ne</strong></td><td>不等于 &lt;&gt;</td></tr><tr><td><strong>gt</strong></td><td>大于 &gt;</td></tr><tr><td><strong>ge</strong></td><td>大于等于 &gt;&#x3D;</td></tr><tr><td><strong>lt</strong></td><td>小于 &lt;</td></tr><tr><td><strong>le</strong></td><td>小于等于 &lt;&#x3D;</td></tr><tr><td><strong>like</strong></td><td>LIKE  模糊查询</td></tr><tr><td><strong>notLike</strong></td><td>NOT LIKE 模糊查询</td></tr><tr><td><strong>in</strong></td><td>IN  查询</td></tr><tr><td><strong>notIn</strong></td><td>NOT  IN 查询</td></tr><tr><td><strong>isNull</strong></td><td>NULL  值查询</td></tr><tr><td><strong>isNotNull</strong></td><td>IS  NOT NULL</td></tr><tr><td><strong>groupBy</strong></td><td>GROUP BY  分组</td></tr><tr><td><strong>having</strong></td><td>HAVING  关键词</td></tr><tr><td><strong>orderBy</strong></td><td>ORDER BY  排序</td></tr><tr><td><strong>orderAsc</strong></td><td>ASC  排序 ORDER  BY</td></tr><tr><td><strong>orderDesc</strong></td><td>DESC  排序 ORDER  BY</td></tr><tr><td><strong>exists</strong></td><td>EXISTS  条件语句</td></tr><tr><td><strong>notExists</strong></td><td>NOT  EXISTS 条件语句</td></tr><tr><td><strong>between</strong></td><td>BETWEEN  条件语句</td></tr><tr><td><strong>notBetween</strong></td><td>NOT  BETWEEN 条件语句</td></tr><tr><td><strong>addFilter</strong></td><td>自由拼接 SQL</td></tr><tr><td><strong>last</strong></td><td>拼接在最后，例如：last(“LIMIT 1”)</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 预约挂号项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MyBatisPlus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>预约挂号项目</title>
      <link href="/2022/08/23/%E9%A2%84%E7%BA%A6%E6%8C%82%E5%8F%B7%E9%A1%B9%E7%9B%AE/"/>
      <url>/2022/08/23/%E9%A2%84%E7%BA%A6%E6%8C%82%E5%8F%B7%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="预约挂号项目介绍"><a href="#预约挂号项目介绍" class="headerlink" title="预约挂号项目介绍"></a>预约挂号项目介绍</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>网上预约挂号是近年来开展的一项便民的就医服务，宗旨是在缓解看病难、挂号难的就医难题，许多患者为看一次病要跑很多次医院，最终还不一定能保证看得上医生。网上预约挂号项目全面提供预约挂号等业务，从根本上解决这一就医难题。不用排长队，不用担心医生没在，可随时随地轻松挂号。</p><h3 id="项目核心技术"><a href="#项目核心技术" class="headerlink" title="项目核心技术"></a>项目核心技术</h3><h4 id="后端技术"><a href="#后端技术" class="headerlink" title="后端技术"></a>后端技术</h4><p>SpringBoot：简化新 Spring 应用的初始搭建以及开发过程。</p><p>SpringCloud：基于 SpringBoot 实现的云原生应用开发工具，Spring Cloud使用的技术：（SpringCloudGateway、SpringCloud AlibabaNacos、SpringCloud AlibabaSentinel、SpringCloudTask和SpringCloudFeign等）</p><p>MyBatis-Plus：持久层框架</p><p>Redis：内存缓存</p><p>RabbitMQ：消息中间件</p><p>HTTPClient：Http协议客户端</p><p>Swagger2：Api接口文档工具</p><p>Nginx：负载均衡</p><p>Lombok：</p><p>Mysql：关系型数据库</p><p>MongoDB：面向文档的NoSQL数据库</p><h4 id="前端技术"><a href="#前端技术" class="headerlink" title="前端技术"></a>前端技术</h4><p>Vue.js：web 界面的渐进式框架</p><p>Node.js： JavaScript 运行环境</p><p>Axios：Axios 是一个基于 promise 的 HTTP 库</p><p>NPM：包管理器</p><p>Babel：转码器</p><p>Webpack：打包工具</p><h4 id="运维技术"><a href="#运维技术" class="headerlink" title="运维技术"></a>运维技术</h4><p>Docker  ：容器技术</p><p>Git：代码管理工具 </p><h3 id="业务流程"><a href="#业务流程" class="headerlink" title="业务流程"></a>业务流程</h3><img src="\img\yygh\尚医通业务流程.png" style="zoom:50%;" /><h3 id="服务架构"><a href="#服务架构" class="headerlink" title="服务架构"></a>服务架构</h3><img src="\img\yygh\尚医通架构图.png" style="zoom: 33%;" />]]></content>
      
      
      <categories>
          
          <category> 预约挂号项目 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Docker部署Redis</title>
      <link href="/2022/08/21/Docker%E9%83%A8%E7%BD%B2Redis/"/>
      <url>/2022/08/21/Docker%E9%83%A8%E7%BD%B2Redis/</url>
      
        <content type="html"><![CDATA[<h4 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h4><p>拉取竟像时报错，报错内容如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error response from daemon: Get &quot;https://registry-1.docker.io/v2/&quot;: dial tcp 44.194.5.25:443: connect: network is unreachable</span><br></pre></td></tr></table></figure><img src="\img\redis\redis01.png" style="zoom:33%;" /><p><strong>解决方案</strong>：</p><p><strong>第1步</strong>：找到并编辑 <code>ifcfg-ens33</code> 文件。执行如下代码，进入文件中。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /ect/sysconfig/network-scripts/ifcfg-ens33</span><br></pre></td></tr></table></figure><img src="\img\redis\redis03.png" style="zoom:33%;" /><p>在其配置后加入下面代码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DNS1=8.8.8.8</span><br></pre></td></tr></table></figure><img src="\img\redis\redis02.png" style="zoom:33%;" /><p><strong>第2步</strong>：找到并编辑 <code>resolv.conf</code> 文件，执行如下代码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/resolv.conf</span><br></pre></td></tr></table></figure><img src="\img\redis\redis04.png" style="zoom:33%;" /><p><strong>第3步</strong>：执行下面代码，重启网络服务和 <code>docker</code> 服务。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service network restart  #重启网络服务</span><br><span class="line">service docker restart  #重启docker服务</span><br></pre></td></tr></table></figure><img src="\img\redis\redis05.png" style="zoom:33%;" /><p>拉取 <code>redis</code> 时，还是不能拉取。</p><p><strong>第4步</strong>：查看 <code>ifcfg-ens33</code> 文件。</p><img src="\img\redis\redis06.png" style="zoom:33%;" /><p><strong>第5步</strong>：配置子网掩码和网关。子网IP、子网掩码和网关IP可以通过虚拟机上查找。</p><p>查找路径：打开编辑 &gt; 虚拟网络编辑器 &gt; NAT设置</p><p>子网IP和子网掩码：</p><img src="\img\redis\redis07.png" style="zoom:33%;" /><p>网关IP：</p><img src="\img\redis\redis08.png" style="zoom:33%;" /><p>配置完成后的完整文件内容如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">TYPE=<span class="string">&quot;Ethernet&quot;</span>  <span class="comment">#网卡类型：为以太网</span></span><br><span class="line">PROXY_METHOD=<span class="string">&quot;none&quot;</span>  <span class="comment">#代理方式：关闭状态</span></span><br><span class="line">BROWSER_ONLY=<span class="string">&quot;no&quot;</span>  <span class="comment">#只是浏览器：否</span></span><br><span class="line">BOOTPROTO=<span class="string">&quot;static&quot;</span>  <span class="comment">#网卡协议DHCP动态主机配置协议</span></span><br><span class="line">IPADDR=<span class="string">&quot;192.168.171.129&quot;</span>  <span class="comment">#ip地址（static设置）</span></span><br><span class="line">DEFROUTE=<span class="string">&quot;yes&quot;</span>  <span class="comment">#默认路由：是</span></span><br><span class="line">IPV4_FAILURE_FATAL=<span class="string">&quot;no&quot;</span>  <span class="comment">#是否开启IPV4致命错误检测：否</span></span><br><span class="line">IPV6INIT=<span class="string">&quot;yes&quot;</span>  <span class="comment">#IPV6是否自动初始化：是</span></span><br><span class="line">IPV6_AUTOCONF=<span class="string">&quot;yes&quot;</span>  <span class="comment">#IPV6是否自动配置：是</span></span><br><span class="line">IPV6_DEFROUTE=<span class="string">&quot;yes&quot;</span></span><br><span class="line">IPV6_FAILURE_FATAL=<span class="string">&quot;no&quot;</span></span><br><span class="line"><span class="comment">#stable-privacy是一种生成IPV6的策略 </span></span><br><span class="line">IPV6_ADDR_GEN_MODE=<span class="string">&quot;stable-privacy&quot;</span>  <span class="comment">#IPV6地址生成模型</span></span><br><span class="line">NAME=<span class="string">&quot;ens33&quot;</span>  <span class="comment">#网卡名字（与DEVICE一致）</span></span><br><span class="line">UUID=<span class="string">&quot;05d76021-b6db-49c9-ae01-af1f5afe51e3&quot;</span>  <span class="comment">#唯一标识码</span></span><br><span class="line">DEVICE=<span class="string">&quot;ens33&quot;</span>  <span class="comment">#网卡设备</span></span><br><span class="line">ONBOOT=<span class="string">&quot;yes&quot;</span>  <span class="comment">#是否激活网卡</span></span><br><span class="line">DNS1=114.114.114.114  <span class="comment">#dns地址解析</span></span><br><span class="line">NETMASK=255.255.255.0  <span class="comment">#子网掩码</span></span><br><span class="line">GATEWAY=192.168.171.2  <span class="comment">#网关</span></span><br></pre></td></tr></table></figure><img src="\img\redis\redis09.png" style="zoom:33%;" /><p><strong>第6步</strong>：编辑 <code>resolv.conf</code> 文件，将 <code>8.8.8.8</code> 改成 <code>114.114.114.114</code>。</p><img src="\img\redis\redis11.png" style="zoom:33%;" /><p><strong>第7步</strong>：重启网络服务，并拉取 <code>redis</code> 镜像。</p><img src="\img\redis\redis10.png" style="zoom:33%;" /><h4 id="查看镜像"><a href="#查看镜像" class="headerlink" title="查看镜像"></a>查看镜像</h4><p>使用下面命令查看 <code>docker</code> 服务中的全部镜像。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><img src="\img\redis\redis12.png" style="zoom:33%;" /><h4 id="创建并运行容器"><a href="#创建并运行容器" class="headerlink" title="创建并运行容器"></a>创建并运行容器</h4><p>创建 <code>redis</code> 容器，设置端口映射，并运行容器，</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -id --restart=always  --name=redis -p 6379:6379 redis:5.0</span><br></pre></td></tr></table></figure><img src="\img\redis\redis13.png" style="zoom:33%;" /><p>注意：</p><ul><li><p>–restart&#x3D;always ：当 <code>docker</code> 重启时，自动重启容器；</p></li><li><p>–name&#x3D;redis ：将容器名称设置为 redis；</p></li></ul><p>使用 <code>docker ps</code> 命令查看运行的容器，查看全部容器可以使用 <code>docker ps -a</code> 。</p><h4 id="进入容器"><a href="#进入容器" class="headerlink" title="进入容器"></a>进入容器</h4><p>执行如下命令进入 <code>redis</code> 容器中。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it redis /bin/bash</span><br></pre></td></tr></table></figure><img src="\img\redis\redis14.png" style="zoom:33%;" /><p><code>exit</code> 命令是退出容器。</p><h4 id="本地连接容器"><a href="#本地连接容器" class="headerlink" title="本地连接容器"></a>本地连接容器</h4><p>连接失败！！！失败内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Could not connect to Redis at 192.168.171.129:6379: 由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。</span><br></pre></td></tr></table></figure><img src="\img\redis\redis15.png" style="zoom:33%;" /><p><strong>解决方法</strong>：</p><p><strong>第1步</strong>：找到并编辑 <code>sysctl.conf</code> 文件。执行代码如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysctl.conf</span><br></pre></td></tr></table></figure><p><strong>第2步</strong>：添加如下代码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net.ipv4.ip_forward=1</span><br></pre></td></tr></table></figure><img src="\img\redis\redis16.png" style="zoom:33%;" /><p><strong>第3步</strong>：重启 <code>network</code> 服务。执行代码如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart network</span><br></pre></td></tr></table></figure><p>查看刚才相关的内容是否修改成功：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctl net.ipv4.ip_forward</span><br></pre></td></tr></table></figure><img src="\img\redis\redis17.png" style="zoom:33%;" /><p><strong>第4步</strong>：重新使用本地 <code>redis</code> 工具连接 <code>docker</code> 服务上的 <code>redis</code> 容器。</p><img src="\img\redis\redis18.png" style="zoom:33%;" /><p>连接成功后，操作redis：</p><img src="\img\redis\redis19.png" style="zoom:33%;" />]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot整合MongoDB</title>
      <link href="/2022/08/17/SpringBoot%E6%95%B4%E5%90%88MongoDB/"/>
      <url>/2022/08/17/SpringBoot%E6%95%B4%E5%90%88MongoDB/</url>
      
        <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>spring-data-mongodb 提供了 MongoTemplate 与 MongoRepository 两种方式访问 mongodb。MongoRepository 操作简单，MongoTemplate 操作灵活，在项目中可以灵活适用这两种方式操作 mongodb。MongoRepository 的缺点是不够灵活，MongoTemplate 正好可以弥补不足。</p><h3 id="搭建开发环境"><a href="#搭建开发环境" class="headerlink" title="搭建开发环境"></a>搭建开发环境</h3><blockquote><p>使用 Spring Initializr 快速初始化一个 Spring Boot 工程</p></blockquote><img src="\img\mongodb\springmgdb101.png" style="zoom:33%;" /><blockquote><p>引入依赖</p></blockquote><p>在 pom.xml 文件中添加相关依赖。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.mongodb<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mongodb<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>mongodb<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>mongodb<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-mongodb<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--日期工具类--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>joda-time<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>joda-time<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.10.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--SpringBoot测试依赖--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>添加配置</p></blockquote><p>在 application.properties 文件添加连接 MongoDB 的地址。</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring.data.mongodb.uri</span>=<span class="string">mongodb://192.168.171.129:27017/test</span></span><br></pre></td></tr></table></figure><blockquote><p>启动虚拟机上的 MongoDB。</p></blockquote><img src="\img\mongodb\springmgdb102.png" style="zoom:33%;" /><blockquote><p>创建实体类</p></blockquote><p>在工程中，创建User实体类。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span>   <span class="comment">//使用lombok内的方法，设置实体类的getter、setter方法</span></span><br><span class="line"><span class="meta">@Document(&quot;User&quot;)</span>    <span class="comment">//指明操作的表/集合</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Id</span>   <span class="comment">//设置mongodb中的_id值</span></span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">    <span class="keyword">private</span> String createDate;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="通过MongoTemplate进行CRUD操作"><a href="#通过MongoTemplate进行CRUD操作" class="headerlink" title="通过MongoTemplate进行CRUD操作"></a>通过MongoTemplate进行CRUD操作</h3><p>CRUD：增、删、改、查</p><p><strong>常用方法</strong>：</p><ul><li>mongoTemplate.findAll(User.class)：查询User文档的全部数据</li><li>mongoTemplate.findById(<id>, User.class)：查询User文档id为id的数据</li><li>mongoTemplate.find(query, User.class)：根据query内的查询条件查询</li><li>mongoTemplate.upsert(query, update, User.class)：修改</li><li>mongoTemplate.remove(query, User.class)：删除</li><li>mongoTemplate.insert(User)：新增</li></ul><p>Query 对象<br> 1、创建一个query对象（用来封装所有条件对象)，再创建一个criteria对象（用来构建条件）<br> 2、 精准条件：criteria.and(“key”).is(“条件”)<br> 模糊条件：criteria.and(“key”).regex(“条件”)<br> 3、封装条件：query.addCriteria(criteria)<br> 4、大于（创建新的criteria）：Criteria gt &#x3D; Criteria.where(“key”).gt（“条件”）<br> 小于（创建新的criteria）：Criteria lt &#x3D; Criteria.where(“key”).lt（“条件”）<br> 5、Query.addCriteria(new Criteria().andOperator(gt,lt));<br> 6、一个query中只能有一个andOperator()。其参数也可以是Criteria数组。<br> 7、排序 ：query.with（new Sort(Sort.Direction.ASC, “age”). and(new Sort(Sort.Direction.DESC, “date”)))</p><h4 id="添加操作"><a href="#添加操作" class="headerlink" title="添加操作"></a>添加操作</h4><p>在 MongodbApplicationTests 测试类中注入 MongoTemplate，在测试类中编写添加操作的方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MongodbApplicationTests</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//注入MongoTemplate</span></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> MongoTemplate mongoTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 添加操作</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">create</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        user.setName(<span class="string">&quot;王二&quot;</span>);</span><br><span class="line">        user.setAge(<span class="number">25</span>);</span><br><span class="line">        user.setEmail(<span class="string">&quot;222@qq.com&quot;</span>);</span><br><span class="line">        user.setCreateDate(<span class="string">&quot;2022.6.19&quot;</span>);</span><br><span class="line">        <span class="type">User</span> <span class="variable">user1</span> <span class="operator">=</span> mongoTemplate.insert(user);</span><br><span class="line">        System.out.println(user1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行添加方法后的结果：</p><img src="\img\mongodb\springmgdb103.png" style="zoom: 25%;" /><p>虚拟机查询MongoDB内的数据：</p><img src="\img\mongodb\springmgdb104.png" style="zoom:33%;" /><h4 id="查询操作"><a href="#查询操作" class="headerlink" title="查询操作"></a>查询操作</h4><blockquote><p>查询集合中所有记录</p></blockquote><p>在测试类中编写查询所有记录的方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查询集合中所有记录</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">findAll</span><span class="params">()</span> &#123;</span><br><span class="line">       List&lt;User&gt; users = mongoTemplate.findAll(User.class);</span><br><span class="line">       users.forEach(System.out::println);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src="\img\mongodb\springmgdb105.png" style="zoom:25%;" /><blockquote><p>根据id查询集合中的记录</p></blockquote><p>在测试类中编写根据id查询记录的方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据id查询集合中的记录</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">findById</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> mongoTemplate.findById(<span class="string">&quot;62fc4a68eb2f0747655a243c&quot;</span>, User.class);</span><br><span class="line">       System.out.println(user);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src="\img\mongodb\springmgdb106.png" style="zoom:25%;" /><blockquote><p>条件查询：根据name和age查询</p></blockquote><p>在测试类中编写根据name和age查询记录的方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//条件查询：根据name和age查询</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">findByNameAndAge</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">//使用Query方法中的Criteria方式构建条件（即name=麻子，age=22）</span></span><br><span class="line">       <span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(Criteria.where(<span class="string">&quot;name&quot;</span>).is(<span class="string">&quot;麻子&quot;</span>).and(<span class="string">&quot;age&quot;</span>).is(<span class="number">22</span>));</span><br><span class="line">       List&lt;User&gt; users = mongoTemplate.find(query, User.class);</span><br><span class="line">       System.out.println(users);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src="\img\mongodb\springmgdb107.png" style="zoom:25%;" /><blockquote><p>模糊查询</p></blockquote><p>在测试类中编写模糊查询方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//模糊查询</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">findLikeList</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">/* 查询name中包含“王”的User集合记录 */</span></span><br><span class="line">       <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;王&quot;</span>;</span><br><span class="line">       <span class="comment">/* 使用正则表达式拼接 */</span></span><br><span class="line">       <span class="type">String</span> <span class="variable">regex</span> <span class="operator">=</span> String.format(<span class="string">&quot;%s%s%s&quot;</span>, <span class="string">&quot;^.*&quot;</span>, name, <span class="string">&quot;.*$&quot;</span>);</span><br><span class="line">       <span class="type">Pattern</span> <span class="variable">pattern</span> <span class="operator">=</span> Pattern.compile(regex,Pattern.CASE_INSENSITIVE);</span><br><span class="line">       <span class="comment">//使用Query方法中的Criteria方式构建条件</span></span><br><span class="line">       <span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(Criteria.where(<span class="string">&quot;name&quot;</span>).regex(pattern));</span><br><span class="line">       <span class="comment">/* 调用find方法实现模糊查询 */</span></span><br><span class="line">       List&lt;User&gt; users = mongoTemplate.find(query, User.class);</span><br><span class="line">       System.out.println(users);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src="\img\mongodb\springmgdb108.png" style="zoom:25%;" /><blockquote><p>分页查询</p></blockquote><p>在测试类中编写分页查询方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分页查询</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">findPageUserList</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="type">int</span> <span class="variable">pageNo</span> <span class="operator">=</span> <span class="number">1</span>;  <span class="comment">//当前页</span></span><br><span class="line">       <span class="type">int</span> <span class="variable">pageSize</span> <span class="operator">=</span> <span class="number">3</span>;  <span class="comment">//每页显示的记录数</span></span><br><span class="line">       <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;王&quot;</span>;</span><br><span class="line">       <span class="comment">/* 条件构建 */</span></span><br><span class="line">       <span class="type">String</span> <span class="variable">regex</span> <span class="operator">=</span> String.format(<span class="string">&quot;%s%s%s&quot;</span>, <span class="string">&quot;^.*&quot;</span>, name, <span class="string">&quot;.*$&quot;</span>);</span><br><span class="line">       <span class="type">Pattern</span> <span class="variable">pattern</span> <span class="operator">=</span> Pattern.compile(regex,Pattern.CASE_INSENSITIVE);</span><br><span class="line">       <span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(Criteria.where(<span class="string">&quot;name&quot;</span>).regex(pattern));</span><br><span class="line">       <span class="comment">/* 分页构建 */</span></span><br><span class="line">       <span class="comment">//查询记录数</span></span><br><span class="line">       <span class="type">long</span> <span class="variable">count</span> <span class="operator">=</span> mongoTemplate.count(query, User.class);</span><br><span class="line">       <span class="comment">//分页</span></span><br><span class="line">       List&lt;User&gt; users = mongoTemplate.find(</span><br><span class="line">               query.skip((pageNo - <span class="number">1</span>) * pageSize).limit(pageSize), User.class);</span><br><span class="line">       System.out.println(count);</span><br><span class="line">       System.out.println(users);</span><br><span class="line">       users.forEach(System.out::println);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src="\img\mongodb\springmgdb109.png" style="zoom:25%;" /><h4 id="修改操作"><a href="#修改操作" class="headerlink" title="修改操作"></a>修改操作</h4><p>在测试类中编写修改的方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//修改操作</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">update</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">//根据id查询</span></span><br><span class="line">       <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> mongoTemplate.findById(<span class="string">&quot;62fc55c9687faf1ad2c15069&quot;</span>, User.class);</span><br><span class="line">       System.out.println(user);</span><br><span class="line">       <span class="comment">//设置修改值</span></span><br><span class="line">       user.setName(<span class="string">&quot;吴杰&quot;</span>);</span><br><span class="line">       user.setEmail(<span class="string">&quot;666@qq.com&quot;</span>);</span><br><span class="line">       user.setAge(<span class="number">99</span>);</span><br><span class="line">       <span class="comment">//调用方法实现修改操作</span></span><br><span class="line">       <span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(Criteria.where(<span class="string">&quot;_id&quot;</span>).is(user.getId()));</span><br><span class="line">       <span class="type">Update</span> <span class="variable">update</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Update</span>();</span><br><span class="line">       update.set(<span class="string">&quot;name&quot;</span>,user.getName());</span><br><span class="line">       update.set(<span class="string">&quot;email&quot;</span>,user.getEmail());</span><br><span class="line">       update.set(<span class="string">&quot;age&quot;</span>,user.getAge());</span><br><span class="line">       <span class="type">UpdateResult</span> <span class="variable">result</span> <span class="operator">=</span> mongoTemplate.upsert(query, update, User.class);</span><br><span class="line">       <span class="type">long</span> <span class="variable">count</span> <span class="operator">=</span> result.getModifiedCount();</span><br><span class="line">       System.out.println(count);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src="\img\mongodb\springmgdb110.png" style="zoom:25%;" /><h4 id="删除操作"><a href="#删除操作" class="headerlink" title="删除操作"></a>删除操作</h4><p>查询mongodb数据库中User集合的全部数据：</p><img src="\img\mongodb\springmgdb111.png" style="zoom:33%;" /><p>在测试类中编写删除的方法。将 name为王爷的数据删除。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//删除操作</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">delete</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(Criteria.where(<span class="string">&quot;_id&quot;</span>).is(<span class="string">&quot;62fc55e5a53f096e37f58bbc&quot;</span>));</span><br><span class="line">       <span class="type">DeleteResult</span> <span class="variable">remove</span> <span class="operator">=</span> mongoTemplate.remove(query, User.class);</span><br><span class="line">       <span class="type">long</span> <span class="variable">deletedCount</span> <span class="operator">=</span> remove.getDeletedCount();</span><br><span class="line">       System.out.println(deletedCount);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src="\img\mongodb\springmgdb112.png" style="zoom:25%;" /><p>数据库数据：</p><img src="\img\mongodb\springmgdb113.png" style="zoom:33%;" /><h3 id="通过MongoRepository进行CRUD操作"><a href="#通过MongoRepository进行CRUD操作" class="headerlink" title="通过MongoRepository进行CRUD操作"></a>通过MongoRepository进行CRUD操作</h3><p>在 Spring Data 中提供了对 MongoDB 数据访问的支持，我们只需要继承 MongoRepository 类，按照 Spring Data 规范就可实现 CRUD 操作。</p><p>SpringData 方法定义规范：</p><p>注意：</p><p>1、不是随便声明的，而需要符合一定的规范；<br>2、 查询方法以 find | read | get 开头；<br>3、 涉及条件查询时，条件的属性用条件关键字连接。要注意的是：条件属性首字母需要大写；<br>5、 支持属性的级联查询，但若当前类有符合条件的属性则优先使用，而不使用级联属性，若需要使用级联属性，则属性之间使用 <code>_ </code> 符合强制进行连接。</p><h4 id="操作前准备"><a href="#操作前准备" class="headerlink" title="操作前准备"></a>操作前准备</h4><p>创建 UserRepository 接口，让其继承 MongoRepository 类。使用 @Repository 注解，注明 UserRepository 接口为</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserRepository</span> <span class="keyword">extends</span> <span class="title class_">MongoRepository</span>&lt;User,String&gt; &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建 MongoRepositoryTests 测试类，用于测试 MongoRepository 的增删改查操作。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MongoRepositoryTests</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="添加操作-1"><a href="#添加操作-1" class="headerlink" title="添加操作"></a>添加操作</h4><p>查询 MongoDB 数据库中 User 集合的数据。</p><img src="\img\mongodb\springmgdb114.png" style="zoom:33%;" /><p>在测试类中注入 UserRepository 接口，编写添加方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//注入MongoRepository</span></span><br><span class="line">   <span class="meta">@Autowired</span></span><br><span class="line">   <span class="keyword">private</span> UserRepository userRepository;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 添加操作</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">create</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">       user.setName(<span class="string">&quot;李渊&quot;</span>);</span><br><span class="line">       user.setAge(<span class="number">8</span>);</span><br><span class="line">       user.setEmail(<span class="string">&quot;618-626@qq.com&quot;</span>);</span><br><span class="line">       user.setCreateDate(<span class="string">&quot;566-635&quot;</span>);</span><br><span class="line">       <span class="type">User</span> <span class="variable">u</span> <span class="operator">=</span> userRepository.save(user);</span><br><span class="line">       System.out.println(u);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src="\img\mongodb\springmgdb115.png" style="zoom:25%;" /><p>数据库的 User 集合：</p><img src="\img\mongodb\springmgdb116.png" style="zoom:33%;" /><h4 id="查询操作-1"><a href="#查询操作-1" class="headerlink" title="查询操作"></a>查询操作</h4><blockquote><p>查询User集合中的所有数据</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查询集合中所有记录</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">findAll</span><span class="params">()</span> &#123;</span><br><span class="line">       List&lt;User&gt; users = userRepository.findAll();</span><br><span class="line">       users.forEach(System.out::println);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src="\img\mongodb\springmgdb117.png" style="zoom:25%;" /><blockquote><p>根据id查询</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据id查询集合中的记录</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">findById</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userRepository.findById(<span class="string">&quot;62fc9de2468af469d5b44f30&quot;</span>).get();</span><br><span class="line">       System.out.println(user);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src="\img\mongodb\springmgdb118.png" style="zoom:25%;" /><blockquote><p>条件查询</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//条件查询：根据name和age查询</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">findByNameAndAge</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">       user.setName(<span class="string">&quot;李四&quot;</span>);</span><br><span class="line">       user.setAge(<span class="number">27</span>);</span><br><span class="line">       Example&lt;User&gt; userExample = Example.of(user);</span><br><span class="line">       userRepository.findAll(userExample);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src="\img\mongodb\springmgdb119.png" style="zoom:25%;" /><blockquote><p>模糊查询</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//模糊查询</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">findLikeList</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">//设置模糊查询的匹配规则</span></span><br><span class="line">       <span class="comment">/* ExampleMatcher.StringMatcher.CONTAINING：设置模糊查询 */</span></span><br><span class="line">       <span class="type">ExampleMatcher</span> <span class="variable">matcher</span> <span class="operator">=</span> ExampleMatcher.matching()</span><br><span class="line">               .withStringMatcher(ExampleMatcher.StringMatcher.CONTAINING)</span><br><span class="line">               .withIgnoreCase(<span class="literal">true</span>); <span class="comment">//忽略大小写</span></span><br><span class="line">       <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">       user.setName(<span class="string">&quot;李&quot;</span>);</span><br><span class="line">       Example&lt;User&gt; userExample = Example.of(user,matcher);</span><br><span class="line">       List&lt;User&gt; users = userRepository.findAll(userExample);</span><br><span class="line">       System.out.println(users);</span><br><span class="line">       users.forEach(System.out::println);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src="\img\mongodb\springmgdb120.png" style="zoom:25%;" /><blockquote><p>分页查询</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分页查询</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">findPageUserList</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">//设置分页的参数，0表示第一页</span></span><br><span class="line">       <span class="type">Pageable</span> <span class="variable">pageable</span> <span class="operator">=</span> PageRequest.of(<span class="number">0</span>,<span class="number">3</span>);</span><br><span class="line">       <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">       user.setName(<span class="string">&quot;李四&quot;</span>);</span><br><span class="line">       Example&lt;User&gt; userExample = Example.of(user);</span><br><span class="line">       Page&lt;User&gt; page = userRepository.findAll(userExample, pageable);</span><br><span class="line">       System.out.println(page);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src="\img\mongodb\springmgdb121.png" style="zoom:25%;" /><p>添加断点，DBU查询 page 内的值。</p><img src="\img\mongodb\springmgdb122.png" style="zoom:25%;" /><h4 id="修改操作-1"><a href="#修改操作-1" class="headerlink" title="修改操作"></a>修改操作</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//修改操作</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">update</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">//根据id查询</span></span><br><span class="line">       <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userRepository.findById(<span class="string">&quot;62fc55c9687faf1ad2c15069&quot;</span>).get();</span><br><span class="line">       System.out.println(user);</span><br><span class="line">       <span class="comment">//设置修改值</span></span><br><span class="line">       user.setName(<span class="string">&quot;李世民&quot;</span>);</span><br><span class="line">       user.setAge(<span class="number">23</span>);</span><br><span class="line">       user.setEmail(<span class="string">&quot;626-649@qq.com&quot;</span>);</span><br><span class="line">       user.setCreateDate(<span class="string">&quot;599-649&quot;</span>);</span><br><span class="line">       <span class="type">User</span> <span class="variable">save</span> <span class="operator">=</span> userRepository.save(user);</span><br><span class="line">       System.out.println(save);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src="\img\mongodb\springmgdb123.png" style="zoom:25%;" /><h4 id="删除操作-1"><a href="#删除操作-1" class="headerlink" title="删除操作"></a>删除操作</h4><p>数据库数据查询：</p><img src="\img\mongodb\springmgdb124.png" style="zoom:33%;" /><p>在测试类中编写根据id删除数据的方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//删除操作</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">delete</span><span class="params">()</span> &#123;</span><br><span class="line">       userRepository.deleteById(<span class="string">&quot;62fc4a4efe8af07497bb33a2&quot;</span>);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>运行成功后，查询数据库数据的结果：</p><img src="\img\mongodb\springmgdb125.png" style="zoom: 33%;" />]]></content>
      
      
      <categories>
          
          <category> MongoDB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MongoDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MongoDB</title>
      <link href="/2022/08/16/MongoDB/"/>
      <url>/2022/08/16/MongoDB/</url>
      
        <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><h4 id="NoSQL简介"><a href="#NoSQL简介" class="headerlink" title="NoSQL简介"></a>NoSQL简介</h4><p>NoSQL（Not Only SQL 的简称），意为反 SQL 运动，指的是非关系型的数据库，是一项全新的数据库革命性运动，早期就有人提出，发展至 2009 年趋势越发高涨。NoSQL 的拥护者们提倡运用非关系型的数据存储，相对于目前铺天盖地的关系型数据库运用，这一概念无疑是一种全新的思维的注入。</p><p>NoSQL的特点：</p><ul><li><p>对数据库高并发读写。</p></li><li><p>对海量数据的高效率存储和访问。</p></li><li><p>对数据库的高可扩展性和高可用性。</p></li></ul><p>NoSQL的弱点：</p><ul><li><p>数据库事务一致性需求</p></li><li><p>数据库的写实时性和读实时性需求</p></li><li><p>对复杂的SQL查询，特别是多表关联查询的需求</p></li></ul><h4 id="什么是MongoDB"><a href="#什么是MongoDB" class="headerlink" title="什么是MongoDB"></a>什么是MongoDB</h4><p>MongoDB 是由 C++ 语言编写的，是一个基于分布式文件存储的开源数据库系统。</p><p>在高负载的情况下，添加更多的节点，可以保证服务器性能。</p><p>MongoDB 旨在为WEB应用提供可扩展的高性能数据存储解决方案。</p><p>MongoDB 将数据存储为一个文档，数据结构由键值(key&#x3D;&gt;value)对组成。MongoDB 文档类似于 JSON 对象。字段值可以包含其他文档，数组及文档数组。</p><h4 id="MongoDB-特点"><a href="#MongoDB-特点" class="headerlink" title="MongoDB 特点"></a>MongoDB 特点</h4><p>1、MongoDB 是一个面向文档存储的数据库，操作起来比较简单和容易。</p><p>2、你可以在MongoDB记录中设置任何属性的索引 (如：FirstName&#x3D;”Sameer”,Address&#x3D;”8 Gandhi Road”)来实现更快的排序。</p><p>3、你可以通过本地或者网络创建数据镜像，这使得MongoDB有更强的扩展性。</p><p>4、如果负载的增加（需要更多的存储空间和更强的处理能力） ，它可以分布在计算机网络中的其他节点上这就是所谓的分片。</p><p>5、Mongo支持丰富的查询表达式。查询指令使用JSON形式的标记，可轻易查询文档中内嵌的对象及数组。</p><p>6、MongoDb 使用update()命令可以实现替换完成的文档（数据）或者一些指定的数据字段 。</p><p>7、Mongodb中的Map&#x2F;reduce主要是用来对数据进行批量处理和聚合操作。</p><p>8、Map和Reduce。Map函数调用emit(key,value)遍历集合中所有的记录，将key与value传给Reduce函数进行处理。</p><p>9、Map函数和Reduce函数是使用Javascript编写的，并可以通过db.runCommand或mapreduce命令来执行MapReduce操作。</p><p>10、GridFS是MongoDB中的一个内置功能，可以用于存放大量小文件。</p><p>11、MongoDB允许在服务端执行脚本，可以用Javascript编写某个函数，直接在服务端执行，也可以把函数的定义存储在服务端，下次直接调用即可。</p><p>12、MongoDB支持各种编程语言:RUBY，PYTHON，JAVA，C++，PHP，C#等多种语言。</p><p>13、MongoDB安装简单。</p><h3 id="docker安装"><a href="#docker安装" class="headerlink" title="docker安装"></a>docker安装</h3><ul><li>拉取 mongodb 镜像</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull mongo</span><br></pre></td></tr></table></figure><img src="\img\mongodb\mongodb01.png" style="zoom:38%;" /><ul><li>创建和启动容器</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --restart=always -p 27017:27017 --name mongodb -v /data/db:/data/db -d mongo</span><br></pre></td></tr></table></figure><blockquote><p>–restart&#x3D;always：当docker重启时，自动重启容器</p></blockquote><img src="\img\mongodb\mongodb02.png" style="zoom:38%;" /><ul><li>查询mongodb容器</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps </span><br></pre></td></tr></table></figure><img src="\img\mongodb\mongodb03.png" style="zoom:38%;" /><blockquote><p>docker ps 是查询运行的容器，查询全部容器使用 docker ps -a</p></blockquote><ul><li>进入mongodb容器</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it mongodb /bin/bash</span><br></pre></td></tr></table></figure><ul><li>进入mongodb控制台，对mongodb数据库进行操作</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongo</span><br></pre></td></tr></table></figure><img src="\img\mongodb\mongodb04.png" style="zoom:38%;" /><ul><li>查询所有的数据库</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show dbs</span><br></pre></td></tr></table></figure><img src="\img\mongodb\mongodb05.png" style="zoom:38%;" /><p>查出数据库，表示mongodb安装成功。</p><h3 id="基本概念与解析"><a href="#基本概念与解析" class="headerlink" title="基本概念与解析"></a>基本概念与解析</h3><p>在 mongodb 中基本的概念是文档、集合、数据库。详细见下表：</p><table><thead><tr><th>SQL术语&#x2F;概念</th><th>MongoDB术语&#x2F;概念</th><th>解释&#x2F;说明</th></tr></thead><tbody><tr><td>database</td><td>database</td><td>数据库</td></tr><tr><td>table</td><td>collection</td><td>数据库表&#x2F;集合</td></tr><tr><td>row</td><td>document</td><td>数据记录行&#x2F;文档</td></tr><tr><td>column</td><td>field</td><td>数据字段&#x2F;域</td></tr><tr><td>index</td><td>index</td><td>索引</td></tr><tr><td>table joins</td><td>&#x2F;</td><td>多表连接，MongoDB不支持</td></tr><tr><td>primary key</td><td>primary key</td><td>主键，MongoDB自动将 _id 字段设置为主键</td></tr></tbody></table><h4 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h4><p>一个mongodb中可以建立多个数据库</p><p>常用操作：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">1、Help查看命令提示 </span><br><span class="line">db.help();</span><br><span class="line">2、切换/创建数据库</span><br><span class="line">use test</span><br><span class="line">如果数据库不存在，则创建数据库，否则切换到指定数据库</span><br><span class="line">3、查询所有数据库 </span><br><span class="line">show dbs;</span><br><span class="line">4、删除当前使用数据库 </span><br><span class="line">db.dropDatabase();</span><br><span class="line">5、查看当前使用的数据库 </span><br><span class="line">db.getName();</span><br><span class="line">6、显示当前db状态 </span><br><span class="line">db.stats();</span><br><span class="line">7、当前db版本 </span><br><span class="line">db.version();</span><br><span class="line">8、查看当前db的链接机器地址 </span><br><span class="line">db.getMongo〇;</span><br></pre></td></tr></table></figure><img src="\img\mongodb\mongodb06.png" style="zoom:38%;" /><blockquote><p>使用 use yygh 命令创建 yygh 数据库</p><p>使用 db.getName() 命令查询当前数据库名</p><p>注意：当数据库没有数据时，使用 show dbs 查询不了创建的数据库，只能查询系统自带的数据和有数据的数据库。</p></blockquote><h4 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h4><p>文档是一组键值（key-value）对（即 BSON）。MongoDB 的文档不需要设置相同的字段，并且相同的字段不需要相同的数据类型，这与关系型数据库有很大的区别，也是 MongoDB 非常突出的特点。</p><p>下表列出了 RDBMS 与 MongoDB 对应的术语：</p><table><thead><tr><th>RDBMS</th><th>MongoDB</th></tr></thead><tbody><tr><td>数据库</td><td>数据库</td></tr><tr><td>表格</td><td>集合</td></tr><tr><td>行</td><td>文档</td></tr><tr><td>列</td><td>字段</td></tr><tr><td>表联合</td><td>嵌入文档</td></tr><tr><td>主键</td><td>主键（MongoDB提供了 key 为 _id）</td></tr></tbody></table><p><strong>注意</strong>：</p><blockquote><p>1、文档中的键&#x2F;值对是有序的。</p><p>2、文档中的值不仅可以是在双引号里面的字符串，还可以是其他几种数据类型（甚至可以是整个嵌入的文档)。</p><p>3、MongoDB区分类型和大小写。</p><p>4、MongoDB的文档不能有重复的键。</p><p>5、文档的键是字符串。除了少数例外情况，键可以使用任意UTF-8字符。</p></blockquote><p><strong>文档键命名规范</strong>：</p><blockquote><p>1、键不能含有 \0 (空字符)。这个字符用来表示键的结尾。</p><p>2、. 和 $ 有特别的意义，只有在特定环境下才能使用。</p><p>3、以下划线 “_” 开头的键是保留的(不是严格要求的)。</p></blockquote><h4 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h4><p>集合就是 MongoDB 文档组，类似于 RDBMS （关系数据库管理系统：Relational Database Management System)中的表格。</p><p>集合存在于数据库中，集合没有固定的结构，这意味着你在对集合可以插入不同格式和类型的数据，但通常情况下我们插入集合的数据都会有一定的关联性。</p><p>常用命令：</p><blockquote><p>1、 创建一个集合（table)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.createCollection( &quot;collName&quot;);</span><br></pre></td></tr></table></figure><p>2、 得到指定名称的集合（table )</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.getCollection(&quot;user&quot;);</span><br></pre></td></tr></table></figure></blockquote><img src="\img\mongodb\mongodb07.png" style="zoom:38%;" /><h4 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h4><p>下表为MongoDB中常用的几种数据类型：</p><table><thead><tr><th>数据类型</th><th>描述</th></tr></thead><tbody><tr><td>String</td><td>字符串。存储数据常用的数据类型。在 MongoDB 中，UTF-8 编码的字符串才是合法的。</td></tr><tr><td>Integer</td><td>整型数值。用于存储数值。根据你所采用的服务器，可分为 32 位或 64 位。</td></tr><tr><td>Boolean</td><td>布尔值。用于存储布尔值（真&#x2F;假）。</td></tr><tr><td>Double</td><td>双精度浮点值。用于存储浮点值。</td></tr><tr><td>Min&#x2F;Max keys</td><td>将一个值与 BSON（二进制的 JSON）元素的最低值和最高值相对比。</td></tr><tr><td>Arrays</td><td>用于将数组或列表或多个值存储为一个键。</td></tr><tr><td>Timestamp</td><td>时间戳。记录文档修改或添加的具体时间。</td></tr><tr><td>Object</td><td>用于内嵌文档。</td></tr><tr><td>Null</td><td>用于创建空值。</td></tr><tr><td>Symbol</td><td>符号。该数据类型基本上等同于字符串类型，但不同的是，它一般用于采用特殊符号类型的语言。</td></tr><tr><td>Date</td><td>日期时间。用 UNIX 时间格式来存储当前日期或时间。你可以指定自己的日期时间：创建 Date 对象，传入年月日信息。</td></tr><tr><td>Object ID</td><td>对象 ID。用于创建文档的 ID。</td></tr><tr><td>Binary Data</td><td>二进制数据。用于存储二进制数据。</td></tr><tr><td>Code</td><td>代码类型。用于在文档中存储 JavaScript 代码。</td></tr><tr><td>Regular</td><td>正则表达式类型。用于存储正则表达式。</td></tr><tr><td>expression</td><td></td></tr></tbody></table><h3 id="适用场景"><a href="#适用场景" class="headerlink" title="适用场景"></a>适用场景</h3><ul><li><strong>适用场景</strong></li></ul><p>1、网站数据：Mongo非常适合实时的插入，更新与查询，并具备网站实时数据存储所需的复制及高度伸缩性。</p><p>2、缓存：由于性能很高，Mongo也适合作为信息基础设施的缓存层。在系统重启之后，由M ongo搭建的持久化缓存层可以避免下层的数据源过载。</p><p>3、大尺寸，低价值的数据：使用传统的关系型数据库存储一些数据时可能会比较昂贵， 在此之前，很多时候程序员往往会选择传统的文件进行存储。</p><p>4、高伸缩性的场景：Mongo非常适合由数十或数百台服务器组成的数据库。Mongo的路线图中已经包含对Map Reduce弓摩的内置支持。</p><p>5、用于对象及 JSON数据的存储：Mongo的BSON数据格式非常适合文档化格式的存储 及查询。</p><ul><li><strong>不适用场合</strong></li></ul><p>1、高度事务性的系统：例如银行或会计系统。传统的关系型数据库目前还是更适用于需要大量原子性复杂事务的应用程序。</p><p>2、传统的商业智能应用：针对特定问题的BI数据库会对产生高度优化的查询方式。对于此类应用，数据仓库可能是更合适的选择。</p><h3 id="入门案例"><a href="#入门案例" class="headerlink" title="入门案例"></a>入门案例</h3><h4 id="INSERT"><a href="#INSERT" class="headerlink" title="INSERT"></a>INSERT</h4><p>INSERT，添加操作。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#添加数据</span><br><span class="line">db.User.save(&#123;name:<span class="string">&#x27;zhangsan&#x27;</span>,age:<span class="number">21</span>,sex:<span class="literal">true</span>&#125;)</span><br><span class="line">#查询数据</span><br><span class="line">db.User.find()</span><br></pre></td></tr></table></figure><img src="\img\mongodb\mongodb08.png" style="zoom:38%;" /><p>_id组合</p><p>Objectld是 “_id” 的默认类型。Objectld 使用12字节的存储空间，每个字节二位十六进制数字， 是一个24位的字符串。</p><img src="\img\mongodb\mongodb09.png" style="zoom:50%;" /><ul><li><p>时间戳：时间不断变化的</p></li><li><p>机器：主机的唯_标识码。通常是机器主机名的散列值，这样可以确保不同主机生成不同的Objectld ，不产生冲突。</p></li><li><p>PID:为了确保在同一台机器上并发的多个进程产生的Objectld是唯一的，所以加上进程标识符(PID).</p></li><li><p>计数器：前9个字节保证了同一秒钟不同机器不同进程产生的 Objectld 是唯一的。 后3个字节就是一个自动增加的计数器，确保相同进程同一秒产生的 Objectld 也是 不一样。同一秒最多允许每个进程拥有 IS 777 2托个不同的 Objectld。</p></li></ul><h4 id="Query"><a href="#Query" class="headerlink" title="Query"></a>Query</h4><ul><li><p>WHERE（根据某个条件查询）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.User.find(&#123;name:&quot;李四&quot;&#125;)</span><br></pre></td></tr></table></figure><p>相当于MySQL的SQL语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">User</span> <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;李四&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>FIELDS（根据某个条件查询某条数据）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">db.User.find(&#123;age:<span class="number">21</span>&#125;, &#123;<span class="string">&#x27;name&#x27;</span>:<span class="number">1</span>, <span class="string">&#x27;age&#x27;</span>:<span class="number">1</span>&#125;)</span><br><span class="line">db.User.find(&#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;zhangsan&#x27;</span>&#125;, &#123;<span class="string">&#x27;name&#x27;</span>:<span class="number">1</span>, <span class="string">&#x27;age&#x27;</span>:<span class="number">1</span>&#125;)</span><br></pre></td></tr></table></figure><p>相当于MySQL的SQL语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> name, age <span class="keyword">from</span> <span class="keyword">User</span> <span class="keyword">where</span> age <span class="operator">=</span> <span class="number">21</span></span><br><span class="line"><span class="keyword">select</span> name, age <span class="keyword">from</span> <span class="keyword">User</span> <span class="keyword">where</span> name <span class="operator">=</span> zhangsan</span><br></pre></td></tr></table></figure></li></ul><img src="\img\mongodb\mongodb10.png" style="zoom:38%;" /><ul><li><p>SORT（排序）</p><p>在 MongoDB 中使用 sort() 方法对数据进行排序，sort() 方法可以通过参数指定排序的字段，并使用 1 和 -1 来指定排序的方式，其中 1 为升序排列，而 -1 是用于降序排列。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">User</span> <span class="keyword">order</span> <span class="keyword">by</span> age</span><br><span class="line">db.User.find().sort(&#123;age:<span class="number">1</span>&#125;)</span><br><span class="line">db.User.find().sort(&#123;age:<span class="number">1</span>&#125;)</span><br></pre></td></tr></table></figure><img src="\img\mongodb\mongodb11.png" style="zoom:38%;" /></li><li><p>SUCE</p><p>在 MongoDB 中使用 limit()方法来读取指定数量的数据，skip() 方法来跳过指定数量的数据。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">User</span> <span class="keyword">skip</span> <span class="number">2</span> limit <span class="number">5</span></span><br><span class="line">db.User.find().<span class="keyword">skip</span>(<span class="number">0</span>).limit(<span class="number">5</span>)</span><br><span class="line">db.User.find().<span class="keyword">skip</span>(<span class="number">2</span>).limit(<span class="number">5</span>)</span><br></pre></td></tr></table></figure></li></ul><img src="\img\mongodb\mongodb12.png" style="zoom:38%;" /><ul><li><p>IN</p><p>查询某个范围内的数据。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">User</span> <span class="keyword">where</span> age <span class="keyword">in</span> (<span class="number">21</span>,<span class="number">18</span>)</span><br><span class="line"><span class="operator">&gt;</span> db.User.find(&#123;age:&#123;$<span class="keyword">in</span>:[<span class="number">21</span>,<span class="number">18</span>]&#125;&#125;)</span><br></pre></td></tr></table></figure></li><li><p>COUNT</p><p>查询某个范围内的数据条数。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># <span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> <span class="keyword">User</span> <span class="keyword">where</span> age <span class="operator">&gt;</span><span class="number">20</span></span><br><span class="line"><span class="operator">&gt;</span> db.User.find(&#123;age:&#123;$gt:<span class="number">20</span>&#125;&#125;).<span class="built_in">count</span>()</span><br></pre></td></tr></table></figure></li><li><p>OR</p><p>查询某个值到某个值之间的数据。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">User</span> <span class="keyword">where</span> age <span class="operator">=</span> <span class="number">21</span> <span class="keyword">or</span> age <span class="operator">=</span> <span class="number">28</span></span><br><span class="line"><span class="operator">&gt;</span> db.User.find(&#123;$<span class="keyword">or</span>:[&#123;age:<span class="number">21</span>&#125;, &#123;age:<span class="number">28</span>&#125;]&#125;)</span><br></pre></td></tr></table></figure></li></ul><img src="\img\mongodb\mongodb13.png" style="zoom:38%;" /><h4 id="Update"><a href="#Update" class="headerlink" title="Update"></a>Update</h4><p>可直接用类似 T-SQL 条件表达式更新，或用 Save() 更新从数据库返回到文档对象。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># <span class="keyword">update</span> <span class="keyword">User</span> <span class="keyword">set</span> age <span class="operator">=</span> <span class="number">100</span>, sex <span class="operator">=</span> <span class="number">0</span> <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;user1&#x27;</span></span><br><span class="line">db.User.update(&#123;_id:<span class="string">&#x27;62fb00fc887e0e79c4a93a16&#x27;</span>&#125;, &#123;$<span class="keyword">set</span>:&#123;name:<span class="string">&#x27;张三&#x27;</span>,age:<span class="number">66</span>,sex:<span class="number">0</span>&#125;&#125;)</span><br></pre></td></tr></table></figure><img src="\img\mongodb\mongodb15.png" style="zoom:38%;" /><p>update() 方法的参数：</p><blockquote><p>语句：db.collection.update(criteria, objNew, upsert, mult)</p></blockquote><ul><li><p>collection：集合名（类似于MySQL的表名）</p></li><li><p>criteria：需要更新的条件表达式</p></li><li><p>objNew：更新表达式</p></li><li><p>upsert：如FI标记录不存在，是否插入新文档。 </p></li><li><p>multi：是否更新多个文档。</p></li></ul><h4 id="Remove"><a href="#Remove" class="headerlink" title="Remove"></a>Remove</h4><p>remove() 方法用于删除单个或全部文档，删除后的文档无法恢复。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">db.User.remove(id)#移除对应id的行</span><br><span class="line">db.User.remove(&#123;&#125;)#移除所有</span><br></pre></td></tr></table></figure><img src="\img\mongodb\mongodb16.png" style="zoom:38%;" /><h4 id="aggregate"><a href="#aggregate" class="headerlink" title="aggregate"></a>aggregate</h4><p>MongoDB中聚合(aggregate)主要用于处理数据(诸如统计平均值,求和等)，并返回计算后的数据结果。有点类似SQL语句中的 count(*)。</p><ul><li><strong>插入数据</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">db.article.insert(&#123;</span><br><span class="line">    title: <span class="string">&#x27;MongoDB Overview&#x27;</span>, </span><br><span class="line">   description: <span class="string">&#x27;MongoDB is no sql database&#x27;</span>,</span><br><span class="line">   by_user: <span class="string">&#x27;runoob.com&#x27;</span>,</span><br><span class="line">   url: <span class="string">&#x27;http://www.runoob.com&#x27;</span>,</span><br><span class="line">   tags: [<span class="string">&#x27;mongodb&#x27;</span>, <span class="string">&#x27;database&#x27;</span>, <span class="string">&#x27;NoSQL&#x27;</span>],</span><br><span class="line">   likes: <span class="number">100</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">db.article.insert(&#123;</span><br><span class="line">   title: <span class="string">&#x27;NoSQL Overview&#x27;</span>, </span><br><span class="line">   description: <span class="string">&#x27;No sql database is very fast&#x27;</span>,</span><br><span class="line">   by_user: <span class="string">&#x27;runoob.com&#x27;</span>,</span><br><span class="line">   url: <span class="string">&#x27;http://www.runoob.com&#x27;</span>,</span><br><span class="line">   tags: [<span class="string">&#x27;mongodb&#x27;</span>, <span class="string">&#x27;database&#x27;</span>, <span class="string">&#x27;NoSQL&#x27;</span>],</span><br><span class="line">   likes: <span class="number">10</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">db.article.insert(&#123;</span><br><span class="line">   title: <span class="string">&#x27;Neo4j Overview&#x27;</span>, </span><br><span class="line">   description: <span class="string">&#x27;Neo4j is no sql database&#x27;</span>,</span><br><span class="line">   by_user: <span class="string">&#x27;Neo4j&#x27;</span>,</span><br><span class="line">   url: <span class="string">&#x27;http://www.neo4j.com&#x27;</span>,</span><br><span class="line">   tags: [<span class="string">&#x27;neo4j&#x27;</span>, <span class="string">&#x27;database&#x27;</span>, <span class="string">&#x27;NoSQL&#x27;</span>],</span><br><span class="line">   likes: <span class="number">750</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li><strong>统计sum</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># <span class="keyword">select</span> by_user, <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> article <span class="keyword">group</span> <span class="keyword">by</span> by_user</span><br><span class="line">db.article.aggregate([&#123;$<span class="keyword">group</span> : &#123;_id : &quot;$by_user&quot;, num_tutorial : &#123;$sum : <span class="number">1</span>&#125;&#125;&#125;])</span><br></pre></td></tr></table></figure><img src="\img\mongodb\mongodb17.png" style="zoom:38%;" /><p>在上面的例子中，我们通过字段 by_user 字段对数据进行分组，并计算 by_user 字段相同值的总和。</p><ul><li><strong>常见的聚合表达式</strong></li></ul><table><thead><tr><th>表达式</th><th>描述</th><th>实例</th></tr></thead><tbody><tr><td>$sum</td><td>计算总和</td><td>db.article.aggregate([{$group : {_id : “$by_user”, num_tutorial : {$sum : “$likes”}}}])</td></tr><tr><td>$avg</td><td>计算平均值</td><td>db.article.aggregate([{$group : {_id : “$by_user”, num_tutorial : {$avg : “$likes”}}}])</td></tr><tr><td>$min</td><td>获取集合中所有文档对应值的最小值</td><td>db.article.aggregate([{$group : {_id : “$by_user”, num_tutorial : {$min : “$likes”}}}])</td></tr><tr><td>$max</td><td>获取集合中所有文档对应值的最大值。</td><td>db.article.aggregate([{$group : {_id : “$by_user”, num_tutorial : {$max : “$likes”}}}])</td></tr><tr><td>$push</td><td>在结果文档中插入值到一个数组中。</td><td>db.article.aggregate([{$group : {_id : “$by_user”, url : {$push: “$url”}}}])</td></tr><tr><td>$addToSet</td><td>在结果文档中插入值到一个数组中，但不创建副本。</td><td>db.article.aggregate([{$group : {_id : “$by_user”, url : {$addToSet : “$url”}}}])</td></tr><tr><td>$first</td><td>根据资源文档的排序获取第一个文档数据。</td><td>db.article.aggregate([{$group : {_id : “$by_user”, first_url : {$first : “$url”}}}])</td></tr><tr><td>$last</td><td>根据资源文档的排序获取最后一个文档数据</td><td>db.article.aggregate([{$group : {_id : “$by_user”, last_url : {$last : “$url”}}}])</td></tr></tbody></table><img src="\img\mongodb\mongodb18.png" style="zoom:38%;" /><h4 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h4><p>索引通常能够极大的提高查询的效率，如果没有索引，MongoDB在读取数据时必须扫描集合中的每个文件并选取那些符合查询条件的记录。</p><p>这种扫描全集合的查询效率是非常低的，特别在处理大量的数据时，查询可以要花费几十秒甚至几分钟，这对网站的性能是非常致命的。</p><p>索引是特殊的数据结构，索引存储在一个易于遍历读取的数据集合中，索引是对数据库表中一列或多列的值进行排序的一种结构。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.User.createIndex(&#123;&quot;name&quot;:<span class="number">1</span>&#125;)</span><br></pre></td></tr></table></figure><img src="\img\mongodb\mongodb19.png" style="zoom:38%;" /><p>语法中 name 值为你要创建的索引字段，1 为指定按升序创建索引，如果你想按降序来创建索引指定为 -1 即可。</p>]]></content>
      
      
      <categories>
          
          <category> MongoDB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MongoDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis的核心配置文件</title>
      <link href="/2022/08/15/Mybatis%E7%9A%84%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
      <url>/2022/08/15/Mybatis%E7%9A%84%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<blockquote><p>核心配置文件中的标签必须按照固定的顺序进行配置，配置顺序如下： </p><p>properties?, settings?, typeAliases?, typeHandlers?, objectFactory?, objectWrapperFactory?, reflectorFactory?, plugins?, environments?, databaseIdProvider?, mappers?</p></blockquote><h3 id="environments标签"><a href="#environments标签" class="headerlink" title="environments标签"></a>environments标签</h3><p>Mybatis 的核心配置文件：mybatis-config.xml。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">MyBatis核心配置文件中，标签的顺序：</span></span><br><span class="line"><span class="comment">properties?,settings?,typeAliases?,typeHandlers?,</span></span><br><span class="line"><span class="comment">objectFactory?,objectWrapperFactory?,reflectorFactory?,</span></span><br><span class="line"><span class="comment">plugins?,environments?,databaseIdProvider?,mappers?</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        environments：配置连接数据库的环境</span></span><br><span class="line"><span class="comment">            default属性：设置默认使用的环境的id</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            environment：设置一个具体的连接数据库的环境</span></span><br><span class="line"><span class="comment">                属性：①id，设置环境的唯一标识，不能重复</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                transactionManager：设置事务管理器</span></span><br><span class="line"><span class="comment">                    属性：①type，设置事务管理的方式。type=&quot;JDBC|MANAGED&quot;。</span></span><br><span class="line"><span class="comment">                           JDBC：表示使用JDBC原生的事务管理方式；</span></span><br><span class="line"><span class="comment">                           MANAGED：被管理，例如交给Spring管理。</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                dataSource：设置数据源</span></span><br><span class="line"><span class="comment">                    属性：①type，设置数据源的类型。type=&quot;POOLED|UNPOOLED|JNDI&quot;。</span></span><br><span class="line"><span class="comment">                            POOLED：表示使用数据库连接池；</span></span><br><span class="line"><span class="comment">                            UNPOOLED：表示不使用数据库连接池；</span></span><br><span class="line"><span class="comment">                            JNDI：表示使用上下文中的数据源。</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/mybatis?serverTimezone=UTC&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123456&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;test&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/mybatis?serverTimezone=UTC&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123456&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--引入mybatis映射文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;mapper/UserMapper.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="properties标签"><a href="#properties标签" class="headerlink" title="properties标签"></a>properties标签</h3><blockquote><p>由上面可知，连接数据库的参数写在核心配置类内部，不便宜修改，所以将其提取处理，放在单独文件（即 <code>jdbc.properties</code>）内，以便管理。</p></blockquote><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">jdbc.driver</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="attr">jdbc.url</span>=<span class="string">jdbc:mysql://localhost:3306/mybatis?serverTimezone=UTC</span></span><br><span class="line"><span class="attr">jdbc.username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">jdbc.password</span>=<span class="string">123456</span></span><br></pre></td></tr></table></figure><p>在核心配置文件中，添加 <code>properties</code> 标签，通过 <code>resource</code> 属性引入 <code>jdbc.properties</code> 文件；在通过 <code>property</code> 标签的 <code>value</code> 属性使用 ${key} 的方式，获取 jdbc.properties 文件中的 value 值。</p><p>修改后的 mybatis-congif.xml 文件：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        MyBatis核心配置文件中，标签的顺序：</span></span><br><span class="line"><span class="comment">            properties?,settings?,typeAliases?,typeHandlers?,objectFactory?,</span></span><br><span class="line"><span class="comment">            objectWrapperFactory?,reflectorFactory?,plugins?,environments?,</span></span><br><span class="line"><span class="comment">            databaseIdProvider?,mappers?</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--引入properties文件，此后就可以在当前文件中使用$&#123;key&#125;的方式访问value值--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">&quot;jdbc.properties&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        environments：配置连接数据库的环境</span></span><br><span class="line"><span class="comment">            属性：</span></span><br><span class="line"><span class="comment">                default：设置默认使用的环境的id</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            environment：设置一个具体的连接数据库的环境</span></span><br><span class="line"><span class="comment">                属性：</span></span><br><span class="line"><span class="comment">                    id：设置环境的唯一标识，不能重复</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                transactionManager：设置事务管理器</span></span><br><span class="line"><span class="comment">                    属性：</span></span><br><span class="line"><span class="comment">                        type：设置事务管理的方式，type=&quot;JDBC|MANAGED&quot;。</span></span><br><span class="line"><span class="comment">                           JDBC：表示使用JDBC原生的事务管理方式；</span></span><br><span class="line"><span class="comment">                           MANAGED：被管理，例如交给Spring管理。</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                dataSource：设置数据源</span></span><br><span class="line"><span class="comment">                    属性：</span></span><br><span class="line"><span class="comment">                        type：设置数据源的类型，type=&quot;POOLED|UNPOOLED|JNDI&quot;。</span></span><br><span class="line"><span class="comment">                            POOLED：表示使用数据库连接池；</span></span><br><span class="line"><span class="comment">                            UNPOOLED：表示不使用数据库连接池；</span></span><br><span class="line"><span class="comment">                            JNDI：表示使用上下文中的数据源。</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--设置连接数据库的驱动--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driver&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--设置连接数据库的连接地址--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--设置连接数据库的用户名--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.username&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--设置连接数据库的密码--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;test&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/mybatis?serverTimezone=UTC&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123456&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--引入mybatis映射文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;mapper/UserMapper.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>重新启动<strong>查询所有用户信息</strong>的方法</p></blockquote><img src="\img\Mybatis\mybatis16.png" style="zoom:25%;" /><h3 id="typeAliases标签"><a href="#typeAliases标签" class="headerlink" title="typeAliases标签"></a>typeAliases标签</h3><p><code>typeAliases</code> 设置别名，其配置顺序在 <code>properties</code> 标签和 <code>settings</code> 标签之后。设置别名的方式共有三种，三种方式讲解见下方，第三种方式常用。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">       typeAliases：设置类型别名，即为某一具体的类型设置一个别名</span></span><br><span class="line"><span class="comment">           在Mybatis的范围中，就可以使用别名表示一个具体的类型</span></span><br><span class="line"><span class="comment">   --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- 设置别名的方式一</span></span><br><span class="line"><span class="comment">               type和alias属性都设置有值时。</span></span><br><span class="line"><span class="comment">               type：表示设置需要起别名的类型，alias：表示设置某个类型的别名</span></span><br><span class="line"><span class="comment">       --&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--&lt;typeAlias type=&quot;com.mybatis.pojo.User&quot; alias=&quot;u&quot;/&gt;--&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- 设置别名的方式二</span></span><br><span class="line"><span class="comment">               只设置type而不设置alias时，当前的类型默认别名为类名且不区分大小写</span></span><br><span class="line"><span class="comment">       --&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--&lt;typeAlias type=&quot;com.mybatis.pojo.User&quot;/&gt;--&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">           设置别名的方式三</span></span><br><span class="line"><span class="comment">               通过包的方式设置别名，指定包下的所有的类将全部拥有默认别名</span></span><br><span class="line"><span class="comment">                   默认别名，即类名且不区分大小写</span></span><br><span class="line"><span class="comment">       --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.mybatis.pojo&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="mappers标签"><a href="#mappers标签" class="headerlink" title="mappers标签"></a>mappers标签</h3><p><code>mappers</code> 引入mapper映射文件，其配置顺序在最末尾。引入映射文件的方式有两种，两种方式如下文，第二种最常用。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--引入mybatis映射文件--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">           方式一</span></span><br><span class="line"><span class="comment">               通过resource属性设置mapper映射文件的路径</span></span><br><span class="line"><span class="comment">       --&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--&lt;mapper resource=&quot;mapper/UserMapper.xml&quot;/&gt;--&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">           方式二（常用）</span></span><br><span class="line"><span class="comment">               以包的方式引入映射文件，但必须满足两个条件：</span></span><br><span class="line"><span class="comment">                   1、mapper接口和映射文件所在的包必须一致；</span></span><br><span class="line"><span class="comment">                   2、mapper接口的名字和映射文件的名字必须一致。</span></span><br><span class="line"><span class="comment">       --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.mybatis.&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：在使用 IDEA 工具创建包时，在工程项目中的其他目录下可以使用点（.）的方式创建多个包，但是在 <code>resource</code> 包下不能使用点的方式创建，要使用斜杠（&#x2F;）的方式进行创建多个包。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Mybatis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mybatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis入门案例</title>
      <link href="/2022/08/11/Mybatis%E5%85%A5%E9%97%A8%E6%A1%88%E4%BE%8B/"/>
      <url>/2022/08/11/Mybatis%E5%85%A5%E9%97%A8%E6%A1%88%E4%BE%8B/</url>
      
        <content type="html"><![CDATA[<h3 id="创建mybatis数据库"><a href="#创建mybatis数据库" class="headerlink" title="创建mybatis数据库"></a>创建mybatis数据库</h3><p>使用 Navicat 工具创建新的数据库。</p><img src="\img\Mybatis\mybatis01.png" style="zoom:50%;" /><p>新数据库的数据库名为<code>mabatis</code>，字符集为<code>utf8mb4</code>，排序规矩为<code>utf8mb4_bin</code>。</p><img src="\img\Mybatis\mybatis02.png" style="zoom: 50%;" /><h3 id="创建user表"><a href="#创建user表" class="headerlink" title="创建user表"></a>创建user表</h3><p>使用下面代码通过查询方式创建数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `t_user`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `t_user`  (</span><br><span class="line">  `id` <span class="type">int</span>(<span class="number">0</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `username` <span class="type">varchar</span>(<span class="number">20</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_bin <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `password` <span class="type">varchar</span>(<span class="number">20</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_bin <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `age` <span class="type">int</span>(<span class="number">0</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `gender` <span class="type">char</span>(<span class="number">1</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_bin <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `email` <span class="type">varchar</span>(<span class="number">50</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_bin <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB AUTO_INCREMENT <span class="operator">=</span> <span class="number">1</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8mb4 <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8mb4_bin ROW_FORMAT <span class="operator">=</span> <span class="keyword">Dynamic</span>;</span><br></pre></td></tr></table></figure><blockquote><p>AUTO_INCREMENT：自增约束</p><p>CHARACTER SET：字符集编码</p><p>COLLATE：</p></blockquote><img src="\img\Mybatis\mybatis03.png" style="zoom: 33%;" /><h3 id="创建maven项目"><a href="#创建maven项目" class="headerlink" title="创建maven项目"></a>创建maven项目</h3><p>新建工程。</p><img src="\img\Mybatis\mybatis04.png" style="zoom: 33%;" /><p>选择maven工程，本地使用的maven版本为<code>3.6.3</code>。</p><img src="\img\Mybatis\mybatis05.png" style="zoom:33%;" /><p>工程的项目名为Mybatis。</p><img src="\img\Mybatis\mybatis06.png" style="zoom:33%;" /><h3 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h3><p>在Mybatis工程的pom.xml的文件添加相关依赖。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--配置项目打包方式--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- Mybatis核心 --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- junit测试 --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- MySQL驱动 --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.26<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.6.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">source</span>&gt;</span>8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">target</span>&gt;</span>8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="创建实体类"><a href="#创建实体类" class="headerlink" title="创建实体类"></a>创建实体类</h3><p>在 java 包下新建 <code>com.mybatis.pojo</code> 包，在 pojo 包下创建 User 类。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String gender;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//这里省略getter/setter方法和有参/无参方法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建mapper接口"><a href="#创建mapper接口" class="headerlink" title="创建mapper接口"></a>创建mapper接口</h3><p>创建存放 mapper 接口的包：<code>com.mybatis.mapper</code>。在 mapper 包下创建 UserMapper 类。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> &#123;</span><br><span class="line">  <span class="comment">//mapper方法  </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建mapper映射文件"><a href="#创建mapper映射文件" class="headerlink" title="创建mapper映射文件"></a>创建mapper映射文件</h3><p>在 resources 包下，创建存放 mapper 映射文件的包<code>mapper</code>，在 mapper 下创建 UserMapper.xml 映射文件。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- mapper接口和映射文件要保证两个一致：</span></span><br><span class="line"><span class="comment">        1、mapper接口的全类名和映射文件的namespace一致</span></span><br><span class="line"><span class="comment">        2、mapper接口中的方法的方法名要和映射文件中的sql的id保持一致</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.mybatis.mapper.UserMapper&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 实现mapper接口的sql语句 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="创建mybatis核心配置文件"><a href="#创建mybatis核心配置文件" class="headerlink" title="创建mybatis核心配置文件"></a>创建mybatis核心配置文件</h3><p>在 resources 包下，创建mybatis核心配置文件：mybatis-config.xml。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置连接数据库的环境--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--transactionManager：事务管理器--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--dataSource：数据源--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/mybatis?serverTimezone=UTC&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123456&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--引入mybatis映射文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;mapper/UserMapper&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="新增用户信息"><a href="#新增用户信息" class="headerlink" title="新增用户信息"></a>新增用户信息</h3><blockquote><p>在 UserMapper 类添加新增用户信息代码：</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 新增用户信息 */</span></span><br><span class="line">   <span class="type">int</span> <span class="title function_">insertUser</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><blockquote><p>在 UserMapper.xml 映射文件添加新增用户信息代码：</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- int insertUser(); --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insertUser&quot;</span>&gt;</span></span><br><span class="line">       insert into t_user value(null,&#x27;王二&#x27;,&#x27;123456&#x27;,20,&#x27;男&#x27;,&#x27;123@qq.com&#x27;)</span><br><span class="line">   <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>编写测试类</p></blockquote><p>在 test&#x2F;java 包下创建存放测试类的包：com.mybatis.test。创建 MybatisTest 测试类。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MybatisTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 新增用户信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">insertUser</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">//1.获取Mybatis核心配置文件的输入流</span></span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> Resources.getResourceAsStream(<span class="string">&quot;mybatis-config.xml&quot;</span>);</span><br><span class="line">        <span class="comment">//2.获取SqlSessionFactoryBuilder对象</span></span><br><span class="line">        <span class="type">SqlSessionFactoryBuilder</span> <span class="variable">sqlSessionFactoryBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>();</span><br><span class="line">        <span class="comment">//3.获取SqlSessionFactory对象</span></span><br><span class="line">        <span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> sqlSessionFactoryBuilder.build(inputStream);</span><br><span class="line">        <span class="comment">//4.①获取sql的会话对象SqlSession（该写法不会自动提交事务），是MyBatis提供的操作数据库的对象</span></span><br><span class="line">        <span class="comment">//SqlSession sqlSession = sqlSessionFactory.openSession();</span></span><br><span class="line">        <span class="comment">//4.②获取sql的会话对象SqlSession（该写法会自动提交事务），是MyBatis提供的操作数据库的对象</span></span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> sqlSessionFactory.openSession(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">/*5.面向mapper接口编程（常用写法） */</span></span><br><span class="line">        <span class="comment">/*实现思想：通过mapper接口的全类名，找到mapper接口的映射文件；</span></span><br><span class="line"><span class="comment">            然后通过mapper接口的方法，找到mapper映射文件中的sql语句并执行*/</span></span><br><span class="line">        <span class="comment">//①.获取UserMapper的代理实现类对象</span></span><br><span class="line">        <span class="type">UserMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class="line">        <span class="comment">//②.调用mapper接口中的方法，实现添加用户信息的功能</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> mapper.insertUser();</span><br><span class="line">        <span class="comment">/* 没有mapper接口的情况下 */</span></span><br><span class="line">        <span class="comment">//通过sql语句的唯一标识，找到sql语句并执行。唯一标识是namespace.sqlId（最原始的写法）</span></span><br><span class="line">        <span class="comment">//int result = sqlSession.insert(&quot;com.mybatis.mapper.UserMapper.insertUser&quot;);</span></span><br><span class="line">        System.out.println(<span class="string">&quot;结果：&quot;</span>+result);</span><br><span class="line">        <span class="comment">//6.提交事务（第四步没有提交事务的话，这里要将事务提交）</span></span><br><span class="line">        sqlSession.commit();</span><br><span class="line">        <span class="comment">//7.关闭事务</span></span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>测试结果</p></blockquote><img src="\img\Mybatis\mybatis07.png" style="zoom: 25%;" /><blockquote><p>数据库 user 表</p></blockquote><img src="\img\Mybatis\mybatis08.png" style="zoom:33%;" /><h3 id="封装SqlSesson类"><a href="#封装SqlSesson类" class="headerlink" title="封装SqlSesson类"></a>封装SqlSesson类</h3><p>操作 t_user 表时（即CRUD），频繁最开始都是要获取sqlSession，且获取该方法的步骤都是一样的，所以将其封装成一个类，以便使用和管理。</p><p>在java包下创建存放获取sqlSession类（即SqlSessionUtil）的工具类的地址：<code>com.mybatis.utils</code>。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SqlSessionUtil</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 因获取sqlSession的方法步骤固定，且频繁使用，所以将其封装起来，以便使用</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> SqlSession <span class="title function_">getSqlSession</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//1.获取Mybatis核心配置文件的输入流</span></span><br><span class="line">            <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> Resources.getResourceAsStream(<span class="string">&quot;mybatis-config.xml&quot;</span>);</span><br><span class="line">            <span class="comment">//2.获取SqlSessionFactoryBuilder对象</span></span><br><span class="line">            <span class="type">SqlSessionFactoryBuilder</span> <span class="variable">sqlSessionFactoryBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>();</span><br><span class="line">            <span class="comment">//3.获取SqlSessionFactory对象</span></span><br><span class="line">            <span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> sqlSessionFactoryBuilder.build(inputStream);</span><br><span class="line">            <span class="comment">//4.获取sql的会话对象SqlSession（自动提交事务：在openSession方法中参数true），是MyBatis提供的操作数据库的对象</span></span><br><span class="line">            sqlSession = sqlSessionFactory.openSession(<span class="literal">true</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sqlSession;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="查询所有用户信息"><a href="#查询所有用户信息" class="headerlink" title="查询所有用户信息"></a>查询所有用户信息</h3><blockquote><p>在 UserMapper 接口中添加查询所有用户信息的方法。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 查询所有用户信息 */</span></span><br><span class="line">   List&lt;User&gt; <span class="title function_">getAllUser</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><blockquote><p>在 UserMapper.xml 映射文件中添加实现查询所有用户信息的方法。</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- List&lt;User&gt; getAllUser(); --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getAllUser&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.mybatis.pojo.User&quot;</span>&gt;</span></span><br><span class="line">       select * from t_user</span><br><span class="line">   <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>在 MybatisTest 测试类中编写查询所有用户信息的方法。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getAllUser</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">//1.通过SqlSessionUtil工具类获取sqlSession</span></span><br><span class="line">       <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">       <span class="comment">//2.获取UserMapper的代理实现类对象</span></span><br><span class="line">       <span class="type">UserMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class="line">       <span class="comment">//3.调用mapper接口中的方法，实现查询所有用户信息的功能</span></span><br><span class="line">       List&lt;User&gt; allUser = mapper.getAllUser();</span><br><span class="line">       <span class="comment">//4.将查询到的用户信息输出在控制台中</span></span><br><span class="line">       allUser.forEach(System.out::println);</span><br><span class="line">       <span class="comment">//5.关闭事务</span></span><br><span class="line">       sqlSession.close();</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><blockquote><p>查询结果</p></blockquote><img src="\img\Mybatis\mybatis09.png" style="zoom: 25%;" /><h3 id="根据id查询用户信息"><a href="#根据id查询用户信息" class="headerlink" title="根据id查询用户信息"></a>根据id查询用户信息</h3><blockquote><p>在 UserMapper 接口中添加<strong>根据id查询用户信息</strong>的方法。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 根据id查询用户信息 */</span></span><br><span class="line">   User <span class="title function_">getUserById</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><blockquote><p>在 UserMapper.xml 映射文件中添加实现<strong>根据id查询用户信息</strong>的方法。</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- List&lt;User&gt; getAllUser(); --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getAllUser&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.mybatis.pojo.User&quot;</span>&gt;</span></span><br><span class="line">       select * from t_user where id=3</span><br><span class="line">   <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>在 MybatisTest 测试类中编写<strong>根据id查询用户信息</strong>的方法。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getUserById</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">//1.通过SqlSessionUtil工具类获取sqlSession</span></span><br><span class="line">       <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">       <span class="comment">//2.获取UserMapper的代理实现类对象</span></span><br><span class="line">       <span class="type">UserMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class="line">       <span class="comment">//3.调用mapper接口中的方法，实现根据id查询用户信息的功能</span></span><br><span class="line">       <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> mapper.getUserById();</span><br><span class="line">       <span class="comment">//4.将查询到的用户信息输出在控制台中</span></span><br><span class="line">       System.out.println(user);</span><br><span class="line">       <span class="comment">//5.关闭事务</span></span><br><span class="line">       sqlSession.close();</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><blockquote><p>查询结果</p></blockquote><img src="\img\Mybatis\mybatis10.png" style="zoom:25%;" /><h3 id="修改用户信息"><a href="#修改用户信息" class="headerlink" title="修改用户信息"></a>修改用户信息</h3><blockquote><p>在 UserMapper 接口中添加<strong>修改用户信息</strong>的方法。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 根据id查询用户信息 */</span></span><br><span class="line">   User <span class="title function_">getUserById</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><blockquote><p>在 UserMapper.xml 映射文件中添加实现<strong>修改用户信息</strong>的方法。</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- void updateUser(); --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateUser&quot;</span>&gt;</span></span><br><span class="line">       update t_user set username=&#x27;李四&#x27;,password=&#x27;4444&#x27; where id=4</span><br><span class="line">   <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>在 MybatisTest 测试类中编写<strong>修改用户信息</strong>的方法。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateUser</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">//1.通过SqlSessionUtil工具类获取sqlSession</span></span><br><span class="line">       <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">       <span class="comment">//2.获取UserMapper的代理实现类对象</span></span><br><span class="line">       <span class="type">UserMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class="line">       <span class="comment">//3.调用mapper接口中的方法，实现修改用户信息的功能</span></span><br><span class="line">       mapper.updateUser();</span><br><span class="line">       <span class="comment">//4.关闭事务</span></span><br><span class="line">       sqlSession.close();</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><blockquote><p>查询结果</p></blockquote><img src="\img\Mybatis\mybatis11.png" style="zoom: 33%;" /><h3 id="删除用户信息"><a href="#删除用户信息" class="headerlink" title="删除用户信息"></a>删除用户信息</h3><blockquote><p>在 UserMapper 接口中添加<strong>删除用户信息</strong>的方法。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 删除用户信息 */</span></span><br><span class="line">   <span class="keyword">void</span> <span class="title function_">deleteUser</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><blockquote><p>在 UserMapper.xml 映射文件中添加实现<strong>删除用户信息</strong>的方法。</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- void deleteUser(); --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteUser&quot;</span>&gt;</span></span><br><span class="line">       delete from t_user where id=4</span><br><span class="line">   <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>在 MybatisTest 测试类中编写<strong>删除用户信息</strong>的方法。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteUser</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">//1.通过SqlSessionUtil工具类获取sqlSession</span></span><br><span class="line">       <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">       <span class="comment">//2.获取UserMapper的代理实现类对象</span></span><br><span class="line">       <span class="type">UserMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class="line">       <span class="comment">//3.调用mapper接口中的方法，实现修改用户信息的功能</span></span><br><span class="line">       mapper.deleteUser();</span><br><span class="line">       <span class="comment">//4.关闭事务</span></span><br><span class="line">       sqlSession.close();</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><blockquote><p>查询结果</p></blockquote><img src="\img\Mybatis\mybatis12.png" style="zoom:33%;" />]]></content>
      
      
      <categories>
          
          <category> Mybatis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mybatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker安装（Linux）</title>
      <link href="/2022/08/01/Docker%E5%AE%89%E8%A3%85%EF%BC%88Linux%EF%BC%89/"/>
      <url>/2022/08/01/Docker%E5%AE%89%E8%A3%85%EF%BC%88Linux%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p><strong>第 1 步</strong>：将 yum 包更新到最新，更新过程中出现输入的界面都输入 y 。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">命令：yum update</span><br><span class="line">出现 Complete! 表示更新完成</span><br></pre></td></tr></table></figure><img src="\img\docker\docker01.png" style="zoom: 33%;" /><p><strong>第 2 步：</strong>安装需要的软件包（ yum-utils、device-mapper-persistent-data、lvm2），yum-util 提供 yum-config-manager 功能，另外两个是 devicemapper 驱动依赖。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令：yum install -y yum-utils device-mapper-persistent-data lvm2</span><br></pre></td></tr></table></figure><img src="\img\docker\docker02.png" style="zoom:33%;" /><p><strong>第 3 步：</strong>设置 yum 源。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令：yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><img src="\img\docker\docker03.png" style="zoom:33%;" /><p><strong>第 4 步：</strong>安装 docker，出现输入的界面都输入 y。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">命令：yum install -y docker-ce</span><br><span class="line"></span><br><span class="line">出现 Complete! 表示安装成功</span><br></pre></td></tr></table></figure><img src="\img\docker\docker04.png" style="zoom:33%;" /><p><strong>第 5 步：</strong>查看 docker 版本，验证是否安装成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令：docker -v</span><br></pre></td></tr></table></figure><img src="\img\docker\docker05.png" style="zoom:33%;" />]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VMWare创建虚拟机</title>
      <link href="/2022/08/01/VMWare%E5%88%9B%E5%BB%BA%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
      <url>/2022/08/01/VMWare%E5%88%9B%E5%BB%BA%E8%99%9A%E6%8B%9F%E6%9C%BA/</url>
      
        <content type="html"><![CDATA[<h3 id="虚拟机创建"><a href="#虚拟机创建" class="headerlink" title="虚拟机创建"></a>虚拟机创建</h3><p><strong>第 1 步</strong>：点击主页下的创建新的虚拟机。</p><img src="/img/vmware/01.png" style="zoom:33%;" /><p><strong>第 2 步</strong>：自定义配置</p><img src="/img/vmware/02.png" style="zoom: 50%;" /><p><strong>第 3 步</strong>：默认选择即可。</p><img src="\img\vmware\03.png" style="zoom: 50%;" /><p><strong>第 4 步</strong>：选择安装来源，我是安装完之后，在导入下载好的操作系统，这里选择<strong>稍后安装操作系统</strong>。</p><img src="\img\vmware\04.png" style="zoom:50%;" /><p><strong>第 5 步</strong>：选择 <strong>Linux</strong> 操作系统，版本选 CentOS 64 位，后续导入的操作系统为CentOS 7。</p><img src="\img\vmware\05.png" style="zoom:50%;" /><p><strong>第 6 步</strong>：虚拟机的名称和安装位置自定义。</p><img src="\img\vmware\06.png" style="zoom:50%;" /><p><strong>第 7 步</strong>：配置处理器：处理器数量和每个处理器的核心数量都选为 2 个，总核数为4。</p><img src="\img\vmware\07.png" style="zoom:50%;" /><p><strong>第 8 步</strong>：虚拟机内存配置：选择 4 GB。</p><img src="\img\vmware\08.png" style="zoom:50%;" /><p><strong>第 9 步</strong>：网络类型配置：网络连接方式选择使用网络地址转换</p><img src="\img\vmware\09.png" style="zoom:50%;" /><p><strong>第 10 步</strong>：I&#x2F;O控制器类型配置：选择 LSI Login。</p><img src="\img\vmware\10.png" style="zoom:50%;" /><p><strong>第 11 步</strong>：磁盘类型配置：使用推荐（默认）即可。</p><img src="\img\vmware\11.png" style="zoom:50%;" /><p><strong>第 12 步</strong>：磁盘配置：</p><ul><li>创建新虚拟磁盘</li></ul><img src="\img\vmware\12.png" style="zoom:50%;" /><ul><li>磁盘容量：20GB，将虚拟磁盘拆分成多个文件</li></ul><img src="\img\vmware\13.png" style="zoom:50%;" /><ul><li>磁盘文件：默认即可</li></ul><img src="\img\vmware\14.png" style="zoom:50%;" /><p><strong>第 13 步</strong>： 将不需要的硬件将其移除。</p><img src="\img\vmware\15.png" style="zoom: 33%;" /><p><strong>第 14 步</strong>：至此，虚拟机创建成功，下面是配置虚拟机的操作系统。</p><img src="\img\vmware\16.png" style="zoom:33%;" /><h3 id="虚拟机配置"><a href="#虚拟机配置" class="headerlink" title="虚拟机配置"></a>虚拟机配置</h3><p><strong>第 1步</strong>：导入映射 CentOS 7 系统镜像文件。</p><img src="\img\vmware\17.png" style="zoom: 25%;" /><p><strong>第 2 步</strong>：启动虚拟机，安装 CentOS 7 系统。白色字体表示选中状态。选中 Install CentOS 7，点击 Enter 安装 CentOS 7 操作系统。</p><img src="\img\vmware\18.png" style="zoom: 50%;" /><p><strong>第 3 步</strong>：正在安装中。</p><img src="\img\vmware\19.png" style="zoom: 50%;" /><p><strong>第 4 步</strong>：语言配置，这里选择 English</p><img src="\img\vmware\20.png" style="zoom:50%;" /><p><strong>第 5 步</strong>：日期和时间的配置，时区选择亚洲·上海。</p><img src="\img\vmware\21.png" style="zoom:50%;" /><p><strong>第 6 步</strong>：多语言选择，另一个语言这里选择简体中文。</p><img src="\img\vmware\22.png" style="zoom:50%;" /><p><strong>第 7 步</strong>：SOFTWARE SELECTION（软件选择），选择 <code>Service with GUI </code>。</p><img src="\img\vmware\23.png" style="zoom: 50%;" /><p><strong>第 8 步</strong>：INSTALLATION DESTINATION（磁盘安装配置）</p><img src="\img\vmware\24.png" style="zoom:50%;" /><ul><li>分盘，将 20GB 内存的容量分配到三个目录中，即 &#x2F;boot、&#x2F;、swap。<ul><li>分配 &#x2F;boot</li></ul></li></ul><img src="\img\vmware\25.png" style="zoom:50%;" /><ul><li>按照创建 &#x2F;boot 的步骤，创建其他两个目录（即 &#x2F; 和 swap）大小。</li></ul><img src="\img\vmware\26.png" style="zoom:50%;" /><ul><li>配置完成之后，点击 Done ，弹出框选择 <strong>Accept Changes</strong></li></ul><img src="\img\vmware\27.png" style="zoom:50%;" /><p><strong>第 9 步</strong>：NETWORK &amp; HOST NAME（网络与主机名）配置，将 Ethernet 置为 ON 状态。</p><img src="\img\vmware\28.png" style="zoom:50%;" /><p><strong>第 10 步</strong>：点击 Begin Installated ，继续安装操作系统</p><img src="\img\vmware\29.png" style="zoom:50%;" /><p><strong>第 11 步</strong>：登录用户配置。</p><img src="\img\vmware\30.png" style="zoom:50%;" /><ul><li><p>root账号配置</p><p>用户名默认为 root，只需要配置密码即可，密码一般为8个字符以上，且包含大小字母和数字，密码设置简单也没事，点击两次 Done 即可。（这里密码设为root）</p></li></ul><img src="\img\vmware\31.png" style="zoom:50%;" /><ul><li><p>普通用户配置</p><p>普通用户需要设置用户名和密码，密码设置规则同上。用户名随意即可。</p></li></ul><img src="\img\vmware\32.png" style="zoom:50%;" /><p><strong>第 12 步</strong>：安装完成</p><img src="\img\vmware\33.png" style="zoom:50%;" /><p><strong>第 13 步</strong>：初步进入系统，同意即可。输入1，输入 c ，输入 2 ，输入 1应该可以进入系统中。</p><img src="\img\vmware\34.png" style="zoom: 33%;" /><p><strong>第 14 步</strong>：进入系统中，默认登录账号为普通用户。</p><p>需要登录root账号，点击 Not listed？输入用户名和密码即可</p><img src="\img\vmware\35.png" style="zoom:33%;" /><p><strong>第 15 步</strong>：首次进入 Linux 系统，会弹出很多弹出框，选择下一步默认即可，不需要特殊配置。</p><img src="\img\vmware\36.png" style="zoom: 33%;" /><p><strong>第 16 步</strong>：进入 Lunix 系统界面，表示安装成功。</p><img src="\img\vmware\37.png" style="zoom: 33%;" /><p><strong>第 17 步</strong>：右击界面，选择 Open Terminal，弹出命令行窗口，输入 <code>ip addr</code>  指令，查询虚拟机的IP地址。</p><img src="\img\vmware\38.png" style="zoom: 50%;" />]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VMWare </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>反向生成器的配置</title>
      <link href="/2022/07/17/%E5%8F%8D%E5%90%91%E7%94%9F%E6%88%90%E5%99%A8%E7%9A%84%E9%85%8D%E7%BD%AE/"/>
      <url>/2022/07/17/%E5%8F%8D%E5%90%91%E7%94%9F%E6%88%90%E5%99%A8%E7%9A%84%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h3 id="反向生成器的配置"><a href="#反向生成器的配置" class="headerlink" title="反向生成器的配置"></a>反向生成器的配置</h3><blockquote><p>使用 MyBatis 的反向生成器，自动生成用户的实体类 、接口和 <code>xml</code> 文件。</p></blockquote><p>在 pom.xml 文件中添加反向生成器插件的依赖。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.generator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-generator-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                 <span class="comment">&lt;!--配置文件的路径--&gt;</span></span><br><span class="line">                 <span class="tag">&lt;<span class="name">configurationFile</span>&gt;</span>src/main/resources/generatorConfig.xml<span class="tag">&lt;/<span class="name">configurationFile</span>&gt;</span></span><br><span class="line">                 <span class="tag">&lt;<span class="name">overwrite</span>&gt;</span>true<span class="tag">&lt;/<span class="name">overwrite</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">                 <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.generator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-generator-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                     <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                 <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure><p>位置如图所示：</p><img src="/img/hospital/17.png" style="zoom: 33%;" /><p>在 resources 目录下创建 generatorConfig.xml 文件。</p><img src="/img/hospital/18.png" style="zoom: 50%;" /><p>文件代码：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">generatorConfiguration</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 配置生成器:所有标有序号的内容都需要修改为自己的内容或者路径 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">generatorConfiguration</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--1、数据库驱动jar:添加自己的jar路径 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">classPathEntry</span></span></span><br><span class="line"><span class="tag">            <span class="attr">location</span>=<span class="string">&quot;D:\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context</span> <span class="attr">id</span>=<span class="string">&quot;MyBatis&quot;</span> <span class="attr">targetRuntime</span>=<span class="string">&quot;MyBatis3&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--去除注释 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">commentGenerator</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suppressAllComments&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">commentGenerator</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--2、数据库连接 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">jdbcConnection</span> <span class="attr">driverClass</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">connectionURL</span>=<span class="string">&quot;jdbc:mysql://127.0.0.1:3306/hospital?useUnicode=true<span class="symbol">&amp;amp;</span>characterEncoding=utf-8<span class="symbol">&amp;amp;</span>useSSL=false<span class="symbol">&amp;amp;</span>serverTimezone=GMT&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">userId</span>=<span class="string">&quot;root&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">password</span>=<span class="string">&quot;123456&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">jdbcConnection</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer;</span></span><br><span class="line"><span class="comment">            为 true时把JDBC DECIMAL和NUMERIC类型解析为java.math.BigDecimal --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaTypeResolver</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;forceBigDecimals&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaTypeResolver</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--3、生成实体类 指定包名 以及生成的地址 （可以自定义地址，但是路径不存在不会自动创建</span></span><br><span class="line"><span class="comment">        使用Maven生成在target目录下，会自动创建） --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaModelGenerator</span> <span class="attr">targetPackage</span>=<span class="string">&quot;com.hospital.pojo&quot;</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">targetProject</span>=<span class="string">&quot;src\main\java&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;trimStrings&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaModelGenerator</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--4、生成SQLmapper.xml文件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">sqlMapGenerator</span> <span class="attr">targetPackage</span>=<span class="string">&quot;com.hospital.mapper&quot;</span></span></span><br><span class="line"><span class="tag">                         <span class="attr">targetProject</span>=<span class="string">&quot;src\main\resources&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">sqlMapGenerator</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--5、生成Dao（Mapper）文件,生成接口 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaClientGenerator</span> <span class="attr">type</span>=<span class="string">&quot;XMLMAPPER&quot;</span></span></span><br><span class="line"><span class="tag">                             <span class="attr">targetPackage</span>=<span class="string">&quot;com.hospital.mapper&quot;</span></span></span><br><span class="line"><span class="tag">                             <span class="attr">targetProject</span>=<span class="string">&quot;src\main\java&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaClientGenerator</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--6、要生成哪些表(更改tableName和domainObjectName就可以) --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- tableName:要生成的表名</span></span><br><span class="line"><span class="comment">        enableCountByExample:Count语句中加入where条件查询，默认为true开启</span></span><br><span class="line"><span class="comment">        enableUpdateByExample:Update语句中加入where条件查询，默认为true开启</span></span><br><span class="line"><span class="comment">        enableDeleteByExample:Delete语句中加入where条件查询，默认为true开启</span></span><br><span class="line"><span class="comment">        enableSelectByExample:Select多条语句中加入where条件查询，默认为true开启</span></span><br><span class="line"><span class="comment">        selectByExampleQueryId:Select单个对象语句中加入where条件查询，默认为true开启</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">&quot;hospital_user&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">&quot;role&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">&quot;menu&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">&quot;role_menu&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">&quot;doctor&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">&quot;charge_project&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">&quot;drug&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">&quot;register&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">&quot;be_hospital&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">&quot;drug_people&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">&quot;price_people&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">generatorConfiguration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>配置完成之后，找到 Maven 下的 mybatis-generator 依赖下的 mybatis-generator:generate，点击运气即可。</p><img src="/img/hospital/19.png" style="zoom: 33%;" /><p>完成操作之后，项目中的实体类文件、mapper文件、xml文件就自动生成，如图所示。</p><img src="/img/hospital/21.png" style="zoom: 33%;" />]]></content>
      
      
      <categories>
          
          <category> 医院项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 医院项目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>医院项目数据库设计</title>
      <link href="/2022/07/17/%E5%8C%BB%E9%99%A2%E9%A1%B9%E7%9B%AE%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1/"/>
      <url>/2022/07/17/%E5%8C%BB%E9%99%A2%E9%A1%B9%E7%9B%AE%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<h2 id="医院项目数据库设计"><a href="#医院项目数据库设计" class="headerlink" title="医院项目数据库设计"></a>医院项目数据库设计</h2><blockquote><p>默认数据库已经创建</p></blockquote><h3 id="用户表"><a href="#用户表" class="headerlink" title="用户表"></a>用户表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `hospital_user`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `hospital_user` (</span><br><span class="line">`id`            <span class="type">INT</span> UNSIGNED  <span class="keyword">NOT</span> <span class="keyword">NULL</span>  <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT COMMENT <span class="string">&#x27;用户编号&#x27;</span>,</span><br><span class="line">    `login_name`<span class="type">VARCHAR</span>(<span class="number">80</span>)      <span class="keyword">NOT</span> <span class="keyword">NULL</span>       COMMENT <span class="string">&#x27;登录名&#x27;</span>,</span><br><span class="line">    `password`      <span class="type">VARCHAR</span>(<span class="number">80</span>)      <span class="keyword">NOT</span> <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">    `true_name` <span class="type">VARCHAR</span>(<span class="number">80</span>)      <span class="keyword">NOT</span> <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;真实姓名&#x27;</span>,</span><br><span class="line">    `email`         <span class="type">VARCHAR</span>(<span class="number">80</span>)          <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;邮箱&#x27;</span>,</span><br><span class="line">    `state`    <span class="type">INT</span>  <span class="keyword">NOT</span> <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;用户状态，1 禁用，0 正常&#x27;</span>,</span><br><span class="line">    `role_id`       <span class="type">INT</span> UNSIGNED     <span class="keyword">NOT</span> <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;角色编号&#x27;</span>,</span><br><span class="line">    `deleted`<span class="type">INT</span>  <span class="keyword">NOT</span> <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;删除，1 删除，0 未删除&#x27;</span>,</span><br><span class="line">    `create_time`   DATETIME         <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span>  <span class="built_in">CURRENT_TIMESTAMP</span>     COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">    `update_time`   DATETIME         <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span>  <span class="built_in">CURRENT_TIMESTAMP</span>   <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;修改时间&#x27;</span></span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB</span><br><span class="line">  <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8mb4</span><br><span class="line">  <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8mb4_bin</span><br><span class="line">  ROW_FORMAT <span class="operator">=</span> <span class="keyword">Dynamic</span></span><br><span class="line">  COMMENT <span class="string">&#x27;用户表&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="角色表"><a href="#角色表" class="headerlink" title="角色表"></a>角色表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `role`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `role` (</span><br><span class="line">`id`            <span class="type">INT</span> UNSIGNED     <span class="keyword">NOT</span> <span class="keyword">NULL</span>  <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT COMMENT <span class="string">&#x27;角色编号&#x27;</span>,</span><br><span class="line">    `name`<span class="type">VARCHAR</span>(<span class="number">80</span>)      <span class="keyword">NOT</span> <span class="keyword">NULL</span>       COMMENT <span class="string">&#x27;角色名称&#x27;</span>,</span><br><span class="line">    `state`    <span class="type">INT</span>      <span class="keyword">NOT</span> <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;用户状态，1 禁用，0 正常&#x27;</span>,</span><br><span class="line">    `user_id`       <span class="type">INT</span> UNSIGNED     <span class="keyword">NOT</span> <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;用户编号&#x27;</span>,</span><br><span class="line">    `deleted`<span class="type">INT</span>      <span class="keyword">NOT</span> <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;删除，1 删除，0 未删除&#x27;</span>,</span><br><span class="line">    `create_time`   DATETIME         <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span>  <span class="built_in">CURRENT_TIMESTAMP</span>     COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">    `update_time`   DATETIME         <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span>  <span class="built_in">CURRENT_TIMESTAMP</span>   <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;修改时间&#x27;</span></span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB</span><br><span class="line">  <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8mb4</span><br><span class="line">  <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8mb4_bin</span><br><span class="line">  ROW_FORMAT <span class="operator">=</span> <span class="keyword">Dynamic</span></span><br><span class="line">  COMMENT <span class="string">&#x27;角色表&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="菜单资源表"><a href="#菜单资源表" class="headerlink" title="菜单资源表"></a>菜单资源表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `menu`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `menu` (</span><br><span class="line">`id`            <span class="type">INT</span> UNSIGNED      <span class="keyword">NOT</span> <span class="keyword">NULL</span>  <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT COMMENT <span class="string">&#x27;菜单编号&#x27;</span>,</span><br><span class="line">    `name`<span class="type">VARCHAR</span>(<span class="number">80</span>)       <span class="keyword">NOT</span> <span class="keyword">NULL</span>       COMMENT <span class="string">&#x27;菜单资源名称&#x27;</span>,</span><br><span class="line">    `url`<span class="type">VARCHAR</span>(<span class="number">150</span>)      <span class="keyword">NOT</span> <span class="keyword">NULL</span>       COMMENT <span class="string">&#x27;菜单资源路径&#x27;</span>,</span><br><span class="line">    `state`    <span class="type">INT</span>        <span class="keyword">NOT</span> <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;菜单状态，1 禁用，0 正常&#x27;</span></span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB</span><br><span class="line">  <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8mb4</span><br><span class="line">  <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8mb4_bin</span><br><span class="line">  ROW_FORMAT <span class="operator">=</span> <span class="keyword">Dynamic</span></span><br><span class="line">  COMMENT <span class="string">&#x27;菜单资源表&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="角色-菜单中间表"><a href="#角色-菜单中间表" class="headerlink" title="角色-菜单中间表"></a>角色-菜单中间表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `role_menu`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `role_menu` (</span><br><span class="line">`id`            <span class="type">INT</span> UNSIGNED  <span class="keyword">NOT</span> <span class="keyword">NULL</span>  <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT COMMENT <span class="string">&#x27;角色-菜单编号&#x27;</span>,</span><br><span class="line">    `role_id`       <span class="type">INT</span> UNSIGNED  <span class="keyword">NOT</span> <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;角色编号&#x27;</span>,</span><br><span class="line">    `menu_id`       <span class="type">INT</span> UNSIGNED  <span class="keyword">NOT</span> <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;菜单编号&#x27;</span></span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB</span><br><span class="line">  <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8mb4</span><br><span class="line">  <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8mb4_bin</span><br><span class="line">  ROW_FORMAT <span class="operator">=</span> <span class="keyword">Dynamic</span></span><br><span class="line">  COMMENT <span class="string">&#x27;角色-菜单中间表&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="医生表"><a href="#医生表" class="headerlink" title="医生表"></a>医生表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `doctor`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `doctor` (</span><br><span class="line">`id`            <span class="type">INT</span> UNSIGNED  <span class="keyword">NOT</span> <span class="keyword">NULL</span>  <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT COMMENT <span class="string">&#x27;医生编号&#x27;</span>,</span><br><span class="line">    `id_card`<span class="type">VARCHAR</span>(<span class="number">80</span>)      <span class="keyword">NOT</span> <span class="keyword">NULL</span>       COMMENT <span class="string">&#x27;身份证&#x27;</span>,</span><br><span class="line">    `phone`      <span class="type">VARCHAR</span>(<span class="number">30</span>)      <span class="keyword">NOT</span> <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;手机&#x27;</span>,</span><br><span class="line">    `telephone` <span class="type">VARCHAR</span>(<span class="number">30</span>)      <span class="keyword">NOT</span> <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;电话&#x27;</span>,</span><br><span class="line">    `sex`<span class="type">INT</span>              <span class="keyword">NOT</span> <span class="keyword">NULL</span>   COMMENT <span class="string">&#x27;性别，0 男，1 女&#x27;</span>,</span><br><span class="line">    `birthday`<span class="type">DATE</span>              <span class="keyword">NULL</span>   COMMENT <span class="string">&#x27;出生日期&#x27;</span>,</span><br><span class="line">    `age`<span class="type">INT</span>               <span class="keyword">NULL</span>   COMMENT <span class="string">&#x27;年龄&#x27;</span>,</span><br><span class="line">    `email`         <span class="type">VARCHAR</span>(<span class="number">80</span>)          <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;邮箱&#x27;</span>,</span><br><span class="line">    `keshi`         <span class="type">VARCHAR</span>(<span class="number">80</span>)          <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;科室&#x27;</span>,</span><br><span class="line">    `xueli`         <span class="type">VARCHAR</span>(<span class="number">80</span>)          <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;学历&#x27;</span>,</span><br><span class="line">    `<span class="keyword">describe</span>`      <span class="type">VARCHAR</span>(<span class="number">80</span>)          <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;备注&#x27;</span>,</span><br><span class="line">    `in_time`<span class="type">DATE</span>              <span class="keyword">NULL</span>   COMMENT <span class="string">&#x27;入职时间&#x27;</span>,</span><br><span class="line">    `state`    <span class="type">INT</span>     <span class="keyword">NOT</span> <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;状态，0 正常，1 离职&#x27;</span>,</span><br><span class="line">    `user_id`       <span class="type">INT</span> UNSIGNED     <span class="keyword">NOT</span> <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;用户编号&#x27;</span>,</span><br><span class="line">    `deleted`<span class="type">INT</span>   <span class="keyword">NOT</span> <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;删除，1 删除，0 未删除&#x27;</span>,</span><br><span class="line">    `create_time`   DATETIME         <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span>  <span class="built_in">CURRENT_TIMESTAMP</span>     COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">    `update_time`   DATETIME         <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span>  <span class="built_in">CURRENT_TIMESTAMP</span>   <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;修改时间&#x27;</span></span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB</span><br><span class="line">  <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8mb4</span><br><span class="line">  <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8mb4_bin</span><br><span class="line">  ROW_FORMAT <span class="operator">=</span> <span class="keyword">Dynamic</span></span><br><span class="line">  COMMENT <span class="string">&#x27;医生表&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="收费项目表"><a href="#收费项目表" class="headerlink" title="收费项目表"></a>收费项目表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `charge_project`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `charge_project` (</span><br><span class="line">`id`            <span class="type">INT</span> UNSIGNED   <span class="keyword">NOT</span> <span class="keyword">NULL</span>  <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT COMMENT <span class="string">&#x27;收费项编号&#x27;</span>,</span><br><span class="line">    `name`<span class="type">VARCHAR</span>(<span class="number">100</span>)     <span class="keyword">NOT</span> <span class="keyword">NULL</span>       COMMENT <span class="string">&#x27;收费项目名称&#x27;</span>,</span><br><span class="line">    `money`<span class="type">DECIMAL</span>(<span class="number">10</span>,<span class="number">2</span>)    <span class="keyword">NOT</span> <span class="keyword">NULL</span>       COMMENT <span class="string">&#x27;收费金额&#x27;</span>,</span><br><span class="line">    `user_id`       <span class="type">INT</span> UNSIGNED    <span class="keyword">NOT</span> <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;用户编号&#x27;</span>,</span><br><span class="line">    `deleted`<span class="type">INT</span>          <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;删除，1 删除，0 未删除&#x27;</span>,</span><br><span class="line">    `create_time`   DATETIME         <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span>  <span class="built_in">CURRENT_TIMESTAMP</span>     COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">    `update_time`   DATETIME         <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span>  <span class="built_in">CURRENT_TIMESTAMP</span>   <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;修改时间&#x27;</span></span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB</span><br><span class="line">  <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8mb4</span><br><span class="line">  <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8mb4_bin</span><br><span class="line">  ROW_FORMAT <span class="operator">=</span> <span class="keyword">Dynamic</span></span><br><span class="line">  COMMENT <span class="string">&#x27;收费项目表&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="药品表"><a href="#药品表" class="headerlink" title="药品表"></a>药品表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `drug`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `drug` (</span><br><span class="line">`id`                  <span class="type">INT</span> UNSIGNED     <span class="keyword">NOT</span> <span class="keyword">NULL</span>  <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT COMMENT <span class="string">&#x27;药品编号&#x27;</span>,</span><br><span class="line">    `url`      <span class="type">VARCHAR</span>(<span class="number">200</span>)     <span class="keyword">NOT</span> <span class="keyword">NULL</span>         COMMENT <span class="string">&#x27;药品图片URL&#x27;</span>,</span><br><span class="line">    `in_price`      <span class="type">DECIMAL</span>(<span class="number">10</span>,<span class="number">2</span>)    <span class="keyword">NOT</span> <span class="keyword">NULL</span>         COMMENT <span class="string">&#x27;进价&#x27;</span>,</span><br><span class="line">    `out_price`      <span class="type">DECIMAL</span>(<span class="number">10</span>,<span class="number">2</span>)    <span class="keyword">NOT</span> <span class="keyword">NULL</span>         COMMENT <span class="string">&#x27;售价&#x27;</span>,</span><br><span class="line">    `name`            <span class="type">VARCHAR</span>(<span class="number">80</span>)      <span class="keyword">NOT</span> <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;药品名称&#x27;</span>,</span><br><span class="line">    `type`       <span class="type">VARCHAR</span>(<span class="number">80</span>)      <span class="keyword">NOT</span> <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;药品类型&#x27;</span>,</span><br><span class="line">    `simple_description`  <span class="type">VARCHAR</span>(<span class="number">200</span>)         <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;简单介绍&#x27;</span>,</span><br><span class="line">    `expiration_date`     <span class="type">VARCHAR</span>(<span class="number">100</span>)         <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;保质期&#x27;</span>,</span><br><span class="line">    `detail_description`  <span class="type">VARCHAR</span>(<span class="number">255</span>)         <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;详细描述&#x27;</span>,</span><br><span class="line">    `fatory`              <span class="type">VARCHAR</span>(<span class="number">80</span>)          <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;生厂家&#x27;</span>,</span><br><span class="line">    `direction`           <span class="type">VARCHAR</span>(<span class="number">200</span>)         <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;服用说明&#x27;</span>,</span><br><span class="line">    `remark`              <span class="type">VARCHAR</span>(<span class="number">200</span>)         <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;备注&#x27;</span>,</span><br><span class="line">    `number`              <span class="type">INT</span> UNSIGNED         <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;药品库存&#x27;</span>,</span><br><span class="line">    `user_id`             <span class="type">INT</span> UNSIGNED     <span class="keyword">NOT</span> <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;用户编号&#x27;</span>,</span><br><span class="line">    `deleted`      <span class="type">INT</span>       <span class="keyword">NOT</span> <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;删除，1 删除，0 未删除&#x27;</span>,</span><br><span class="line">    `create_time`         DATETIME         <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span>  <span class="built_in">CURRENT_TIMESTAMP</span>     COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">    `update_time`         DATETIME         <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span>  <span class="built_in">CURRENT_TIMESTAMP</span>   <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;修改时间&#x27;</span></span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB</span><br><span class="line">  <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8mb4</span><br><span class="line">  <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8mb4_bin</span><br><span class="line">  ROW_FORMAT <span class="operator">=</span> <span class="keyword">Dynamic</span></span><br><span class="line">  COMMENT <span class="string">&#x27;药品表&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="挂号表"><a href="#挂号表" class="headerlink" title="挂号表"></a>挂号表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `register`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `register` (</span><br><span class="line">`id`            <span class="type">INT</span> UNSIGNED  <span class="keyword">NOT</span> <span class="keyword">NULL</span>  <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT COMMENT <span class="string">&#x27;编号&#x27;</span>,</span><br><span class="line">    `id_card`<span class="type">VARCHAR</span>(<span class="number">50</span>)      <span class="keyword">NOT</span> <span class="keyword">NULL</span>       COMMENT <span class="string">&#x27;身份证&#x27;</span>,</span><br><span class="line">    `medical`      <span class="type">VARCHAR</span>(<span class="number">50</span>)      <span class="keyword">NOT</span> <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;社保号&#x27;</span>,</span><br><span class="line">    `price`     <span class="type">DECIMAL</span>(<span class="number">10</span>,<span class="number">2</span>)    <span class="keyword">NOT</span> <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;挂号费&#x27;</span>,</span><br><span class="line">    `phone`         <span class="type">VARCHAR</span>(<span class="number">30</span>)      <span class="keyword">NOT</span> <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;联系电话&#x27;</span>,</span><br><span class="line">    `self_price`<span class="type">INT</span>    <span class="keyword">NOT</span> <span class="keyword">NULL</span>   COMMENT <span class="string">&#x27;是否自费：0自费 1免费&#x27;</span>,</span><br><span class="line">    `sex`<span class="type">INT</span>  <span class="keyword">NOT</span> <span class="keyword">NULL</span>   COMMENT <span class="string">&#x27;性别：0男 1女&#x27;</span>,</span><br><span class="line">    `age`<span class="type">INT</span>               <span class="keyword">NULL</span>   COMMENT <span class="string">&#x27;年龄&#x27;</span>,</span><br><span class="line">    `work`          <span class="type">VARCHAR</span>(<span class="number">80</span>)          <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;职业&#x27;</span>,</span><br><span class="line">    `look_doctor`   <span class="type">INT</span>  <span class="keyword">NOT</span> <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;初复诊：0初诊 1复诊&#x27;</span>,</span><br><span class="line">    `remark`        <span class="type">VARCHAR</span>(<span class="number">200</span>)         <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;备注&#x27;</span>,</span><br><span class="line">    `state`    <span class="type">INT</span>  <span class="keyword">NOT</span> <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;状态：0挂号 1已住院 2已出院 3已退号&#x27;</span>,</span><br><span class="line">    `doctor_id`     <span class="type">INT</span> UNSIGNED     <span class="keyword">NOT</span> <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;医生编号&#x27;</span>,</span><br><span class="line">    `user_id`       <span class="type">INT</span> UNSIGNED     <span class="keyword">NOT</span> <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;用户编号&#x27;</span>,</span><br><span class="line">    `deleted`<span class="type">INT</span>  <span class="keyword">NOT</span> <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;删除：1删除 0未删除&#x27;</span>,</span><br><span class="line">    `create_time`   DATETIME         <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span>  <span class="built_in">CURRENT_TIMESTAMP</span>     COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">    `update_time`   DATETIME         <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span>  <span class="built_in">CURRENT_TIMESTAMP</span>   <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;修改时间&#x27;</span></span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB</span><br><span class="line">  <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8mb4</span><br><span class="line">  <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8mb4_bin</span><br><span class="line">  ROW_FORMAT <span class="operator">=</span> <span class="keyword">Dynamic</span></span><br><span class="line">  COMMENT <span class="string">&#x27;挂号表&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="住院表"><a href="#住院表" class="headerlink" title="住院表"></a>住院表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `be_hospital`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `be_hospital` (</span><br><span class="line">`id`                  <span class="type">INT</span> UNSIGNED     <span class="keyword">NOT</span> <span class="keyword">NULL</span>  <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT COMMENT <span class="string">&#x27;病人编号&#x27;</span>,</span><br><span class="line">    `nurse_people`  <span class="type">VARCHAR</span>(<span class="number">30</span>)      <span class="keyword">NOT</span> <span class="keyword">NULL</span>         COMMENT <span class="string">&#x27;护理人&#x27;</span>,</span><br><span class="line">    `pat_bed`            <span class="type">VARCHAR</span>(<span class="number">80</span>)      <span class="keyword">NOT</span> <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;病床号&#x27;</span>,</span><br><span class="line">    `antecedent`  <span class="type">DECIMAL</span>(<span class="number">10</span>,<span class="number">2</span>)    <span class="keyword">NOT</span> <span class="keyword">NULL</span>         COMMENT <span class="string">&#x27;交纳押金&#x27;</span>,</span><br><span class="line">    `illness`            <span class="type">VARCHAR</span>(<span class="number">80</span>)      <span class="keyword">NOT</span> <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;病情介绍&#x27;</span>,</span><br><span class="line">    `close_price`  <span class="type">INT</span>    <span class="keyword">NOT</span> <span class="keyword">NULL</span>     COMMENT <span class="string">&#x27;结算状态：0未结清 1已结清&#x27;</span>,</span><br><span class="line">    `state`      <span class="type">INT</span>    <span class="keyword">NOT</span> <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;状态：0正常 1删除&#x27;</span>,</span><br><span class="line">    `user_id`             <span class="type">INT</span> UNSIGNED     <span class="keyword">NOT</span> <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;用户编号&#x27;</span>,</span><br><span class="line">    `deleted`      <span class="type">INT</span>    <span class="keyword">NOT</span> <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;删除，1 删除，0 未删除&#x27;</span>,</span><br><span class="line">    `create_time`         DATETIME         <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span>  <span class="built_in">CURRENT_TIMESTAMP</span>     COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">    `update_time`         DATETIME         <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span>  <span class="built_in">CURRENT_TIMESTAMP</span>   <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;修改时间&#x27;</span></span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB</span><br><span class="line">  <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8mb4</span><br><span class="line">  <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8mb4_bin</span><br><span class="line">  ROW_FORMAT <span class="operator">=</span> <span class="keyword">Dynamic</span></span><br><span class="line">  COMMENT <span class="string">&#x27;住院表&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="药品-病人中间表"><a href="#药品-病人中间表" class="headerlink" title="药品-病人中间表"></a>药品-病人中间表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `drug_people`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `drug_people` (</span><br><span class="line">`id`            <span class="type">INT</span> UNSIGNED  <span class="keyword">NOT</span> <span class="keyword">NULL</span>  <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT COMMENT <span class="string">&#x27;药品-病人编号&#x27;</span>,</span><br><span class="line">    `drug_id`       <span class="type">INT</span> UNSIGNED  <span class="keyword">NOT</span> <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;药品编号&#x27;</span>,</span><br><span class="line">    `patient_id`    <span class="type">INT</span> UNSIGNED  <span class="keyword">NOT</span> <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;病人编号&#x27;</span>,</span><br><span class="line">    `number`        <span class="type">INT</span> UNSIGNED  <span class="keyword">NOT</span> <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;药品数量&#x27;</span>,</span><br><span class="line">    `give_number`   <span class="type">INT</span> UNSIGNED  <span class="keyword">NOT</span> <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;已发药品数量&#x27;</span></span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB</span><br><span class="line">  <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8mb4</span><br><span class="line">  <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8mb4_bin</span><br><span class="line">  ROW_FORMAT <span class="operator">=</span> <span class="keyword">Dynamic</span></span><br><span class="line">  COMMENT <span class="string">&#x27;药品-病人中间表&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="收费项-病人中间表"><a href="#收费项-病人中间表" class="headerlink" title="收费项-病人中间表"></a>收费项-病人中间表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `price_people`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `price_people` (</span><br><span class="line">`id`              <span class="type">INT</span> UNSIGNED  <span class="keyword">NOT</span> <span class="keyword">NULL</span>  <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT COMMENT <span class="string">&#x27;收费项-病人编号&#x27;</span>,</span><br><span class="line">    `charge_id`     <span class="type">INT</span> UNSIGNED  <span class="keyword">NOT</span> <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;收费项编号&#x27;</span>,</span><br><span class="line">    `patient_id`          <span class="type">INT</span> UNSIGNED  <span class="keyword">NOT</span> <span class="keyword">NULL</span>          COMMENT <span class="string">&#x27;病人编号&#x27;</span></span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB</span><br><span class="line">  <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8mb4</span><br><span class="line">  <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8mb4_bin</span><br><span class="line">  ROW_FORMAT <span class="operator">=</span> <span class="keyword">Dynamic</span></span><br><span class="line">  COMMENT <span class="string">&#x27;收费项-病人中间表&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="设计中的问题"><a href="#设计中的问题" class="headerlink" title="设计中的问题"></a>设计中的问题</h3><p>表中定义字段的类型为 <code>TINYINT</code> 时，使用 MyBatis 反向生成器生成的实体类的类型为 <code>Byte</code>，本文在之前是使用 <code>TINYINT</code> 类型，发现这个问题之后，将其改为 <code>INT</code> 类型。</p><p>数据库创建成功后如图所示。</p><img src="/img/hospital/20.png"  />]]></content>
      
      
      <categories>
          
          <category> 医院项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 医院项目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>医院项目环境搭建</title>
      <link href="/2022/07/17/%E5%8C%BB%E9%99%A2%E9%A1%B9%E7%9B%AE%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
      <url>/2022/07/17/%E5%8C%BB%E9%99%A2%E9%A1%B9%E7%9B%AE%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="医院项目环境搭建"><a href="#医院项目环境搭建" class="headerlink" title="医院项目环境搭建"></a>医院项目环境搭建</h2><h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><p>使用 IDEA 工具新建一个 hospital 的 maven 工程项目。</p><p>新建项目。</p><img src="/img/hospital/01.png" style="zoom: 33%;" /><p>选择 Maven 工程来创建工程，JDK 使用1.8版本。</p><img src="/img/hospital/02.png" style="zoom:33%;" /><p>项目名称，项目存放路径及项目包结构的配置。</p><img src="/img/hospital/03.png" style="zoom:33%;" /><p>创建项目成功之后，配置项目的web.xml，首先新建webapp目录，用于存放 web.xml 文件。</p><img src="/img/hospital/04.png" style="zoom: 25%;" /><p>根据下图所示，添加 webapp 目录。</p><img src="/img/hospital/06.png" style="zoom: 25%;" /><p>添加 web.xml 文件。</p><img src="/img/hospital/07.png" style="zoom:25%;" /><p>配置 web.xml 文件。</p><img src="/img/hospital/08.png" style="zoom:25%;" /><p>配置项目的 war 包文件。</p><img src="/img/hospital/09.png" style="zoom:25%;" /><p>到这里项目就创建完成。</p><img src="/img/hospital/10.png" style="zoom:25%;" /><h3 id="引入-jar-依赖"><a href="#引入-jar-依赖" class="headerlink" title="引入 jar 依赖"></a>引入 jar 依赖</h3><p>在 <code>pom.xml</code> 文件中添加下面代码，引入项目的相关依赖。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--添加打包方式，将项目打成war包--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">&lt;!--SSM整合：spring springMVC mybatis mysql等 --&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 集中定义依赖版本号 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">spring.version</span>&gt;</span>5.2.13.RELEASE<span class="tag">&lt;/<span class="name">spring.version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">mybatis.version</span>&gt;</span>3.5.6<span class="tag">&lt;/<span class="name">mybatis.version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">mybatis.spring.version</span>&gt;</span>1.3.3<span class="tag">&lt;/<span class="name">mybatis.spring.version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">pagehelper.version</span>&gt;</span>5.1.10<span class="tag">&lt;/<span class="name">pagehelper.version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">mysql.version</span>&gt;</span>8.0.23<span class="tag">&lt;/<span class="name">mysql.version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">druid.version</span>&gt;</span>1.2.3<span class="tag">&lt;/<span class="name">druid.version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">servlet-api.version</span>&gt;</span>4.0.1<span class="tag">&lt;/<span class="name">servlet-api.version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">jackson.version</span>&gt;</span>2.9.6<span class="tag">&lt;/<span class="name">jackson.version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">log4j.version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">log4j.version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">junit.version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">junit.version</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- spring --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-tx<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aspects<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- 文件上传 --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- Mybatis --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mybatis.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- mybatis和spring整合依赖 --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mybatis.spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- 分页插件 --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;pagehelper.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- MySql --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mysql.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- 连接池 --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;druid.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- servlet --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;servlet-api.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- Jackson Json处理工具包 --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;jackson.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- log4j --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;log4j.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- junit --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;junit.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--@Resource注解的依赖--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.annotation<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.annotation-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">&lt;!-- 插件配置 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span><span class="comment">&lt;!--所在的目录--&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                   <span class="comment">&lt;!--包括目录下的.properties,.xml 文件都会被扫描到--&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.*<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">           <span class="comment">&lt;!-- 设置项目的编译版本 --&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">           <span class="comment">&lt;!-- 设置tomcat插件 --&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat7-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                   <span class="comment">&lt;!-- 指定端口 --&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">port</span>&gt;</span>8088<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">                   <span class="comment">&lt;!-- 请求路径 --&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">path</span>&gt;</span>/<span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">uriEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">uriEncoding</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">           <span class="comment">&lt;!--反向生成插件--&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.generator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-generator-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                   <span class="comment">&lt;!--配置文件的路径--&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">configurationFile</span>&gt;</span>src/main/resources/generatorConfig.xml<span class="tag">&lt;/<span class="name">configurationFile</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">overwrite</span>&gt;</span>true<span class="tag">&lt;/<span class="name">overwrite</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                       <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.generator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                       <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-generator-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                       <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="编写-MyBatis-配置文件"><a href="#编写-MyBatis-配置文件" class="headerlink" title="编写 MyBatis 配置文件"></a>编写 MyBatis 配置文件</h3><p>在 resource 目录下新建 MyBatis 的配置文件：<code>mybatis.xml</code>。</p><blockquote><p>文件代码：</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;logImpl&quot;</span> <span class="attr">value</span>=<span class="string">&quot;LOG4J&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--spring 接管其他的工作 数据源 映射文件注册 插件--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里 MyBatis 管理日志，所以需要配置日志的配置文件：<code>log4j.properties</code>。</p><blockquote><p>文件代码：</p></blockquote><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Global logging configuration info warning error</span></span><br><span class="line"><span class="attr">log4j.rootLogger</span>=<span class="string">DEBUG,stdout</span></span><br><span class="line"><span class="comment"># Console output...</span></span><br><span class="line"><span class="attr">log4j.appender.stdout</span>=<span class="string">org.apache.log4j.ConsoleAppender</span></span><br><span class="line"><span class="attr">log4j.appender.stdout.layout</span>=<span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="attr">log4j.appender.stdout.layout.ConversionPattern</span>=<span class="string">%5p [%t] - %m%n</span></span><br></pre></td></tr></table></figure><p>MyBatis 的其他工作由 Spring 接管。</p><h3 id="编写-Spring-配置文件"><a href="#编写-Spring-配置文件" class="headerlink" title="编写 Spring 配置文件"></a>编写 Spring 配置文件</h3><p>在 resource 目录下新建 Spring 的配置文件：<code>spring.xml</code>。</p><blockquote><p>文件代码：</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:tx</span>=<span class="string">&quot;http://www.springframework.org/schema/tx&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd &quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--扫描包的配置：这些包中添加注解之后对象的创建权限就交给spring容器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.hospital.mapper,com.hospital.service&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- spring 整合mybatis部分 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--扫描并读取jdbc的配置文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">&quot;classpath*:jdbc.properties&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--创建数据源--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--驱动可以省略，根据url自动检查出驱动--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driver&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.username&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--创建 sqlSessionFactory--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sqlSessionFactory&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--如果有mybatis的单独配置文件，需要在这里引入mybatis的配置文件--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;configLocation&quot;</span> <span class="attr">value</span>=<span class="string">&quot;classpath:mybatis.xml&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--配置类型别名--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;typeAliasesPackage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.hospital.pojo&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--配置映射文件扫描--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;property name=&quot;mapperLocations&quot; value=&quot;classpath:com/hospital/mapper/*.xml&quot;/&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--插件配置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;plugins&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--分页插件配置--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.github.pagehelper.PageInterceptor&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;properties&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">value</span>&gt;</span></span><br><span class="line">                            reasonable=true</span><br><span class="line">                        <span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 映射mybatis的目录 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--Mapper接口所在的包名，spring自动查询指定包下的mapper，有了MapperScannerConfigurer，</span></span><br><span class="line"><span class="comment">    就不需要我们去为每个映射接口去声明一个bean了。大大缩减了开发的效率。--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;mapperScannerConfigurer&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sqlSessionFactoryBeanName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;sqlSessionFactory&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;basePackage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.hospital.mapper&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 通过注解方式实现事务 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:annotation-driven</span> <span class="attr">transaction-manager</span>=<span class="string">&quot;transactionManager&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;transactionManager&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Spring 配置文件中有涉及到数据库的连接，所以需要配置连接数据库的参数配置文件：<code>jdbc.properties</code>。</p><blockquote><p>文件代码：</p></blockquote><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">jdbc.driver</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="attr">jdbc.url</span>=<span class="string">jdbc:mysql://127.0.0.1:3306/hospital?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false&amp;serverTimezone=GMT</span></span><br><span class="line"><span class="attr">jdbc.username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">jdbc.password</span>=<span class="string">123456</span></span><br></pre></td></tr></table></figure><h3 id="编写-SpringMVC-配置文件"><a href="#编写-SpringMVC-配置文件" class="headerlink" title="编写 SpringMVC 配置文件"></a>编写 SpringMVC 配置文件</h3><p>在 resource 目录下新建 SpringMVC 的配置文件：<code>springmvc.xml</code>。</p><blockquote><p>文件代码：</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">&quot;http://www.springframework.org/schema/mvc&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--springmvc的配置文件:控制器的bean对象都在这里扫描--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.hospital.controller&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--视图解析器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;internalResourceViewResolver&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.html&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--静态资源处理--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">&quot;/assets/**&quot;</span> <span class="attr">location</span>=<span class="string">&quot;/assets/&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">&quot;/Css/**&quot;</span> <span class="attr">location</span>=<span class="string">&quot;/Css/&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">&quot;/Doctor/**&quot;</span> <span class="attr">location</span>=<span class="string">&quot;/doctor/&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">&quot;/front/**&quot;</span> <span class="attr">location</span>=<span class="string">&quot;/front/&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">&quot;/hospital/**&quot;</span> <span class="attr">location</span>=<span class="string">&quot;/hospital/&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">&quot;/Images/**&quot;</span> <span class="attr">location</span>=<span class="string">&quot;/Images/&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">&quot;/Js/**&quot;</span> <span class="attr">location</span>=<span class="string">&quot;/Js/&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">&quot;/medicine/**&quot;</span> <span class="attr">location</span>=<span class="string">&quot;/medicine/&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">&quot;/registration/**&quot;</span> <span class="attr">location</span>=<span class="string">&quot;/registration/&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">&quot;/Resource/**&quot;</span> <span class="attr">location</span>=<span class="string">&quot;/Resource/&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">&quot;/Role/**&quot;</span> <span class="attr">location</span>=<span class="string">&quot;/Role/&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">&quot;/User/**&quot;</span> <span class="attr">location</span>=<span class="string">&quot;/User/&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">&quot;/index/**&quot;</span> <span class="attr">location</span>=<span class="string">&quot;/index/&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--文件上传--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;multipartResolver&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.multipart.commons.CommonsMultipartResolver&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意：在配置文件的过程中，需要新建包，否则会报错，下图为项目的结构：</p><img src="/img/hospital/11.png" style="zoom:25%;" /><h3 id="添加前端的静态资源文件"><a href="#添加前端的静态资源文件" class="headerlink" title="添加前端的静态资源文件"></a>添加前端的静态资源文件</h3><p>在 webapp 目录下添加提供的静态资源文件。</p><img src="/img/hospital/12.png" style="zoom:33%;" /><h3 id="编写-web-xml-配置文件"><a href="#编写-web-xml-配置文件" class="headerlink" title="编写 web.xml 配置文件"></a>编写 web.xml 配置文件</h3><blockquote><p>文件代码：</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;4.0&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>/index/index.html<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--spring的配置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--contextConfigLocation：表示用于加载 Bean的配置文件</span></span><br><span class="line"><span class="comment">        classpath和classpath*区别：</span></span><br><span class="line"><span class="comment">        classpath：只会到你的class路径中查找找文件。</span></span><br><span class="line"><span class="comment">        classpath*：不仅包含class路径，还包括jar文件中（class路径）进行查找。</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath*:spring.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener</span><br><span class="line">        <span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--SpringMVC的配置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet</span><br><span class="line">        <span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 创建前端控制器的时候读取springmvc配置文件启动ioc容器 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath*:springmvc.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Tomcat启动就创建此对象 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置拦截路径url，所有请求都会被前端控制器拦截处理 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 使用Rest风格的URI 将页面普通的post请求转为指定的delete或者put请求</span></span><br><span class="line"><span class="comment">    原理：在Ajax中发送post请求后，带_method参数，将其修改为PUT，或者DELETE请求--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>httpMethodFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span></span><br><span class="line">            org.springframework.web.filter.HiddenHttpMethodFilter</span><br><span class="line">        <span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>httpMethodFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--注册字符集过滤器：post请求中文乱码问题的解决方案--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>characterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter</span><br><span class="line">        <span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--指定字符集--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--强制request使用字符集encoding--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>forceRequestEncoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--强制response使用字符集encoding--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>forceResponseEncoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>characterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>点击Maven 下的 tomcat 插件启动项目。</p><p><img src="/img/hospital/14.png"></p><p>项目启动后，访问 <a href="http://localhost:8088，能访问到页面表示项目搭建成功。">http://localhost:8088，能访问到页面表示项目搭建成功。</a></p><p><img src="/img/hospital/13.png"></p><h3 id="搭建过程报错"><a href="#搭建过程报错" class="headerlink" title="搭建过程报错"></a>搭建过程报错</h3><p>在搭建的过程中，我启动 tomcat 测试时，会访问不了页面，如下图所示：</p><p><img src="/img/hospital/15.png"></p><p>通过查阅资料，找到了可能出现问题的原因是，我在pom.xml 文件下没有配置下面代码</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                 <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.*<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="/img/hospital/16.png" style="zoom:33%;" /><p>配置之后，就可以访问到前端页面。</p>]]></content>
      
      
      <categories>
          
          <category> 医院项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL环境搭建</title>
      <link href="/2022/07/14/MySQL%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
      <url>/2022/07/14/MySQL%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="MySQL环境搭建"><a href="#MySQL环境搭建" class="headerlink" title="MySQL环境搭建"></a>MySQL环境搭建</h2><p><strong>MySQL的4大版本</strong></p><blockquote><ul><li>MySQL Community Server 社区版本，开源免费，自由下载，但不提供官方技术支持，适用于大多数普通用户。</li><li>MySQL Enterprise Edition 企业版本，需付费，不能在线下载，可以试用30天。提供了更多的 功能和更完备的技术支持，更适合于对数据库的功能和可靠性要求较高的企业客户。</li><li>MySQL Cluster 集群版，开源免费。用于架设集群服务器，可将几个MySQL Server封装成一个 Server。需要在社区版或企业版的基础上使用。</li><li>MySQL Cluster CGE 高级集群版，需付费。</li></ul></blockquote><ul><li>目前最新版本为 <code>8.0.29</code> ，发布时间 <code>2022年4月26号</code>。8.0.0 版本是在2016年9月12日发布。</li><li>本文使用 <code>8.0.26</code> 的社区版。</li></ul><h3 id="1-MySQL的下载"><a href="#1-MySQL的下载" class="headerlink" title="1. MySQL的下载"></a>1. MySQL的下载</h3><p><strong>步骤1</strong>：打开MySQL官方地址：<a href="https://www.mysql.com/%E3%80%82">https://www.mysql.com/。</a></p><p><img src="/img/MySQL/1002.png"></p><p><strong>步骤2</strong>：进入官网后，点击 <strong>DOWNLOADS</strong>，进入下载页面。然后，点击 <strong>MySQL Community(GPL) Downloads</strong></p><p><img src="/img/MySQL/1003.png"></p><p><strong>步骤3</strong>：点击 <strong>MySQL Community Server</strong></p><p><img src="/img/MySQL/1004.png"></p><p><strong>步骤4</strong>：在 <strong>General Availability(GA) Releases</strong> 中选择适合的版本</p><p>Windows平台下提供两种安装文件：MySQL二进制分发版（.msi安装文件）和免安装版（.zip压缩文件）。</p><p>推荐使用<strong>二进制分发版</strong>进行安装，因为该版本提供了图形化的安装向导过程，比其他的分发版使用起来要简单，不再需要其他工具启动就可以运行MySQL。</p><ul><li>在 Windows 系统下推荐下载 MSI 安装程序，点击 <strong>Go to Download Page</strong> 进行下载。</li></ul><p><img src="/img/MySQL/1005.png"></p><ul><li>Windows 下的 MySQL8.0 安装有两种安装程序：<ul><li>mysql-installer-web-community-8.0.29.0.msi 下载程序大小：2.3M；安装时需要联网安装组件。 </li><li>mysql-installer-community-8.0.29.0.msi 下载程序大小：439.6M；安装时离线安装即可（<strong>推荐</strong>）。</li></ul></li></ul><p><img src="/img/MySQL/1006.png"></p><ul><li>本篇文章选择安装的是8.0.26版本，而现在最新版本为8.0.29，若要下载8.0.26版本，选择Archives，选择8.0.26版本下载。</li></ul><p><img src="/img/MySQL/1008.png"></p><ul><li>若要安装MySQL5.7版本的话，选择Archives，接着选择MySQL5.7的相应版本即可。本文下载MySQL5.7.34的版本。</li></ul><p><img src="/img/MySQL/1007.png"></p><p><strong>步骤5</strong>：下载MySQL安装包。注意：在下载安装包时，会弹出需要登录Oracle账户，本篇文章默认Oracle账户已登录的状态。MySQL安装包如下图所示。</p><p><img src="/img/MySQL/1009.png"></p><h3 id="2-MySQL8-0的安装"><a href="#2-MySQL8-0的安装" class="headerlink" title="2. MySQL8.0的安装"></a>2. MySQL8.0的安装</h3><p>MySQL下载完成后，找到下载文件，双击进行安装，具体操作步骤如下。</p><p><strong>步骤1</strong>：双击下载的 mysql-installer-community-8.0.26.0.msi 文件，打开安装向导。</p><img src="/img/MySQL/1010.png" style="zoom: 33%;" /><p><strong>步骤2</strong>：打开“<strong>Choosing a Setup Type</strong>”（选择安装类型）窗口，总有5种安装类型：</p><ul><li>Developer Default（默认安装类型）</li><li>Server only（仅作为服务器）</li><li>Client only（仅作为客户端）</li><li>Full（完全安装）</li><li>Custom（自定义安装）。</li></ul><p>这里选择“<strong>Custom</strong>”类型按钮，单击“<strong>Next</strong>(下 一步)”按钮。</p><img src="/img/MySQL/1011.png" style="zoom: 33%;" /><p><strong>步骤3</strong>：打开“<strong>Select Products</strong>” （选择产品）窗口，可以定制需要安装的产品清单。本文中，选择“MySQL Server 8.0.26-X64”后，单击“→”添加按钮，即可选择安装MySQL服务器，如图所示。采用通用的方法，可以添加其他需要安装的产品。</p><img src="/img/MySQL/1012.png" style="zoom: 33%;" /><p>此时如果直接“<strong>Next</strong>”（下一步），则产品的安装路径是默认的。如果想要自定义安装目录，则可以选中对应的产品，然后在下面会出现“<strong>Advanced Options</strong>”（高级选项）的超链接。</p><img src="/img/MySQL/1013.png" style="zoom: 33%;" /><p>单击“<strong>Advanced Options</strong>”（高级选项）则会弹出安装目录的选择窗口，此时可以分别设置 MySQL的服务程序安装目录和数据存储目录。如果不设置，默认分别在C盘的Program Files目录和 ProgramData目录（注意：这是隐藏目录）。如果自定义安装目录，自定义的目录必须没有中文。另外，建议安装目录和数据目录分开存放。</p><img src="/img/MySQL/1014.png" style="zoom:50%;" /><p><strong>步骤4</strong>：在上一步选择好自定义目录之后，点击“<strong>OK</strong>”，再单击“<strong>Next</strong>”（下一步）进入确认窗口。单击 “<strong>Execute</strong>”（执行）按钮开始安装。</p><img src="/img/MySQL/1015.png" style="zoom: 33%;" /><p><strong>步骤5</strong>：安装完成后在“<strong>Status</strong>”（状态）列表下将显示“<strong>Complete</strong>”（安装完成）。</p><img src="/img/MySQL/1016.png" style="zoom: 33%;" /><h3 id="3-MySQL的配置"><a href="#3-MySQL的配置" class="headerlink" title="3. MySQL的配置"></a>3. MySQL的配置</h3><p>MySQL安装之后，需要对服务器进行配置。具体的配置步骤如下。 </p><p><strong>步骤1</strong>：在安装完成后，单击“<strong>Next</strong>”（下一步）按钮，就可以进入产品配置窗口，如图所示。</p><img src="/img/MySQL/1017.png" style="zoom: 33%;" /><p><strong>步骤2</strong>：单击“<strong>Next</strong>”（下一步）按钮，进入MySQL服务器类型配置窗口，如图所示。端口号一般选择默认端口号3306。</p><img src="/img/MySQL/1018.png" style="zoom: 33%;" /><p>其中，“Config Type”选项用于设置服务器的类型。而服务器的类型共有三种，如图所示。</p><img src="/img/MySQL/1019.png" style="zoom: 33%;" /><ul><li>Development Computer（开发机器） ：该选项代表典型个人用桌面工作站。此时机器上需要运行多个应用程序，那么MySQL服务器将占用最少的系统资源。 </li><li>Server Computer（服务器） ：该选项代表服务器，MySQL服务器可以同其他服务器应用程序一起 运行，例如Web服务器等。MySQL服务器配置成适当比例的系统资源。 </li><li>Dedicated Computer（专用服务器） ：该选项代表只运行MySQL服务的服务器。MySQL服务器配置 成使用所有可用系统资源。</li></ul><p><strong>步骤3</strong>：单击“<strong>Next</strong>”（下一步）按钮，打开设置授权方式窗口。其中，上面的选项是MySQL8.0提供的新的授权方式，采用SHA256基础的密码加密方法；下面的选项是传统授权方法（保留5.x版本兼容性）。</p><img src="/img/MySQL/1020.png" style="zoom:33%;" /><p><strong>步骤4</strong>：单击“<strong>Next</strong>”（下一步）按钮，打开设置服务器root超级管理员的密码窗口，如图所示，需要输入两次同样的登录密码。也可以通过“Add User”添加其他用户，添加其他用户时，需要指定用户名、允许 该用户名在哪台&#x2F;哪些主机上登录，还可以指定用户角色等。此处暂不添加用户，用户管理在MySQL高级 特性篇中讲解。</p><img src="/img/MySQL/1021.png" style="zoom:33%;" /><p><strong>步骤5</strong>：单击“<strong>Next</strong>”（下一步）按钮，打开设置服务器名称窗口，如图所示。该服务名会出现在Windows 服务列表中，也可以在命令行窗口中使用该服务名进行启动和停止服务。本书将服务名设置为 “MySQL80”。如果希望开机自启动服务，也可以勾选“Start the MySQL Server at System Startup”选项（推 荐）。</p><p>下面是选择以什么方式运行服务？可以选择“Standard System Account”(标准系统用户)或者“Custom User” (自定义用户)中的一个。这里推荐前者。</p><img src="/img/MySQL/1022.png" style="zoom:33%;" /><p><strong>步骤6</strong>：单击“Next”（下一步）按钮，打开确认设置服务器窗口，单击“Execute”（执行）按钮。</p><img src="/img/MySQL/1023.png" style="zoom:33%;" /><p><strong>步骤7</strong>：完成配置，如图所示。单击“Finish”（完成）按钮，即可完成服务器的配置。</p><img src="/img/MySQL/1024.png" style="zoom:33%;" /><p><strong>步骤8</strong>：如果还有其他产品需要配置，可以选择其他产品，然后继续配置。如果没有，直接选择“Next” （下一步），直接完成整个安装和配置过程。</p><img src="/img/MySQL/1025.png" style="zoom: 33%;" /><p><strong>步骤9</strong>：结束安装和配置。</p><img src="/img/MySQL/1026.png" style="zoom: 33%;" /><h3 id="4-环境变量的配置"><a href="#4-环境变量的配置" class="headerlink" title="4. 环境变量的配置"></a>4. 环境变量的配置</h3><p>如果不配置MySQL环境变量，就不能在命令行直接输入MySQL登录命令。配置MySQL的环境变量步骤如下： </p><p><strong>步骤1</strong>：在桌面上右击【<strong>此电脑</strong>】图标，在弹出的快捷菜单中选择【<strong>属性</strong>】菜单命令。 </p><p><strong>步骤2</strong>：打开【<strong>系统</strong>】窗口，单击【<strong>高级系统设置</strong>】链接。 </p><p><strong>步骤3</strong>：打开【<strong>系统属性</strong>】对话框，选择【<strong>高级</strong>】选项卡，然 后单击【<strong>环境变量</strong>】按钮。 </p><p><strong>步骤4</strong>：打开【<strong>环境变量</strong>】对话框，在系统变量列表中选择path变量。 </p><p><strong>步骤 5</strong>：单击【<strong>编辑</strong>】按钮，在【<strong>编辑环境变量</strong>】对话框中，将MySQL应用程序的bin目录（D:\software\MySQL\MySQL Server 8.0\bin）添加到变量值中，用分号将其与其他路径分隔开。 </p><p><strong>步骤6</strong>：添加完成 之后，单击【确定】按钮，这样就完成了配置path变量的操作，然后就可以直接输入MySQL命令来登录数据库了。</p><img src="/img/MySQL/1027.png" style="zoom: 25%;" /><h3 id="5-查询版本测试"><a href="#5-查询版本测试" class="headerlink" title="5. 查询版本测试"></a>5. 查询版本测试</h3><p>使用”win+r“快捷键调出黑框，输入 <code>mysql --version</code>  命令查询MySQL的版本号。如图所示，表示安装MySQL成功。</p><img src="/img/MySQL/1028.png" style="zoom:38%;" />]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL索引详解</title>
      <link href="/2022/07/12/MySQL%E7%B4%A2%E5%BC%95%E8%AF%A6%E8%A7%A3/"/>
      <url>/2022/07/12/MySQL%E7%B4%A2%E5%BC%95%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h3 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h3><p>server 流程的组件：连接器 –&gt; 分析器 –&gt; 优化器 –&gt; 执行器</p><ul><li><p>连接器：管理连接、验证权限</p></li><li><p>分析器：词法分析、语法分析</p></li><li><p>优化器：<strong>CBO</strong>（基于成本的优化，使用比较广泛）、RBO（基于规则的优化），组件无法进行控制。</p></li><li><p>执行器：用来跟存储引擎直接做交互</p></li></ul><p>存储引擎：innodb，myisam，menory </p><ul><li>含义：不同的数据文件在磁盘的不同组织形式</li></ul><p>innodb 与 myisam 的区别</p><ul><li>innodb 支持事务，myisam不支持</li><li>innodb支持外键，myisam不支持</li><li>innodb支持表锁和行锁，myisam只支持表锁</li><li>innodb在5.6版本之后支持全文检索，而myisam一直支持</li><li>innodb索引的叶子节点直接存放数据，而myisam存放地址</li></ul><p>innodb功能这么强大，为什么还要用myisam</p><blockquote><p>myisam是MySQL自带的原生的存储引擎，而innodb是另外一家公司开发出来的一个插件的存储引擎。在用innodb时，发现其强大之处，所以将innodb集成到MySQL里面去，而MySQL从5.5版本之后，默认的版本是innodb而不是myisam。</p><p>但myisam有一个强大的点：统计总数。</p></blockquote><p>全文索引</p><blockquote><p>案例：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">有一张名为 content 的表，表中字段有 id、content、title，现在需要把这张表中 content 字段包含 java 关键字的文章都取出来，怎么操作？</span><br></pre></td></tr></table></figure><p>全文检索类似于java里面的ES（ElasticSearch），ES前身是solr，在solr之前是lucene，这些都是Java中专门做全文检索的。</p><p>在MySQL中很少用全文检索，知道其基本概念即可。</p></blockquote><p>SQL解析：antlr</p><p>扩展知识</p><blockquote><p>数据库的 token</p><p>shardingsphere 组件：用于对应的分库分表，apache的顶级项目。</p></blockquote><h3 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h3><p><strong>哪些数据结构可以存储键值对</strong></p><ul><li>hash</li><li>树</li></ul><p>MySQL中menory存储引擎使用hash索引，同时innodb支持自适应hash</p><p>局部性原理：数据和程序都有集聚成群的倾向，分为空间局部性和时间局部性</p><p>磁盘预读：内存跟磁盘在进行交互的时候要保证每次读取需要一个逻辑单位，而这个逻辑单位叫做页，或者叫 datapage，一般都是4k或者8k，在进行读取的时候，一般都是4k的整数倍。例如，innodb每次读取16kb的数据。</p><p>MySQL在众多树中，为什么选择B+树来存储键值对？</p><blockquote><p>B+树相比其它树，优势：</p><ul><li>是多叉树</li><li>节点有序</li><li>是一颗平衡树</li><li>每一个节点可以存储多条记录</li></ul></blockquote><p>MySQL的索引一般有几层？</p><blockquote><p>一般情况下，3到4层就足以支撑千万级别的表查询。</p></blockquote><p>创建索引的字段是长了好还是短了好？</p><blockquote><p>短了好。原因是在层数不变的情况下，可以存储更多的数据量。</p></blockquote><p>在创建表的时候，是用代理主键还是自然主键？</p><blockquote><ul><li>代理主键：跟业务无关的列；</li><li>自然主键：跟业务相关的列</li></ul><p>能使用代理主键尽可能多的使用代理主键</p></blockquote><p>主键设置好之后，要不要自增？</p><blockquote><p>在满足业务的情况下，尽可能自增。不自增会增加索引的维护成本。</p></blockquote><p>在分布式应用场景中，自增id还适用吗？</p><blockquote><p>不能适用。使用雪花算法（snowflake），也称自定义id生成器</p></blockquote><p>面试问题还有：回表、索引覆盖、最左匹配、索引下推等名词的理解。</p><p>聚簇索引与非聚簇索引的区别：数据跟索引是否聚集存储 。</p><blockquote><p>innodb的主键索引就是聚簇索引：</p><blockquote><p>必须要包含一个主键列的：key。如果在创建表的时候制定了主键，那么key就是主键；如果没有主键，那么key就是唯一键；如果唯一键也没有，那么key就是6字节的rowid。</p></blockquote><p>6字节的rowid够不够存？</p><blockquote><p>够</p></blockquote></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Hexo和GitHub搭建个人博客</title>
      <link href="/2022/07/11/%E4%BD%BF%E7%94%A8Hexo%E5%92%8CGitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2022/07/11/%E4%BD%BF%E7%94%A8Hexo%E5%92%8CGitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<p>本篇是记录我使用 Hexo 和 GitHub 搭建一个免费的个人博客的过程。 </p><h2 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h2><h2 id="安装-Nodejs"><a href="#安装-Nodejs" class="headerlink" title="安装 Nodejs"></a>安装 Nodejs</h2><h2 id="GitHub-环境配置"><a href="#GitHub-环境配置" class="headerlink" title="GitHub 环境配置"></a>GitHub 环境配置</h2><h2 id="使用-Hexo-搭建个人博客"><a href="#使用-Hexo-搭建个人博客" class="headerlink" title="使用 Hexo 搭建个人博客"></a>使用 Hexo 搭建个人博客</h2><h2 id="选择-Hexo-主题"><a href="#选择-Hexo-主题" class="headerlink" title="选择 Hexo 主题"></a>选择 Hexo 主题</h2><h2 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h2>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
